{"instance_id": "astropy__astropy-12907", "tests_passing_in_original_repo": ["astropy/modeling/tests/test_separable.py::test_coord_matrix", "astropy/modeling/tests/test_separable.py::test_cdot", "astropy/modeling/tests/test_separable.py::test_cstack", "astropy/modeling/tests/test_separable.py::test_arith_oper", "astropy/modeling/tests/test_separable.py::test_separable[compound_model0-result0]", "astropy/modeling/tests/test_separable.py::test_separable[compound_model1-result1]", "astropy/modeling/tests/test_separable.py::test_separable[compound_model2-result2]", "astropy/modeling/tests/test_separable.py::test_separable[compound_model3-result3]", "astropy/modeling/tests/test_separable.py::test_separable[compound_model4-result4]", "astropy/modeling/tests/test_separable.py::test_separable[compound_model5-result5]", "astropy/modeling/tests/test_separable.py::test_custom_model_separable"]}
{"instance_id": "astropy__astropy-14182", "tests_passing_in_original_repo": ["astropy/io/ascii/tests/test_rst.py::test_read_normal", "astropy/io/ascii/tests/test_rst.py::test_read_normal_names", "astropy/io/ascii/tests/test_rst.py::test_read_normal_names_include", "astropy/io/ascii/tests/test_rst.py::test_read_normal_exclude", "astropy/io/ascii/tests/test_rst.py::test_read_unbounded_right_column", "astropy/io/ascii/tests/test_rst.py::test_read_unbounded_right_column_header", "astropy/io/ascii/tests/test_rst.py::test_read_right_indented_table", "astropy/io/ascii/tests/test_rst.py::test_trailing_spaces_in_row_definition", "astropy/io/ascii/tests/test_rst.py::test_write_normal"]}
{"instance_id": "astropy__astropy-14365", "tests_passing_in_original_repo": ["astropy/io/ascii/tests/test_qdp.py::test_get_tables_from_qdp_file", "astropy/io/ascii/tests/test_qdp.py::test_roundtrip", "astropy/io/ascii/tests/test_qdp.py::test_read_example", "astropy/io/ascii/tests/test_qdp.py::test_roundtrip_example", "astropy/io/ascii/tests/test_qdp.py::test_roundtrip_example_comma", "astropy/io/ascii/tests/test_qdp.py::test_read_write_simple", "astropy/io/ascii/tests/test_qdp.py::test_read_write_simple_specify_name", "astropy/io/ascii/tests/test_qdp.py::test_get_lines_from_qdp"]}
{"instance_id": "astropy__astropy-14995", "tests_passing_in_original_repo": ["astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data10-data20]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data11-data21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data12-data22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data13-data23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data14-data24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data15-data25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data[data16-data26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_invalid", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data10-data20]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data11-data21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data12-data22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data13-data23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data14-data24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data15-data25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data16-data26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_identical[data17-data27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_not_identical[data10-data20]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_not_identical[data11-data21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_not_identical[data12-data22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_unit_not_identical[data13-data23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_wcs[None-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_wcs[None-wcs21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_wcs[wcs12-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_wcs[wcs13-wcs23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_wcs[wcs14-wcs24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[None-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[None-False]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[True-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[False-False]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[True-False]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[False-True]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[True-True]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[mask17-mask27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[mask18-mask28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[mask19-mask29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[mask110-mask210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[mask111-mask211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks[mask112-mask212]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_data_masks_invalid", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-1-uncert10-data20]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.5-uncert11-data21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.25-uncert12-data22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0-uncert13-data23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.25-uncert14-data24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.5-uncert15-data25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[1-uncert16-data26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-1-uncert17-data27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.5-uncert18-data28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.25-uncert19-data29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0-uncert110-data210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.25-uncert111-data211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.5-uncert112-data212]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[1-uncert113-data213]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-1-uncert114-data214]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.5-uncert115-data215]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.25-uncert116-data216]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0-uncert117-data217]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.25-uncert118-data218]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.5-uncert119-data219]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[1-uncert120-data220]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-1-uncert121-data221]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.5-uncert122-data222]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[-0.25-uncert123-data223]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0-uncert124-data224]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.25-uncert125-data225]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[0.5-uncert126-data226]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation[1-uncert127-data227]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-1-uncert10-data20]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.5-uncert11-data21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.25-uncert12-data22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0-uncert13-data23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.25-uncert14-data24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.5-uncert15-data25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[1-uncert16-data26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-1-uncert17-data27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.5-uncert18-data28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.25-uncert19-data29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0-uncert110-data210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.25-uncert111-data211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.5-uncert112-data212]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[1-uncert113-data213]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-1-uncert114-data214]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.5-uncert115-data215]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.25-uncert116-data216]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0-uncert117-data217]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.25-uncert118-data218]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.5-uncert119-data219]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[1-uncert120-data220]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-1-uncert121-data221]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.5-uncert122-data222]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[-0.25-uncert123-data223]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0-uncert124-data224]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.25-uncert125-data225]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[0.5-uncert126-data226]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_basic_with_correlation[1-uncert127-data227]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-1-uncert10-data20]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.5-uncert11-data21]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.25-uncert12-data22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0-uncert13-data23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.25-uncert14-data24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.5-uncert15-data25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[1-uncert16-data26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-1-uncert17-data27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.5-uncert18-data28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.25-uncert19-data29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0-uncert110-data210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.25-uncert111-data211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.5-uncert112-data212]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[1-uncert113-data213]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-1-uncert114-data214]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.5-uncert115-data215]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.25-uncert116-data216]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0-uncert117-data217]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.25-uncert118-data218]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.5-uncert119-data219]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[1-uncert120-data220]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-1-uncert121-data221]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.5-uncert122-data222]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[-0.25-uncert123-data223]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0-uncert124-data224]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.25-uncert125-data225]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[0.5-uncert126-data226]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_basic_with_correlation[1-uncert127-data227]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_basic_with_correlation_array", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_with_correlation_unsupported", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_one_missing", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert10-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert11-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[None-uncert22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[None-uncert23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert14-uncert24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert15-uncert25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert16-uncert26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert17-uncert27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert18-uncert28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert19-uncert29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert110-uncert210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_stddevuncertainty_with_units[uncert111-uncert211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert10-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert11-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[None-uncert22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[None-uncert23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert14-uncert24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert15-uncert25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert16-uncert26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert17-uncert27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert18-uncert28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert19-uncert29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert110-uncert210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_varianceuncertainty_with_units[uncert111-uncert211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert10-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert11-None]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[None-uncert22]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[None-uncert23]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert14-uncert24]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert15-uncert25]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert16-uncert26]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert17-uncert27]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert18-uncert28]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert19-uncert29]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert110-uncert210]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_inversevarianceuncertainty_with_units[uncert111-uncert211]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_handle_switches[ff]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_handle_switches[first_found]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_meta_func", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_wcs_func", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_mask_func", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage[add]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage[subtract]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage[divide]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage[multiply]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage_non_nddata_first_arg[add]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage_non_nddata_first_arg[subtract]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage_non_nddata_first_arg[divide]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_two_argument_useage_non_nddata_first_arg[multiply]", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_arithmetics_unknown_uncertainties", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_psf_warning", "astropy/nddata/mixins/tests/test_ndarithmetic.py::test_raise_method_not_supported"]}
{"instance_id": "astropy__astropy-6938", "tests_passing_in_original_repo": ["astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_sample_file", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_image_create", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_scaled_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_scaled_data_auto_rescale", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_uint16_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_groups_hdu_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_binary_table_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_variable_length_table_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_ascii_table_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_compressed_image_data", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_compressed_image_data_int16", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_compressed_image_data_float32", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_open_with_no_keywords", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_append", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_writeto_convenience", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_hdu_writeto", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_hdu_writeto_existing", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_datasum_only", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_open_update_mode_preserve_checksum", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_open_update_mode_update_checksum", "astropy/io/fits/tests/test_checksum.py::TestChecksumFunctions::test_overwrite_invalid", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_constructor_copies_header", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_open", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_binary_table", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_ascii_table", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_endianness", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_column_endianness", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_recarray_to_bintablehdu", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_numpy_ndarray_to_bintablehdu", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_numpy_ndarray_to_bintablehdu_with_unicode", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_new_table_from_recarray", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_new_fitsrec", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_appending_a_column", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_adding_a_column", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_merge_tables", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_modify_column_attributes", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_mask_array", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_slice_a_row", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_fits_record_len", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_add_data_by_rows", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_assign_multiple_rows_to_table", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_verify_data_references", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_new_table_with_ndarray", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_new_table_with_fits_rec", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_bin_table_hdu_constructor", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_constructor_name_arg", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_constructor_ver_arg", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_unicode_colname", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_bin_table_with_logical_array", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_fits_rec_column_access", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_table_with_zero_width_column", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_string_column_padding", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_multi_dimensional_columns", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_bin_table_init_from_string_array_column", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_columns_with_truncating_tdim", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_string_array_round_trip", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_new_table_with_nd_column", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_mismatched_tform_and_tdim", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_tdim_of_size_one", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_slicing", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_array_slicing", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_array_broadcasting", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_array_slicing_readonly", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_dump_load_round_trip", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_dump_load_array_colums", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_load_guess_format", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_attribute_field_shadowing", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_table_from_bool_fields", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_table_from_bool_fields2", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_bool_column_update", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_missing_tnull", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_blank_field_zero", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_column_array_type_mismatch", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_table_none", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_unncessary_table_load", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_table_from_columns_of_other_table", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_bintable_to_asciitable", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_pickle", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_zero_length_table", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_dim_column_byte_order_mismatch", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_fits_rec_from_existing", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_update_string_column_inplace", "astropy/io/fits/tests/test_table.py::TestTableFunctions::test_dump_clobber_vs_overwrite", "astropy/io/fits/tests/test_table.py::TestVLATables::test_variable_length_columns", "astropy/io/fits/tests/test_table.py::TestVLATables::test_extend_variable_length_array", "astropy/io/fits/tests/test_table.py::TestVLATables::test_variable_length_table_format_pd_from_object_array", "astropy/io/fits/tests/test_table.py::TestVLATables::test_variable_length_table_format_pd_from_list", "astropy/io/fits/tests/test_table.py::TestVLATables::test_variable_length_table_format_pa_from_object_array", "astropy/io/fits/tests/test_table.py::TestVLATables::test_variable_length_table_format_pa_from_list", "astropy/io/fits/tests/test_table.py::TestVLATables::test_getdata_vla", "astropy/io/fits/tests/test_table.py::TestVLATables::test_copy_vla", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_column_format_interpretation", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_zero_precision_float_column", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_column_array_type_mismatch", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_new_coldefs_with_invalid_seqence", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_pickle", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_column_lookup_by_name", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_column_attribute_change_after_removal", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_x_column_deepcopy", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_p_column_deepcopy", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_column_verify_keywords", "astropy/io/fits/tests/test_table.py::TestColumnFunctions::test_column_verify_start", "astropy/io/fits/tests/test_table.py::test_regression_5383", "astropy/io/fits/tests/test_table.py::test_table_to_hdu", "astropy/io/fits/tests/test_table.py::test_regression_scalar_indexing"]}
{"instance_id": "astropy__astropy-7746", "tests_passing_in_original_repo": ["astropy/wcs/tests/test_wcs.py::TestMaps::test_consistency", "astropy/wcs/tests/test_wcs.py::TestMaps::test_maps", "astropy/wcs/tests/test_wcs.py::TestSpectra::test_consistency", "astropy/wcs/tests/test_wcs.py::TestSpectra::test_spectra", "astropy/wcs/tests/test_wcs.py::test_fixes", "astropy/wcs/tests/test_wcs.py::test_outside_sky", "astropy/wcs/tests/test_wcs.py::test_pix2world", "astropy/wcs/tests/test_wcs.py::test_load_fits_path", "astropy/wcs/tests/test_wcs.py::test_dict_init", "astropy/wcs/tests/test_wcs.py::test_extra_kwarg", "astropy/wcs/tests/test_wcs.py::test_3d_shapes", "astropy/wcs/tests/test_wcs.py::test_preserve_shape", "astropy/wcs/tests/test_wcs.py::test_broadcasting", "astropy/wcs/tests/test_wcs.py::test_shape_mismatch", "astropy/wcs/tests/test_wcs.py::test_invalid_shape", "astropy/wcs/tests/test_wcs.py::test_warning_about_defunct_keywords", "astropy/wcs/tests/test_wcs.py::test_warning_about_defunct_keywords_exception", "astropy/wcs/tests/test_wcs.py::test_to_header_string", "astropy/wcs/tests/test_wcs.py::test_to_fits", "astropy/wcs/tests/test_wcs.py::test_to_header_warning", "astropy/wcs/tests/test_wcs.py::test_no_comments_in_header", "astropy/wcs/tests/test_wcs.py::test_find_all_wcs_crash", "astropy/wcs/tests/test_wcs.py::test_validate", "astropy/wcs/tests/test_wcs.py::test_validate_with_2_wcses", "astropy/wcs/tests/test_wcs.py::test_crpix_maps_to_crval", "astropy/wcs/tests/test_wcs.py::test_all_world2pix", "astropy/wcs/tests/test_wcs.py::test_scamp_sip_distortion_parameters", "astropy/wcs/tests/test_wcs.py::test_fixes2", "astropy/wcs/tests/test_wcs.py::test_unit_normalization", "astropy/wcs/tests/test_wcs.py::test_footprint_to_file", "astropy/wcs/tests/test_wcs.py::test_validate_faulty_wcs", "astropy/wcs/tests/test_wcs.py::test_error_message", "astropy/wcs/tests/test_wcs.py::test_out_of_bounds", "astropy/wcs/tests/test_wcs.py::test_calc_footprint_1", "astropy/wcs/tests/test_wcs.py::test_calc_footprint_2", "astropy/wcs/tests/test_wcs.py::test_calc_footprint_3", "astropy/wcs/tests/test_wcs.py::test_sip", "astropy/wcs/tests/test_wcs.py::test_printwcs", "astropy/wcs/tests/test_wcs.py::test_invalid_spherical", "astropy/wcs/tests/test_wcs.py::test_no_iteration", "astropy/wcs/tests/test_wcs.py::test_sip_tpv_agreement", "astropy/wcs/tests/test_wcs.py::test_tpv_copy", "astropy/wcs/tests/test_wcs.py::test_hst_wcs", "astropy/wcs/tests/test_wcs.py::test_list_naxis", "astropy/wcs/tests/test_wcs.py::test_sip_broken", "astropy/wcs/tests/test_wcs.py::test_no_truncate_crval", "astropy/wcs/tests/test_wcs.py::test_no_truncate_crval_try2", "astropy/wcs/tests/test_wcs.py::test_no_truncate_crval_p17", "astropy/wcs/tests/test_wcs.py::test_no_truncate_using_compare", "astropy/wcs/tests/test_wcs.py::test_passing_ImageHDU", "astropy/wcs/tests/test_wcs.py::test_inconsistent_sip", "astropy/wcs/tests/test_wcs.py::test_bounds_check", "astropy/wcs/tests/test_wcs.py::test_naxis", "astropy/wcs/tests/test_wcs.py::test_sip_with_altkey", "astropy/wcs/tests/test_wcs.py::test_to_fits_1", "astropy/wcs/tests/test_wcs.py::test_keyedsip"]}
{"instance_id": "django__django-10914", "tests_passing_in_original_repo": ["test_failure (test_utils.tests.AssertNumQueriesContextManagerTests)", "test_simple (test_utils.tests.AssertNumQueriesContextManagerTests)", "test_with_client (test_utils.tests.AssertNumQueriesContextManagerTests)", "test_assert_num_queries (test_utils.tests.AssertNumQueriesTests)", "test_assert_num_queries_with_client (test_utils.tests.AssertNumQueriesTests)", "test_ordered (test_utils.tests.AssertQuerysetEqualTests)", "test_repeated_values (test_utils.tests.AssertQuerysetEqualTests)", "test_transform (test_utils.tests.AssertQuerysetEqualTests)", "test_undefined_order (test_utils.tests.AssertQuerysetEqualTests)", "test_unordered (test_utils.tests.AssertQuerysetEqualTests)", "test_failure (test_utils.tests.CaptureQueriesContextManagerTests)", "test_nested (test_utils.tests.CaptureQueriesContextManagerTests)", "test_simple (test_utils.tests.CaptureQueriesContextManagerTests)", "test_with_client (test_utils.tests.CaptureQueriesContextManagerTests)", "test_within (test_utils.tests.CaptureQueriesContextManagerTests)", "test_missing_default_databases (test_utils.tests.SkippingClassTestCase)", "test_skip_class_unless_db_feature (test_utils.tests.SkippingClassTestCase)", "test_failure_in_setUpTestData_should_rollback_transaction (test_utils.tests.TestBadSetUpTestData)", "test_allowed_database_chunked_cursor_queries (test_utils.tests.AllowedDatabaseQueriesTests)", "test_allowed_database_queries (test_utils.tests.AllowedDatabaseQueriesTests)", "test_assert_field_output (test_utils.tests.AssertFieldOutputTests)", "test_custom_required_message (test_utils.tests.AssertFieldOutputTests)", "test_ignores_connection_configuration_queries (test_utils.tests.AssertNumQueriesUponConnectionTests)", "test_assert_raises_message (test_utils.tests.AssertRaisesMsgTest)", "assertRaisesMessage shouldn't interpret RE special chars.", "test_assert_used_on_http_response (test_utils.tests.AssertTemplateUsedContextManagerTests)", "test_error_message (test_utils.tests.AssertTemplateUsedContextManagerTests)", "test_failure (test_utils.tests.AssertTemplateUsedContextManagerTests)", "test_nested_usage (test_utils.tests.AssertTemplateUsedContextManagerTests)", "test_not_used (test_utils.tests.AssertTemplateUsedContextManagerTests)", "test_usage (test_utils.tests.AssertTemplateUsedContextManagerTests)", "test_equal (test_utils.tests.AssertURLEqualTests)", "test_message (test_utils.tests.AssertURLEqualTests)", "test_msg_prefix (test_utils.tests.AssertURLEqualTests)", "test_not_equal (test_utils.tests.AssertURLEqualTests)", "test_callable (test_utils.tests.AssertWarnsMessageTests)", "test_context_manager (test_utils.tests.AssertWarnsMessageTests)", "test_context_manager_failure (test_utils.tests.AssertWarnsMessageTests)", "test_special_re_chars (test_utils.tests.AssertWarnsMessageTests)", "test_all (test_utils.tests.DatabaseAliasTests)", "test_close_match (test_utils.tests.DatabaseAliasTests)", "test_match (test_utils.tests.DatabaseAliasTests)", "test_no_close_match (test_utils.tests.DatabaseAliasTests)", "test_disallowed_database_chunked_cursor_queries (test_utils.tests.DisallowedDatabaseQueriesTests)", "test_disallowed_database_connections (test_utils.tests.DisallowedDatabaseQueriesTests)", "test_disallowed_database_queries (test_utils.tests.DisallowedDatabaseQueriesTests)", "test_attributes (test_utils.tests.HTMLEqualTests)", "test_complex_examples (test_utils.tests.HTMLEqualTests)", "test_contains_html (test_utils.tests.HTMLEqualTests)", "test_count (test_utils.tests.HTMLEqualTests)", "test_html_contain (test_utils.tests.HTMLEqualTests)", "test_html_parser (test_utils.tests.HTMLEqualTests)", "test_ignore_comments (test_utils.tests.HTMLEqualTests)", "test_parse_html_in_script (test_utils.tests.HTMLEqualTests)", "test_parsing_errors (test_utils.tests.HTMLEqualTests)", "test_self_closing_tags (test_utils.tests.HTMLEqualTests)", "test_simple_equal_html (test_utils.tests.HTMLEqualTests)", "test_unequal_html (test_utils.tests.HTMLEqualTests)", "test_unicode_handling (test_utils.tests.HTMLEqualTests)", "test_class_decoration (test_utils.tests.IsolatedAppsTests)", "test_context_manager (test_utils.tests.IsolatedAppsTests)", "test_installed_apps (test_utils.tests.IsolatedAppsTests)", "test_method_decoration (test_utils.tests.IsolatedAppsTests)", "test_nested (test_utils.tests.IsolatedAppsTests)", "test_equal_parsing_errors (test_utils.tests.JSONEqualTests)", "test_not_equal_parsing_errors (test_utils.tests.JSONEqualTests)", "test_simple_equal (test_utils.tests.JSONEqualTests)", "test_simple_equal_raise (test_utils.tests.JSONEqualTests)", "test_simple_equal_unordered (test_utils.tests.JSONEqualTests)", "test_simple_not_equal (test_utils.tests.JSONEqualTests)", "test_simple_not_equal_raise (test_utils.tests.JSONEqualTests)", "test_override_database_routers (test_utils.tests.OverrideSettingsTests)", "test_override_file_upload_directory_permissions (test_utils.tests.OverrideSettingsTests)", "test_override_file_upload_permissions (test_utils.tests.OverrideSettingsTests)", "test_override_media_root (test_utils.tests.OverrideSettingsTests)", "test_override_media_url (test_utils.tests.OverrideSettingsTests)", "test_override_static_root (test_utils.tests.OverrideSettingsTests)", "test_override_static_url (test_utils.tests.OverrideSettingsTests)", "test_override_staticfiles_dirs (test_utils.tests.OverrideSettingsTests)", "test_override_staticfiles_finders (test_utils.tests.OverrideSettingsTests)", "test_override_staticfiles_storage (test_utils.tests.OverrideSettingsTests)", "test_urlconf_cache (test_utils.tests.OverrideSettingsTests)", "test_urlconf_first (test_utils.tests.OverrideSettingsTests)", "test_urlconf_second (test_utils.tests.OverrideSettingsTests)", "test_allowed_hosts (test_utils.tests.SetupTestEnvironmentTests)", "test_setup_test_environment_calling_more_than_once (test_utils.tests.SetupTestEnvironmentTests)", "test_skip_if_db_feature (test_utils.tests.SkippingTestCase)", "test_skip_unless_db_feature (test_utils.tests.SkippingTestCase)", "An exception is setUp() is reraised after disable() is called.", "test_comment_root (test_utils.tests.XMLEqualTests)", "test_parsing_errors (test_utils.tests.XMLEqualTests)", "test_simple_equal (test_utils.tests.XMLEqualTests)", "test_simple_equal_raise (test_utils.tests.XMLEqualTests)", "test_simple_equal_raises_message (test_utils.tests.XMLEqualTests)", "test_simple_equal_unordered (test_utils.tests.XMLEqualTests)", "test_simple_equal_with_leading_or_trailing_whitespace (test_utils.tests.XMLEqualTests)", "test_simple_not_equal (test_utils.tests.XMLEqualTests)", "test_simple_not_equal_raise (test_utils.tests.XMLEqualTests)", "test_simple_not_equal_with_whitespace_in_the_middle (test_utils.tests.XMLEqualTests)"]}
{"instance_id": "django__django-10924", "tests_passing_in_original_repo": []}
{"instance_id": "django__django-11001", "tests_passing_in_original_repo": ["test_aggregate_subquery_annotation (expressions.tests.BasicExpressionsTests)", "test_annotate_values_aggregate (expressions.tests.BasicExpressionsTests)", "test_annotate_values_count (expressions.tests.BasicExpressionsTests)", "test_annotate_values_filter (expressions.tests.BasicExpressionsTests)", "test_annotation_with_outerref (expressions.tests.BasicExpressionsTests)", "test_annotations_within_subquery (expressions.tests.BasicExpressionsTests)", "test_arithmetic (expressions.tests.BasicExpressionsTests)", "test_exist_single_field_output_field (expressions.tests.BasicExpressionsTests)", "test_explicit_output_field (expressions.tests.BasicExpressionsTests)", "test_filter_inter_attribute (expressions.tests.BasicExpressionsTests)", "test_filter_with_join (expressions.tests.BasicExpressionsTests)", "test_filtering_on_annotate_that_uses_q (expressions.tests.BasicExpressionsTests)", "test_in_subquery (expressions.tests.BasicExpressionsTests)", "test_incorrect_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_incorrect_joined_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_nested_subquery (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_2 (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_with_autofield (expressions.tests.BasicExpressionsTests)", "test_new_object_create (expressions.tests.BasicExpressionsTests)", "test_new_object_save (expressions.tests.BasicExpressionsTests)", "test_object_create_with_aggregate (expressions.tests.BasicExpressionsTests)", "test_object_update (expressions.tests.BasicExpressionsTests)", "test_object_update_fk (expressions.tests.BasicExpressionsTests)", "test_object_update_unsaved_objects (expressions.tests.BasicExpressionsTests)", "test_order_by_exists (expressions.tests.BasicExpressionsTests)", "test_order_of_operations (expressions.tests.BasicExpressionsTests)", "test_outerref (expressions.tests.BasicExpressionsTests)", "test_outerref_mixed_case_table_name (expressions.tests.BasicExpressionsTests)", "test_outerref_with_operator (expressions.tests.BasicExpressionsTests)", "test_parenthesis_priority (expressions.tests.BasicExpressionsTests)", "test_pickle_expression (expressions.tests.BasicExpressionsTests)", "test_subquery (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_aggregate (expressions.tests.BasicExpressionsTests)", "test_subquery_references_joined_table_twice (expressions.tests.BasicExpressionsTests)", "test_ticket_11722_iexact_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_16731_startswith_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_chained_filters (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_join_reuse (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering_2 (expressions.tests.BasicExpressionsTests)", "test_update (expressions.tests.BasicExpressionsTests)", "test_update_inherited_field_value (expressions.tests.BasicExpressionsTests)", "test_update_with_fk (expressions.tests.BasicExpressionsTests)", "test_update_with_none (expressions.tests.BasicExpressionsTests)", "test_uuid_pk_subquery (expressions.tests.BasicExpressionsTests)", "test_lefthand_addition (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_and (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_left_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_or (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_right_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_division (expressions.tests.ExpressionOperatorTests)", "test_lefthand_modulo (expressions.tests.ExpressionOperatorTests)", "test_lefthand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_lefthand_power (expressions.tests.ExpressionOperatorTests)", "test_lefthand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_right_hand_addition (expressions.tests.ExpressionOperatorTests)", "test_right_hand_division (expressions.tests.ExpressionOperatorTests)", "test_right_hand_modulo (expressions.tests.ExpressionOperatorTests)", "test_right_hand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_right_hand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_righthand_power (expressions.tests.ExpressionOperatorTests)", "test_complex_expressions (expressions.tests.ExpressionsNumericTests)", "test_fill_with_value_from_same_object (expressions.tests.ExpressionsNumericTests)", "test_filter_not_equals_other_field (expressions.tests.ExpressionsNumericTests)", "test_increment_value (expressions.tests.ExpressionsNumericTests)", "test_F_reuse (expressions.tests.ExpressionsTests)", "test_insensitive_patterns_escape (expressions.tests.ExpressionsTests)", "test_patterns_escape (expressions.tests.ExpressionsTests)", "test_date_comparison (expressions.tests.FTimeDeltaTests)", "test_date_minus_duration (expressions.tests.FTimeDeltaTests)", "test_date_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction_microseconds (expressions.tests.FTimeDeltaTests)", "test_delta_add (expressions.tests.FTimeDeltaTests)", "test_delta_subtract (expressions.tests.FTimeDeltaTests)", "test_delta_update (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime_microseconds (expressions.tests.FTimeDeltaTests)", "test_durationfield_add (expressions.tests.FTimeDeltaTests)", "test_exclude (expressions.tests.FTimeDeltaTests)", "test_invalid_operator (expressions.tests.FTimeDeltaTests)", "test_mixed_comparisons2 (expressions.tests.FTimeDeltaTests)", "test_multiple_query_compilation (expressions.tests.FTimeDeltaTests)", "test_negative_timedelta_update (expressions.tests.FTimeDeltaTests)", "test_query_clone (expressions.tests.FTimeDeltaTests)", "test_time_subtraction (expressions.tests.FTimeDeltaTests)", "test_month_aggregation (expressions.tests.FieldTransformTests)", "test_multiple_transforms_in_values (expressions.tests.FieldTransformTests)", "test_transform_in_values (expressions.tests.FieldTransformTests)", "test_complex_expressions_do_not_introduce_sql_injection_via_untrusted_string_inclusion (expressions.tests.IterableLookupInnerExpressionsTests)", "test_expressions_in_lookups_join_choice (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_datetimes (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_range_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_deconstruct (expressions.tests.ValueTests)", "test_deconstruct_output_field (expressions.tests.ValueTests)", "test_equal (expressions.tests.ValueTests)", "test_equal_output_field (expressions.tests.ValueTests)", "test_hash (expressions.tests.ValueTests)", "test_raise_empty_expressionlist (expressions.tests.ValueTests)", "test_update_TimeField_using_Value (expressions.tests.ValueTests)", "test_update_UUIDField_using_Value (expressions.tests.ValueTests)", "test_and (expressions.tests.CombinableTests)", "test_negation (expressions.tests.CombinableTests)", "test_or (expressions.tests.CombinableTests)", "test_reversed_and (expressions.tests.CombinableTests)", "test_reversed_or (expressions.tests.CombinableTests)", "test_deconstruct (expressions.tests.FTests)", "test_deepcopy (expressions.tests.FTests)", "test_equal (expressions.tests.FTests)", "test_hash (expressions.tests.FTests)", "test_not_equal_Value (expressions.tests.FTests)", "test_aggregates (expressions.tests.ReprTests)", "test_distinct_aggregates (expressions.tests.ReprTests)", "test_expressions (expressions.tests.ReprTests)", "test_filtered_aggregates (expressions.tests.ReprTests)", "test_functions (expressions.tests.ReprTests)", "test_equal (expressions.tests.SimpleExpressionTests)", "test_hash (expressions.tests.SimpleExpressionTests)"]}
{"instance_id": "django__django-11019", "tests_passing_in_original_repo": ["Admin inline should invoke local callable when its name is listed in readonly_fields", "test_can_delete (admin_inlines.tests.TestInline)", "test_create_inlines_on_inherited_model (admin_inlines.tests.TestInline)", "test_custom_form_tabular_inline_label (admin_inlines.tests.TestInline)", "test_custom_form_tabular_inline_overridden_label (admin_inlines.tests.TestInline)", "test_custom_get_extra_form (admin_inlines.tests.TestInline)", "test_custom_min_num (admin_inlines.tests.TestInline)", "test_custom_pk_shortcut (admin_inlines.tests.TestInline)", "test_help_text (admin_inlines.tests.TestInline)", "test_inline_editable_pk (admin_inlines.tests.TestInline)", "#18263 -- Make sure hidden fields don't get a column in tabular inlines", "test_inline_nonauto_noneditable_inherited_pk (admin_inlines.tests.TestInline)", "test_inline_nonauto_noneditable_pk (admin_inlines.tests.TestInline)", "test_inline_primary (admin_inlines.tests.TestInline)", "Inlines `show_change_link` for registered models when enabled.", "Inlines `show_change_link` disabled for unregistered models.", "test_localize_pk_shortcut (admin_inlines.tests.TestInline)", "Autogenerated many-to-many inlines are displayed correctly (#13407)", "test_min_num (admin_inlines.tests.TestInline)", "Admin inline `readonly_field` shouldn't invoke parent ModelAdmin callable", "test_non_related_name_inline (admin_inlines.tests.TestInline)", "Inlines without change permission shows field inputs on add form.", "Bug #13174.", "test_stacked_inline_edit_form_contains_has_original_class (admin_inlines.tests.TestInline)", "test_tabular_inline_column_css_class (admin_inlines.tests.TestInline)", "Inlines `show_change_link` disabled by default.", "test_tabular_model_form_meta_readonly_field (admin_inlines.tests.TestInline)", "test_tabular_non_field_errors (admin_inlines.tests.TestInline)", "Regression for #9362", "test_all_inline_media (admin_inlines.tests.TestInlineMedia)", "test_inline_media_only_base (admin_inlines.tests.TestInlineMedia)", "test_inline_media_only_inline (admin_inlines.tests.TestInlineMedia)", "test_inline_add_fk_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_fk_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_m2m_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_add_change_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_all_perms (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_change_del_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_change_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_change_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_noperm (admin_inlines.tests.TestInlinePermissions)", "test_deleting_inline_with_protected_delete_does_not_validate (admin_inlines.tests.TestInlineProtectedOnDelete)", "test_build_attrs (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "test_build_attrs_no_custom_class (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "test_build_attrs_not_required_field (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "test_build_attrs_required_field (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "test_get_url (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "test_media (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "test_render_options (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)", "Empty option isn't present if the field isn't required.", "Empty option is present if the field isn't required.", "test_combine_media (forms_tests.tests.test_media.FormsMediaTestCase)", "test_construction (forms_tests.tests.test_media.FormsMediaTestCase)", "test_form_media (forms_tests.tests.test_media.FormsMediaTestCase)", "test_html_safe (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_dsl (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_inheritance (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_inheritance_extends (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_inheritance_from_property (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_inheritance_single_type (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_property (forms_tests.tests.test_media.FormsMediaTestCase)", "test_media_property_parent_references (forms_tests.tests.test_media.FormsMediaTestCase)", "test_merge (forms_tests.tests.test_media.FormsMediaTestCase)", "test_merge_css_three_way (forms_tests.tests.test_media.FormsMediaTestCase)", "test_merge_js_three_way (forms_tests.tests.test_media.FormsMediaTestCase)", "test_merge_warning (forms_tests.tests.test_media.FormsMediaTestCase)", "test_multi_media (forms_tests.tests.test_media.FormsMediaTestCase)", "test_multi_widget (forms_tests.tests.test_media.FormsMediaTestCase)"]}
{"instance_id": "django__django-11039", "tests_passing_in_original_repo": ["test_makemigrations_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)", "test_makemigrations_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)", "test_migrate_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)", "test_migrate_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)", "test_showmigrations_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)", "test_showmigrations_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)", "test_sqlmigrate_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)", "test_sqlmigrate_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)", "test_squashmigrations_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)", "test_squashmigrations_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)", "test_failing_migration (migrations.test_commands.MakeMigrationsTests)", "test_files_content (migrations.test_commands.MakeMigrationsTests)", "test_makemigration_merge_dry_run (migrations.test_commands.MakeMigrationsTests)", "test_makemigration_merge_dry_run_verbosity_3 (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_auto_now_add_interactive (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_check (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_conflict_exit (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_consistency_checks_respect_routers (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_default_merge_name (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_disabled_migrations_for_app (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_dry_run (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_dry_run_verbosity_3 (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_empty_connections (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_empty_migration (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_empty_no_app_specified (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_handle_merge (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_inconsistent_history (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_interactive_accept (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_interactive_by_default (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_interactive_reject (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_merge_dont_output_dependency_operations (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_merge_no_conflict (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_migration_path_output (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_migration_path_output_valueerror (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_migrations_announce (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_migrations_modules_nonexistent_toplevel_package (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_migrations_modules_path_not_exist (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_no_apps_initial (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_no_changes (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_no_changes_no_apps (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_no_common_ancestor (migrations.test_commands.MakeMigrationsTests)", "Migration directories without an __init__.py file are allowed.", "test_makemigrations_non_interactive_no_field_rename (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_non_interactive_no_model_rename (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_non_interactive_not_null_addition (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_non_interactive_not_null_alteration (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_order (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_unspecified_app_with_conflict_merge (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_unspecified_app_with_conflict_no_merge (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_with_custom_name (migrations.test_commands.MakeMigrationsTests)", "test_makemigrations_with_invalid_custom_name (migrations.test_commands.MakeMigrationsTests)", "test_ambigious_prefix (migrations.test_commands.MigrateTests)", "test_app_without_migrations (migrations.test_commands.MigrateTests)", "test_migrate (migrations.test_commands.MigrateTests)", "test_migrate_conflict_exit (migrations.test_commands.MigrateTests)", "test_migrate_fake_initial (migrations.test_commands.MigrateTests)", "test_migrate_fake_split_initial (migrations.test_commands.MigrateTests)", "test_migrate_inconsistent_history (migrations.test_commands.MigrateTests)", "test_migrate_initial_false (migrations.test_commands.MigrateTests)", "Tests migrate --plan output.", "test_migrate_record_replaced (migrations.test_commands.MigrateTests)", "test_migrate_record_squashed (migrations.test_commands.MigrateTests)", "test_migrate_syncdb_app_label (migrations.test_commands.MigrateTests)", "test_migrate_syncdb_app_with_migrations (migrations.test_commands.MigrateTests)", "test_migrate_syncdb_deferred_sql_executed_with_schemaeditor (migrations.test_commands.MigrateTests)", "test_migrate_with_system_checks (migrations.test_commands.MigrateTests)", "test_regression_22823_unmigrated_fk_to_migrated_model (migrations.test_commands.MigrateTests)", "test_showmigrations_list (migrations.test_commands.MigrateTests)", "test_showmigrations_no_migrations (migrations.test_commands.MigrateTests)", "test_showmigrations_plan (migrations.test_commands.MigrateTests)", "test_showmigrations_plan_app_label_no_migrations (migrations.test_commands.MigrateTests)", "test_showmigrations_plan_multiple_app_labels (migrations.test_commands.MigrateTests)", "test_showmigrations_plan_no_migrations (migrations.test_commands.MigrateTests)", "test_showmigrations_plan_single_app_label (migrations.test_commands.MigrateTests)", "test_showmigrations_plan_squashed (migrations.test_commands.MigrateTests)", "test_showmigrations_unmigrated_app (migrations.test_commands.MigrateTests)", "test_sqlmigrate_backwards (migrations.test_commands.MigrateTests)", "test_sqlmigrate_for_non_atomic_migration (migrations.test_commands.MigrateTests)", "test_sqlmigrate_forwards (migrations.test_commands.MigrateTests)", "test_unknown_prefix (migrations.test_commands.MigrateTests)", "--squashed-name specifies the new migration's name.", "--squashed-name also works if a start migration is omitted.", "test_squashmigrations_initial_attribute (migrations.test_commands.SquashMigrationsTests)", "test_squashmigrations_invalid_start (migrations.test_commands.SquashMigrationsTests)", "test_squashmigrations_optimizes (migrations.test_commands.SquashMigrationsTests)", "test_squashmigrations_squashes (migrations.test_commands.SquashMigrationsTests)", "test_squashmigrations_valid_start (migrations.test_commands.SquashMigrationsTests)", "test_ticket_23799_squashmigrations_no_optimize (migrations.test_commands.SquashMigrationsTests)"]}
{"instance_id": "django__django-11049", "tests_passing_in_original_repo": ["test_exact (model_fields.test_durationfield.TestQuerying)", "test_gt (model_fields.test_durationfield.TestQuerying)", "test_create_empty (model_fields.test_durationfield.TestSaveLoad)", "test_fractional_seconds (model_fields.test_durationfield.TestSaveLoad)", "test_simple_roundtrip (model_fields.test_durationfield.TestSaveLoad)", "test_formfield (model_fields.test_durationfield.TestFormField)", "test_dumping (model_fields.test_durationfield.TestSerialization)", "test_loading (model_fields.test_durationfield.TestSerialization)", "test_invalid_string (model_fields.test_durationfield.TestValidation)"]}
{"instance_id": "django__django-11099", "tests_passing_in_original_repo": ["test_help_text (auth_tests.test_validators.UserAttributeSimilarityValidatorTest)", "test_validate (auth_tests.test_validators.UserAttributeSimilarityValidatorTest)", "test_validate_property (auth_tests.test_validators.UserAttributeSimilarityValidatorTest)", "test_help_text (auth_tests.test_validators.CommonPasswordValidatorTest)", "test_validate (auth_tests.test_validators.CommonPasswordValidatorTest)", "test_validate_custom_list (auth_tests.test_validators.CommonPasswordValidatorTest)", "test_validate_django_supplied_file (auth_tests.test_validators.CommonPasswordValidatorTest)", "test_help_text (auth_tests.test_validators.MinimumLengthValidatorTest)", "test_validate (auth_tests.test_validators.MinimumLengthValidatorTest)", "test_help_text (auth_tests.test_validators.NumericPasswordValidatorTest)", "test_validate (auth_tests.test_validators.NumericPasswordValidatorTest)", "test_empty_password_validator_help_text_html (auth_tests.test_validators.PasswordValidationTest)", "test_get_default_password_validators (auth_tests.test_validators.PasswordValidationTest)", "test_get_password_validators_custom (auth_tests.test_validators.PasswordValidationTest)", "test_password_changed (auth_tests.test_validators.PasswordValidationTest)", "test_password_changed_with_custom_validator (auth_tests.test_validators.PasswordValidationTest)", "test_password_validators_help_text_html (auth_tests.test_validators.PasswordValidationTest)", "test_password_validators_help_text_html_escaping (auth_tests.test_validators.PasswordValidationTest)", "test_password_validators_help_texts (auth_tests.test_validators.PasswordValidationTest)", "test_validate_password (auth_tests.test_validators.PasswordValidationTest)", "test_ascii_validator (auth_tests.test_validators.UsernameValidatorsTests)", "test_unicode_validator (auth_tests.test_validators.UsernameValidatorsTests)"]}
{"instance_id": "django__django-11133", "tests_passing_in_original_repo": ["test_response (httpwrappers.tests.FileCloseTests)", "test_streaming_response (httpwrappers.tests.FileCloseTests)", "test_invalid_redirect_repr (httpwrappers.tests.HttpResponseSubclassesTests)", "test_not_allowed (httpwrappers.tests.HttpResponseSubclassesTests)", "test_not_allowed_repr (httpwrappers.tests.HttpResponseSubclassesTests)", "test_not_allowed_repr_no_content_type (httpwrappers.tests.HttpResponseSubclassesTests)", "test_not_modified (httpwrappers.tests.HttpResponseSubclassesTests)", "test_not_modified_repr (httpwrappers.tests.HttpResponseSubclassesTests)", "test_redirect (httpwrappers.tests.HttpResponseSubclassesTests)", "Make sure HttpResponseRedirect works with lazy strings.", "test_redirect_repr (httpwrappers.tests.HttpResponseSubclassesTests)", "test_json_response_custom_encoder (httpwrappers.tests.JsonResponseTests)", "test_json_response_list (httpwrappers.tests.JsonResponseTests)", "test_json_response_non_ascii (httpwrappers.tests.JsonResponseTests)", "test_json_response_passing_arguments_to_json_dumps (httpwrappers.tests.JsonResponseTests)", "test_json_response_raises_type_error_with_default_setting (httpwrappers.tests.JsonResponseTests)", "test_json_response_text (httpwrappers.tests.JsonResponseTests)", "test_json_response_uuid (httpwrappers.tests.JsonResponseTests)", "test_basic_mutable_operations (httpwrappers.tests.QueryDictTests)", "test_create_with_no_args (httpwrappers.tests.QueryDictTests)", "test_duplicates_in_fromkeys_iterable (httpwrappers.tests.QueryDictTests)", "test_fromkeys_empty_iterable (httpwrappers.tests.QueryDictTests)", "test_fromkeys_is_immutable_by_default (httpwrappers.tests.QueryDictTests)", "test_fromkeys_mutable_override (httpwrappers.tests.QueryDictTests)", "test_fromkeys_noniterable (httpwrappers.tests.QueryDictTests)", "test_fromkeys_with_nondefault_encoding (httpwrappers.tests.QueryDictTests)", "test_fromkeys_with_nonempty_value (httpwrappers.tests.QueryDictTests)", "test_immutability (httpwrappers.tests.QueryDictTests)", "test_immutable_basic_operations (httpwrappers.tests.QueryDictTests)", "test_immutable_get_with_default (httpwrappers.tests.QueryDictTests)", "test_missing_key (httpwrappers.tests.QueryDictTests)", "Test QueryDict with two key/value pairs with same keys.", "A copy of a QueryDict is mutable.", "test_mutable_delete (httpwrappers.tests.QueryDictTests)", "#13572 - QueryDict with a non-default encoding", "test_pickle (httpwrappers.tests.QueryDictTests)", "test_querydict_fromkeys (httpwrappers.tests.QueryDictTests)", "Test QueryDict with one key/value pair", "Regression test for #8278: QueryDict.update(QueryDict)", "test_urlencode (httpwrappers.tests.QueryDictTests)", "test_urlencode_int (httpwrappers.tests.QueryDictTests)", "test_streaming_response (httpwrappers.tests.StreamingHttpResponseTests)", "test_cookie_edgecases (httpwrappers.tests.CookieTests)", "Semicolons and commas are decoded.", "Semicolons and commas are encoded.", "test_httponly_after_load (httpwrappers.tests.CookieTests)", "test_invalid_cookies (httpwrappers.tests.CookieTests)", "test_load_dict (httpwrappers.tests.CookieTests)", "test_nonstandard_keys (httpwrappers.tests.CookieTests)", "test_pickle (httpwrappers.tests.CookieTests)", "test_python_cookies (httpwrappers.tests.CookieTests)", "test_repeated_nonstandard_keys (httpwrappers.tests.CookieTests)", "test_samesite (httpwrappers.tests.CookieTests)", "test_dict_behavior (httpwrappers.tests.HttpResponseTests)", "test_file_interface (httpwrappers.tests.HttpResponseTests)", "test_headers_type (httpwrappers.tests.HttpResponseTests)", "test_iter_content (httpwrappers.tests.HttpResponseTests)", "test_iterator_isnt_rewound (httpwrappers.tests.HttpResponseTests)", "test_lazy_content (httpwrappers.tests.HttpResponseTests)", "test_long_line (httpwrappers.tests.HttpResponseTests)", "test_newlines_in_headers (httpwrappers.tests.HttpResponseTests)", "test_non_string_content (httpwrappers.tests.HttpResponseTests)", "test_stream_interface (httpwrappers.tests.HttpResponseTests)", "test_unsafe_redirect (httpwrappers.tests.HttpResponseTests)"]}
{"instance_id": "django__django-11179", "tests_passing_in_original_repo": ["test_bulk (delete.tests.DeletionTests)", "test_can_defer_constraint_checks (delete.tests.DeletionTests)", "test_delete_with_keeping_parents (delete.tests.DeletionTests)", "test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests)", "test_deletion_order (delete.tests.DeletionTests)", "test_hidden_related (delete.tests.DeletionTests)", "test_instance_update (delete.tests.DeletionTests)", "test_large_delete (delete.tests.DeletionTests)", "test_large_delete_related (delete.tests.DeletionTests)", "test_m2m (delete.tests.DeletionTests)", "test_model_delete_returns_num_rows (delete.tests.DeletionTests)", "test_proxied_model_duplicate_queries (delete.tests.DeletionTests)", "test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)", "test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests)", "test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests)", "test_fast_delete_fk (delete.tests.FastDeleteTests)", "test_fast_delete_inheritance (delete.tests.FastDeleteTests)", "test_fast_delete_joined_qs (delete.tests.FastDeleteTests)", "test_fast_delete_large_batch (delete.tests.FastDeleteTests)", "test_fast_delete_m2m (delete.tests.FastDeleteTests)", "test_fast_delete_qs (delete.tests.FastDeleteTests)", "test_fast_delete_revm2m (delete.tests.FastDeleteTests)", "test_auto (delete.tests.OnDeleteTests)", "test_auto_nullable (delete.tests.OnDeleteTests)", "test_cascade (delete.tests.OnDeleteTests)", "test_cascade_from_child (delete.tests.OnDeleteTests)", "test_cascade_from_parent (delete.tests.OnDeleteTests)", "test_cascade_nullable (delete.tests.OnDeleteTests)", "test_do_nothing (delete.tests.OnDeleteTests)", "test_do_nothing_qscount (delete.tests.OnDeleteTests)", "test_inheritance_cascade_down (delete.tests.OnDeleteTests)", "test_inheritance_cascade_up (delete.tests.OnDeleteTests)", "test_o2o_setnull (delete.tests.OnDeleteTests)", "test_protect (delete.tests.OnDeleteTests)", "test_setdefault (delete.tests.OnDeleteTests)", "test_setdefault_none (delete.tests.OnDeleteTests)", "test_setnull (delete.tests.OnDeleteTests)", "test_setnull_from_child (delete.tests.OnDeleteTests)", "test_setnull_from_parent (delete.tests.OnDeleteTests)", "test_setvalue (delete.tests.OnDeleteTests)"]}
{"instance_id": "django__django-11283", "tests_passing_in_original_repo": ["test_migrate_backwards (auth_tests.test_migrations.ProxyModelWithDifferentAppLabelTests)", "test_proxy_model_permissions_contenttype (auth_tests.test_migrations.ProxyModelWithDifferentAppLabelTests)", "test_user_has_now_proxy_model_permissions (auth_tests.test_migrations.ProxyModelWithDifferentAppLabelTests)", "test_user_keeps_same_permissions_after_migrating_backward (auth_tests.test_migrations.ProxyModelWithDifferentAppLabelTests)", "test_migrate_backwards (auth_tests.test_migrations.ProxyModelWithSameAppLabelTests)", "test_proxy_model_permissions_contenttype (auth_tests.test_migrations.ProxyModelWithSameAppLabelTests)", "test_user_keeps_same_permissions_after_migrating_backward (auth_tests.test_migrations.ProxyModelWithSameAppLabelTests)", "test_user_still_has_proxy_model_permissions (auth_tests.test_migrations.ProxyModelWithSameAppLabelTests)"]}
{"instance_id": "django__django-11422", "tests_passing_in_original_repo": ["test_run_loop_catches_stopiteration (utils_tests.test_autoreload.BaseReloaderTests)", "test_run_loop_stop_and_return (utils_tests.test_autoreload.BaseReloaderTests)", "test_wait_for_apps_ready_checks_for_exception (utils_tests.test_autoreload.BaseReloaderTests)", "test_wait_for_apps_ready_without_exception (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_files_with_recursive_glob (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_with_glob (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_with_single_file (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_without_absolute (utils_tests.test_autoreload.BaseReloaderTests)", "test_watchman_available (utils_tests.test_autoreload.GetReloaderTests)", "test_watchman_unavailable (utils_tests.test_autoreload.GetReloaderTests)", "test_manage_py (utils_tests.test_autoreload.RestartWithReloaderTests)", "test_python_m_django (utils_tests.test_autoreload.RestartWithReloaderTests)", "test_calls_start_django (utils_tests.test_autoreload.RunWithReloaderTests)", "test_calls_sys_exit (utils_tests.test_autoreload.RunWithReloaderTests)", "test_swallows_keyboard_interrupt (utils_tests.test_autoreload.RunWithReloaderTests)", "test_check_errors_called (utils_tests.test_autoreload.StartDjangoTests)", "test_echo_on_called (utils_tests.test_autoreload.StartDjangoTests)", "test_starts_thread_with_args (utils_tests.test_autoreload.StartDjangoTests)", "test_watchman_becomes_unavailable (utils_tests.test_autoreload.StartDjangoTests)", "test_file (utils_tests.test_autoreload.StatReloaderTests)", "test_glob (utils_tests.test_autoreload.StatReloaderTests)", "test_glob_recursive (utils_tests.test_autoreload.StatReloaderTests)", "test_multiple_globs (utils_tests.test_autoreload.StatReloaderTests)", "test_multiple_recursive_globs (utils_tests.test_autoreload.StatReloaderTests)", "test_nested_glob_recursive (utils_tests.test_autoreload.StatReloaderTests)", "test_overlapping_glob_recursive (utils_tests.test_autoreload.StatReloaderTests)", "test_overlapping_globs (utils_tests.test_autoreload.StatReloaderTests)", "test_snapshot_files_ignores_missing_files (utils_tests.test_autoreload.StatReloaderTests)", "test_snapshot_files_updates (utils_tests.test_autoreload.StatReloaderTests)", "test_snapshot_files_with_duplicates (utils_tests.test_autoreload.StatReloaderTests)", "test_mutates_error_files (utils_tests.test_autoreload.TestCheckErrors)", "test_common_roots (utils_tests.test_autoreload.TestCommonRoots)", ".pyc and .pyo files are included in the files list.", "test_check_errors (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_check_errors_catches_all_exceptions (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_file_added (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_module_without_spec (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_paths_are_pathlib_instances (utils_tests.test_autoreload.TestIterModulesAndFiles)", "iter_all_python_module_file() ignores weakref modules.", "test_zip_reload (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_no_exception (utils_tests.test_autoreload.TestRaiseLastException)", "test_raises_exception (utils_tests.test_autoreload.TestRaiseLastException)", "test_sys_paths_absolute (utils_tests.test_autoreload.TestSysPathDirectories)", "test_sys_paths_directories (utils_tests.test_autoreload.TestSysPathDirectories)", "test_sys_paths_non_existing (utils_tests.test_autoreload.TestSysPathDirectories)", "test_sys_paths_with_directories (utils_tests.test_autoreload.TestSysPathDirectories)"]}
{"instance_id": "django__django-11564", "tests_passing_in_original_repo": ["test_custom_valid_name_callable_upload_to (file_storage.tests.FileFieldStorageTests)", "test_duplicate_filename (file_storage.tests.FileFieldStorageTests)", "test_empty_upload_to (file_storage.tests.FileFieldStorageTests)", "test_extended_length_storage (file_storage.tests.FileFieldStorageTests)", "test_file_object (file_storage.tests.FileFieldStorageTests)", "test_file_truncation (file_storage.tests.FileFieldStorageTests)", "test_filefield_default (file_storage.tests.FileFieldStorageTests)", "test_filefield_pickling (file_storage.tests.FileFieldStorageTests)", "test_filefield_read (file_storage.tests.FileFieldStorageTests)", "test_filefield_reopen (file_storage.tests.FileFieldStorageTests)", "test_filefield_write (file_storage.tests.FileFieldStorageTests)", "test_files (file_storage.tests.FileFieldStorageTests)", "test_pathlib_upload_to (file_storage.tests.FileFieldStorageTests)", "test_random_upload_to (file_storage.tests.FileFieldStorageTests)", "test_stringio (file_storage.tests.FileFieldStorageTests)", "test_override_settings_inheritance (settings_tests.tests.ChildDecoratedTestCase)", "test_max_recursion_error (settings_tests.tests.ClassDecoratedTestCase)", "test_method_override (settings_tests.tests.ClassDecoratedTestCase)", "test_override (settings_tests.tests.ClassDecoratedTestCase)", "Settings are overridden within setUpClass (#21281).", "test_max_recursion_error (settings_tests.tests.ClassDecoratedTestCaseSuper)", "test_method_override (settings_tests.tests.FullyDecoratedTestCase)", "test_override (settings_tests.tests.FullyDecoratedTestCase)", "test_base_url (file_storage.tests.CustomStorageTests)", "test_custom_get_available_name (file_storage.tests.CustomStorageTests)", "test_delete_deletes_directories (file_storage.tests.CustomStorageTests)", "test_delete_no_name (file_storage.tests.CustomStorageTests)", "test_empty_location (file_storage.tests.CustomStorageTests)", "test_file_access_options (file_storage.tests.CustomStorageTests)", "test_file_chunks_error (file_storage.tests.CustomStorageTests)", "test_file_get_accessed_time (file_storage.tests.CustomStorageTests)", "test_file_get_accessed_time_timezone (file_storage.tests.CustomStorageTests)", "test_file_get_created_time (file_storage.tests.CustomStorageTests)", "test_file_get_created_time_timezone (file_storage.tests.CustomStorageTests)", "test_file_get_modified_time (file_storage.tests.CustomStorageTests)", "test_file_get_modified_time_timezone (file_storage.tests.CustomStorageTests)", "test_file_path (file_storage.tests.CustomStorageTests)", "test_file_save_with_path (file_storage.tests.CustomStorageTests)", "test_file_save_without_name (file_storage.tests.CustomStorageTests)", "The storage backend should preserve case of filenames.", "test_file_storage_prevents_directory_traversal (file_storage.tests.CustomStorageTests)", "test_file_url (file_storage.tests.CustomStorageTests)", "test_listdir (file_storage.tests.CustomStorageTests)", "test_makedirs_race_handling (file_storage.tests.CustomStorageTests)", "test_remove_race_handling (file_storage.tests.CustomStorageTests)", "test_save_doesnt_close (file_storage.tests.CustomStorageTests)", "test_setting_changed (file_storage.tests.CustomStorageTests)", "test_base_url (file_storage.tests.DiscardingFalseContentStorageTests)", "test_custom_storage_discarding_empty_content (file_storage.tests.DiscardingFalseContentStorageTests)", "test_delete_deletes_directories (file_storage.tests.DiscardingFalseContentStorageTests)", "test_delete_no_name (file_storage.tests.DiscardingFalseContentStorageTests)", "test_empty_location (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_access_options (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_chunks_error (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_get_accessed_time (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_get_accessed_time_timezone (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_get_created_time (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_get_created_time_timezone (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_get_modified_time (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_get_modified_time_timezone (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_path (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_save_with_path (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_save_without_name (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_storage_prevents_directory_traversal (file_storage.tests.DiscardingFalseContentStorageTests)", "test_file_url (file_storage.tests.DiscardingFalseContentStorageTests)", "test_listdir (file_storage.tests.DiscardingFalseContentStorageTests)", "test_makedirs_race_handling (file_storage.tests.DiscardingFalseContentStorageTests)", "test_remove_race_handling (file_storage.tests.DiscardingFalseContentStorageTests)", "test_save_doesnt_close (file_storage.tests.DiscardingFalseContentStorageTests)", "test_setting_changed (file_storage.tests.DiscardingFalseContentStorageTests)", "test_urllib_request_urlopen (file_storage.tests.FileLikeObjectTestCase)", "test_race_condition (file_storage.tests.FileSaveRaceConditionTest)", "Regression test for #9610.", "test_first_character_dot (file_storage.tests.FileStoragePathParsing)", "test_base_url (file_storage.tests.FileStorageTests)", "test_delete_deletes_directories (file_storage.tests.FileStorageTests)", "test_delete_no_name (file_storage.tests.FileStorageTests)", "test_empty_location (file_storage.tests.FileStorageTests)", "test_file_access_options (file_storage.tests.FileStorageTests)", "test_file_chunks_error (file_storage.tests.FileStorageTests)", "test_file_get_accessed_time (file_storage.tests.FileStorageTests)", "test_file_get_accessed_time_timezone (file_storage.tests.FileStorageTests)", "test_file_get_created_time (file_storage.tests.FileStorageTests)", "test_file_get_created_time_timezone (file_storage.tests.FileStorageTests)", "test_file_get_modified_time (file_storage.tests.FileStorageTests)", "test_file_get_modified_time_timezone (file_storage.tests.FileStorageTests)", "test_file_path (file_storage.tests.FileStorageTests)", "test_file_save_with_path (file_storage.tests.FileStorageTests)", "test_file_save_without_name (file_storage.tests.FileStorageTests)", "test_file_storage_prevents_directory_traversal (file_storage.tests.FileStorageTests)", "test_file_url (file_storage.tests.FileStorageTests)", "test_listdir (file_storage.tests.FileStorageTests)", "test_makedirs_race_handling (file_storage.tests.FileStorageTests)", "test_remove_race_handling (file_storage.tests.FileStorageTests)", "test_save_doesnt_close (file_storage.tests.FileStorageTests)", "test_setting_changed (file_storage.tests.FileStorageTests)", "test_get_filesystem_storage (file_storage.tests.GetStorageClassTests)", "test_get_invalid_storage_module (file_storage.tests.GetStorageClassTests)", "test_get_nonexistent_storage_class (file_storage.tests.GetStorageClassTests)", "test_get_nonexistent_storage_module (file_storage.tests.GetStorageClassTests)", "test_base_url (file_storage.tests.OverwritingStorageTests)", "test_delete_deletes_directories (file_storage.tests.OverwritingStorageTests)", "test_delete_no_name (file_storage.tests.OverwritingStorageTests)", "test_empty_location (file_storage.tests.OverwritingStorageTests)", "test_file_access_options (file_storage.tests.OverwritingStorageTests)", "test_file_chunks_error (file_storage.tests.OverwritingStorageTests)", "test_file_get_accessed_time (file_storage.tests.OverwritingStorageTests)", "test_file_get_accessed_time_timezone (file_storage.tests.OverwritingStorageTests)", "test_file_get_created_time (file_storage.tests.OverwritingStorageTests)", "test_file_get_created_time_timezone (file_storage.tests.OverwritingStorageTests)", "test_file_get_modified_time (file_storage.tests.OverwritingStorageTests)", "test_file_get_modified_time_timezone (file_storage.tests.OverwritingStorageTests)", "test_file_path (file_storage.tests.OverwritingStorageTests)", "test_file_save_with_path (file_storage.tests.OverwritingStorageTests)", "test_file_save_without_name (file_storage.tests.OverwritingStorageTests)", "test_file_storage_prevents_directory_traversal (file_storage.tests.OverwritingStorageTests)", "test_file_url (file_storage.tests.OverwritingStorageTests)", "test_listdir (file_storage.tests.OverwritingStorageTests)", "test_makedirs_race_handling (file_storage.tests.OverwritingStorageTests)", "test_remove_race_handling (file_storage.tests.OverwritingStorageTests)", "test_save_doesnt_close (file_storage.tests.OverwritingStorageTests)", "Saving to same file name twice overwrites the first file.", "test_setting_changed (file_storage.tests.OverwritingStorageTests)", "test_decorated_testcase_module (settings_tests.tests.FullyDecoratedTranTestCase)", "test_decorated_testcase_name (settings_tests.tests.FullyDecoratedTranTestCase)", "test_method_list_override (settings_tests.tests.FullyDecoratedTranTestCase)", "test_method_list_override_nested_order (settings_tests.tests.FullyDecoratedTranTestCase)", "test_method_list_override_no_ops (settings_tests.tests.FullyDecoratedTranTestCase)", "test_method_list_override_strings (settings_tests.tests.FullyDecoratedTranTestCase)", "test_method_override (settings_tests.tests.FullyDecoratedTranTestCase)", "test_override (settings_tests.tests.FullyDecoratedTranTestCase)", "test_configure (settings_tests.tests.IsOverriddenTest)", "test_evaluated_lazysettings_repr (settings_tests.tests.IsOverriddenTest)", "test_module (settings_tests.tests.IsOverriddenTest)", "test_override (settings_tests.tests.IsOverriddenTest)", "test_settings_repr (settings_tests.tests.IsOverriddenTest)", "test_unevaluated_lazysettings_repr (settings_tests.tests.IsOverriddenTest)", "test_usersettingsholder_repr (settings_tests.tests.IsOverriddenTest)", "Receiver fails on both enter and exit.", "Receiver fails on enter only.", "Receiver fails on exit only.", "test_override_settings_reusable_on_enter (settings_tests.tests.OverrideSettingsIsolationOnExceptionTests)", "test_none (settings_tests.tests.SecureProxySslHeaderTest)", "test_set_with_xheader_right (settings_tests.tests.SecureProxySslHeaderTest)", "test_set_with_xheader_wrong (settings_tests.tests.SecureProxySslHeaderTest)", "test_set_without_xheader (settings_tests.tests.SecureProxySslHeaderTest)", "test_xheader_preferred_to_underlying_request (settings_tests.tests.SecureProxySslHeaderTest)", "test_already_configured (settings_tests.tests.SettingsTests)", "test_class_decorator (settings_tests.tests.SettingsTests)", "test_context_manager (settings_tests.tests.SettingsTests)", "test_decorator (settings_tests.tests.SettingsTests)", "test_incorrect_timezone (settings_tests.tests.SettingsTests)", "test_no_secret_key (settings_tests.tests.SettingsTests)", "test_no_settings_module (settings_tests.tests.SettingsTests)", "test_nonupper_settings_ignored_in_default_settings (settings_tests.tests.SettingsTests)", "test_nonupper_settings_prohibited_in_configure (settings_tests.tests.SettingsTests)", "test_override (settings_tests.tests.SettingsTests)", "test_override_change (settings_tests.tests.SettingsTests)", "test_override_doesnt_leak (settings_tests.tests.SettingsTests)", "test_override_settings_delete (settings_tests.tests.SettingsTests)", "test_override_settings_nested (settings_tests.tests.SettingsTests)", "test_settings_delete (settings_tests.tests.SettingsTests)", "test_settings_delete_wrapped (settings_tests.tests.SettingsTests)", "test_signal_callback_context_manager (settings_tests.tests.SettingsTests)", "test_signal_callback_decorator (settings_tests.tests.SettingsTests)", "Regression test for #19031", "test_content_saving (file_storage.tests.ContentFileStorageTestCase)", "test_file_upload_default_permissions (file_storage.tests.FileStoragePermissions)", "test_file_upload_directory_default_permissions (file_storage.tests.FileStoragePermissions)", "test_file_upload_directory_permissions (file_storage.tests.FileStoragePermissions)", "test_file_upload_permissions (file_storage.tests.FileStoragePermissions)", "test_deconstruction (file_storage.tests.FileSystemStorageTests)", "test_lazy_base_url_init (file_storage.tests.FileSystemStorageTests)", "test_tuple_settings (settings_tests.tests.TestListSettings)"]}
{"instance_id": "django__django-11583", "tests_passing_in_original_repo": ["test_run_loop_catches_stopiteration (utils_tests.test_autoreload.BaseReloaderTests)", "test_run_loop_stop_and_return (utils_tests.test_autoreload.BaseReloaderTests)", "test_wait_for_apps_ready_checks_for_exception (utils_tests.test_autoreload.BaseReloaderTests)", "test_wait_for_apps_ready_without_exception (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_files_with_recursive_glob (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_with_glob (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_with_single_file (utils_tests.test_autoreload.BaseReloaderTests)", "test_watch_without_absolute (utils_tests.test_autoreload.BaseReloaderTests)", "test_watchman_available (utils_tests.test_autoreload.GetReloaderTests)", "test_watchman_unavailable (utils_tests.test_autoreload.GetReloaderTests)", "test_manage_py (utils_tests.test_autoreload.RestartWithReloaderTests)", "test_python_m_django (utils_tests.test_autoreload.RestartWithReloaderTests)", "test_calls_start_django (utils_tests.test_autoreload.RunWithReloaderTests)", "test_calls_sys_exit (utils_tests.test_autoreload.RunWithReloaderTests)", "test_swallows_keyboard_interrupt (utils_tests.test_autoreload.RunWithReloaderTests)", "test_check_errors_called (utils_tests.test_autoreload.StartDjangoTests)", "test_echo_on_called (utils_tests.test_autoreload.StartDjangoTests)", "test_starts_thread_with_args (utils_tests.test_autoreload.StartDjangoTests)", "test_watchman_becomes_unavailable (utils_tests.test_autoreload.StartDjangoTests)", "test_file (utils_tests.test_autoreload.StatReloaderTests)", "test_glob (utils_tests.test_autoreload.StatReloaderTests)", "test_glob_recursive (utils_tests.test_autoreload.StatReloaderTests)", "test_multiple_globs (utils_tests.test_autoreload.StatReloaderTests)", "test_multiple_recursive_globs (utils_tests.test_autoreload.StatReloaderTests)", "test_nested_glob_recursive (utils_tests.test_autoreload.StatReloaderTests)", "test_overlapping_glob_recursive (utils_tests.test_autoreload.StatReloaderTests)", "test_overlapping_globs (utils_tests.test_autoreload.StatReloaderTests)", "test_snapshot_files_ignores_missing_files (utils_tests.test_autoreload.StatReloaderTests)", "test_snapshot_files_updates (utils_tests.test_autoreload.StatReloaderTests)", "test_snapshot_files_with_duplicates (utils_tests.test_autoreload.StatReloaderTests)", "test_tick_does_not_trigger_twice (utils_tests.test_autoreload.StatReloaderTests)", "test_mutates_error_files (utils_tests.test_autoreload.TestCheckErrors)", "test_common_roots (utils_tests.test_autoreload.TestCommonRoots)", ".pyc and .pyo files are included in the files list.", "test_check_errors (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_check_errors_catches_all_exceptions (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_file_added (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_main_module_is_resolved (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_main_module_without_file_is_not_resolved (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_module_without_spec (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_paths_are_pathlib_instances (utils_tests.test_autoreload.TestIterModulesAndFiles)", "iter_all_python_module_file() ignores weakref modules.", "test_zip_reload (utils_tests.test_autoreload.TestIterModulesAndFiles)", "test_no_exception (utils_tests.test_autoreload.TestRaiseLastException)", "test_raises_custom_exception (utils_tests.test_autoreload.TestRaiseLastException)", "test_raises_exception (utils_tests.test_autoreload.TestRaiseLastException)", "test_raises_exception_with_context (utils_tests.test_autoreload.TestRaiseLastException)", "test_sys_paths_absolute (utils_tests.test_autoreload.TestSysPathDirectories)", "test_sys_paths_directories (utils_tests.test_autoreload.TestSysPathDirectories)", "test_sys_paths_non_existing (utils_tests.test_autoreload.TestSysPathDirectories)", "test_sys_paths_with_directories (utils_tests.test_autoreload.TestSysPathDirectories)"]}
{"instance_id": "django__django-11620", "tests_passing_in_original_repo": ["test_ajax_response_encoding (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)", "test_custom_exception_reporter_filter (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)", "test_non_sensitive_request (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)", "test_paranoid_request (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)", "test_sensitive_request (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)", "test_repr (view_tests.tests.test_debug.CallableSettingWrapperTests)", "test_handle_db_exception (view_tests.tests.test_debug.DebugViewQueriesAllowedTests)", "test_400 (view_tests.tests.test_debug.DebugViewTests)", "test_403 (view_tests.tests.test_debug.DebugViewTests)", "test_403_template (view_tests.tests.test_debug.DebugViewTests)", "test_404 (view_tests.tests.test_debug.DebugViewTests)", "test_404_empty_path_not_in_urls (view_tests.tests.test_debug.DebugViewTests)", "test_404_not_in_urls (view_tests.tests.test_debug.DebugViewTests)", "test_classbased_technical_404 (view_tests.tests.test_debug.DebugViewTests)", "test_default_urlconf_template (view_tests.tests.test_debug.DebugViewTests)", "test_files (view_tests.tests.test_debug.DebugViewTests)", "test_no_template_source_loaders (view_tests.tests.test_debug.DebugViewTests)", "test_non_l10ned_numeric_ids (view_tests.tests.test_debug.DebugViewTests)", "test_regression_21530 (view_tests.tests.test_debug.DebugViewTests)", "test_technical_404 (view_tests.tests.test_debug.DebugViewTests)", "test_template_encoding (view_tests.tests.test_debug.DebugViewTests)", "test_template_exceptions (view_tests.tests.test_debug.DebugViewTests)", "Tests for not existing file", "test_callable_settings (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_callable_settings_forbidding_to_set_attributes (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_custom_exception_reporter_filter (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_dict_setting_with_non_str_key (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_multivalue_dict_key_error (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_non_sensitive_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_paranoid_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_function_arguments (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_function_keyword_arguments (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_method (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_settings (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_settings_with_sensitive_keys (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "An exception report can be generated even for a disallowed host.", "test_encoding_error (view_tests.tests.test_debug.ExceptionReporterTests)", "The ExceptionReporter supports Unix, Windows and Macintosh EOL markers", "test_exception_fetching_user (view_tests.tests.test_debug.ExceptionReporterTests)", "test_ignore_traceback_evaluation_exceptions (view_tests.tests.test_debug.ExceptionReporterTests)", "Safe strings in local variables are escaped.", "test_message_only (view_tests.tests.test_debug.ExceptionReporterTests)", "An exception report can be generated for just a request", "An exception report can be generated without request", "Non-UTF-8 exceptions/values should not make the output generation choke.", "test_reporting_frames_for_cyclic_reference (view_tests.tests.test_debug.ExceptionReporterTests)", "test_reporting_frames_without_source (view_tests.tests.test_debug.ExceptionReporterTests)", "test_reporting_of_nested_exceptions (view_tests.tests.test_debug.ExceptionReporterTests)", "A simple exception report can be generated", "A message can be provided in addition to a request", "test_request_with_items_key (view_tests.tests.test_debug.ExceptionReporterTests)", "test_template_encoding (view_tests.tests.test_debug.ExceptionReporterTests)", "Large values should not create a large HTML.", "test_unfrozen_importlib (view_tests.tests.test_debug.ExceptionReporterTests)", "Unprintable values should not make the output generation choke.", "test_cleanse_setting_basic (view_tests.tests.test_debug.HelperFunctionTests)", "test_cleanse_setting_ignore_case (view_tests.tests.test_debug.HelperFunctionTests)", "test_cleanse_setting_recurses_in_dictionary (view_tests.tests.test_debug.HelperFunctionTests)", "test_400 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_403 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_404 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_template_not_found_error (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_message_only (view_tests.tests.test_debug.PlainTextReportTests)", "test_request_with_items_key (view_tests.tests.test_debug.PlainTextReportTests)", "test_template_exception (view_tests.tests.test_debug.PlainTextReportTests)"]}
{"instance_id": "django__django-11630", "tests_passing_in_original_repo": ["test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)", "test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)", "test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)", "test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)", "test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)", "test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)", "test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)", "test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)", "test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)", "test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)", "test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)", "test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)"]}
{"instance_id": "django__django-11742", "tests_passing_in_original_repo": ["test_max_length_warning (invalid_models_tests.test_ordinary_fields.AutoFieldTests)", "test_primary_key (invalid_models_tests.test_ordinary_fields.AutoFieldTests)", "test_valid_case (invalid_models_tests.test_ordinary_fields.AutoFieldTests)", "test_str_default_value (invalid_models_tests.test_ordinary_fields.BinaryFieldTests)", "test_valid_default_value (invalid_models_tests.test_ordinary_fields.BinaryFieldTests)", "test_bad_db_index_value (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_bad_max_length_value (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_bad_validators (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_choices_containing_lazy (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_choices_containing_non_pairs (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_choices_named_group (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_choices_named_group_bad_structure (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_choices_named_group_lazy (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_choices_named_group_non_pairs (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_iterable_of_iterable_choices (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_lazy_choices (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_missing_max_length (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_negative_max_length (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_non_iterable_choices (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "Two letters isn't a valid choice pair.", "test_str_max_length_type (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_str_max_length_value (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_valid_field (invalid_models_tests.test_ordinary_fields.CharFieldTests)", "test_auto_now_and_auto_now_add_raise_error (invalid_models_tests.test_ordinary_fields.DateFieldTests)", "test_fix_default_value (invalid_models_tests.test_ordinary_fields.DateFieldTests)", "test_fix_default_value_tz (invalid_models_tests.test_ordinary_fields.DateFieldTests)", "test_fix_default_value (invalid_models_tests.test_ordinary_fields.DateTimeFieldTests)", "test_fix_default_value_tz (invalid_models_tests.test_ordinary_fields.DateTimeFieldTests)", "test_bad_values_of_max_digits_and_decimal_places (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)", "test_decimal_places_greater_than_max_digits (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)", "test_negative_max_digits_and_decimal_places (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)", "test_required_attributes (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)", "test_valid_field (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)", "test_primary_key (invalid_models_tests.test_ordinary_fields.FileFieldTests)", "test_upload_to_callable_not_checked (invalid_models_tests.test_ordinary_fields.FileFieldTests)", "test_upload_to_starts_with_slash (invalid_models_tests.test_ordinary_fields.FileFieldTests)", "test_valid_case (invalid_models_tests.test_ordinary_fields.FileFieldTests)", "test_valid_default_case (invalid_models_tests.test_ordinary_fields.FileFieldTests)", "test_forbidden_files_and_folders (invalid_models_tests.test_ordinary_fields.FilePathFieldTests)", "test_non_nullable_blank (invalid_models_tests.test_ordinary_fields.GenericIPAddressFieldTests)", "test_pillow_installed (invalid_models_tests.test_ordinary_fields.ImageFieldTests)", "test_max_length_warning (invalid_models_tests.test_ordinary_fields.IntegerFieldTests)", "test_fix_default_value (invalid_models_tests.test_ordinary_fields.TimeFieldTests)", "test_fix_default_value_tz (invalid_models_tests.test_ordinary_fields.TimeFieldTests)"]}
{"instance_id": "django__django-11797", "tests_passing_in_original_repo": ["test_chain_date_time_lookups (lookup.tests.LookupTests)", "test_count (lookup.tests.LookupTests)", "test_custom_field_none_rhs (lookup.tests.LookupTests)", "Lookup.can_use_none_as_rhs=True allows None as a lookup value.", "test_error_messages (lookup.tests.LookupTests)", "test_escaping (lookup.tests.LookupTests)", "test_exact_exists (lookup.tests.LookupTests)", "Transforms are used for __exact=None.", "test_exact_sliced_queryset_limit_one (lookup.tests.LookupTests)", "test_exact_sliced_queryset_limit_one_offset (lookup.tests.LookupTests)", "test_exact_sliced_queryset_not_limited_to_one (lookup.tests.LookupTests)", "test_exclude (lookup.tests.LookupTests)", "test_exists (lookup.tests.LookupTests)", "test_get_next_previous_by (lookup.tests.LookupTests)", "test_in (lookup.tests.LookupTests)", "test_in_bulk (lookup.tests.LookupTests)", "test_in_bulk_lots_of_ids (lookup.tests.LookupTests)", "test_in_bulk_non_unique_field (lookup.tests.LookupTests)", "test_in_bulk_with_field (lookup.tests.LookupTests)", "test_in_different_database (lookup.tests.LookupTests)", "test_in_keeps_value_ordering (lookup.tests.LookupTests)", "test_iterator (lookup.tests.LookupTests)", "test_lookup_collision (lookup.tests.LookupTests)", "test_lookup_date_as_str (lookup.tests.LookupTests)", "test_lookup_int_as_str (lookup.tests.LookupTests)", "test_nested_outerref_lhs (lookup.tests.LookupTests)", "test_none (lookup.tests.LookupTests)", "test_nonfield_lookups (lookup.tests.LookupTests)", "test_pattern_lookups_with_substr (lookup.tests.LookupTests)", "test_regex (lookup.tests.LookupTests)", "test_regex_backreferencing (lookup.tests.LookupTests)", "test_regex_non_ascii (lookup.tests.LookupTests)", "test_regex_non_string (lookup.tests.LookupTests)", "test_regex_null (lookup.tests.LookupTests)", "test_relation_nested_lookup_error (lookup.tests.LookupTests)", "test_unsupported_lookups (lookup.tests.LookupTests)", "test_values (lookup.tests.LookupTests)", "test_values_list (lookup.tests.LookupTests)"]}
{"instance_id": "django__django-11815", "tests_passing_in_original_repo": ["test_args_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_args_signature (migrations.test_writer.OperationWriterTests)", "test_empty_signature (migrations.test_writer.OperationWriterTests)", "test_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_multiline_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_operation_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_custom_operation (migrations.test_writer.WriterTests)", "test_deconstruct_class_arguments (migrations.test_writer.WriterTests)", "test_migration_file_header_comments (migrations.test_writer.WriterTests)", "test_migration_path (migrations.test_writer.WriterTests)", "test_models_import_omitted (migrations.test_writer.WriterTests)", "test_register_non_serializer (migrations.test_writer.WriterTests)", "test_register_serializer (migrations.test_writer.WriterTests)", "test_serialize_builtin_types (migrations.test_writer.WriterTests)", "test_serialize_builtins (migrations.test_writer.WriterTests)", "test_serialize_choices (migrations.test_writer.WriterTests)", "test_serialize_class_based_validators (migrations.test_writer.WriterTests)", "test_serialize_collections (migrations.test_writer.WriterTests)", "test_serialize_compiled_regex (migrations.test_writer.WriterTests)", "test_serialize_constants (migrations.test_writer.WriterTests)", "test_serialize_datetime (migrations.test_writer.WriterTests)", "test_serialize_empty_nonempty_tuple (migrations.test_writer.WriterTests)", "test_serialize_enums (migrations.test_writer.WriterTests)", "test_serialize_fields (migrations.test_writer.WriterTests)", "test_serialize_frozensets (migrations.test_writer.WriterTests)", "test_serialize_functions (migrations.test_writer.WriterTests)", "test_serialize_functools_partial (migrations.test_writer.WriterTests)", "test_serialize_functools_partialmethod (migrations.test_writer.WriterTests)", "test_serialize_iterators (migrations.test_writer.WriterTests)", "test_serialize_lazy_objects (migrations.test_writer.WriterTests)", "A reference in a local scope can't be serialized.", "test_serialize_managers (migrations.test_writer.WriterTests)", "test_serialize_multiline_strings (migrations.test_writer.WriterTests)", "test_serialize_numbers (migrations.test_writer.WriterTests)", "test_serialize_range (migrations.test_writer.WriterTests)", "test_serialize_set (migrations.test_writer.WriterTests)", "test_serialize_settings (migrations.test_writer.WriterTests)", "test_serialize_strings (migrations.test_writer.WriterTests)", "test_serialize_timedelta (migrations.test_writer.WriterTests)", "test_serialize_type_none (migrations.test_writer.WriterTests)", "An unbound method used within a class body can be serialized.", "test_serialize_uuid (migrations.test_writer.WriterTests)", "test_simple_migration (migrations.test_writer.WriterTests)", "test_sorted_imports (migrations.test_writer.WriterTests)"]}
{"instance_id": "django__django-11848", "tests_passing_in_original_repo": ["test_input_too_large (utils_tests.test_http.Base36IntTests)", "test_invalid_literal (utils_tests.test_http.Base36IntTests)", "test_negative_input (utils_tests.test_http.Base36IntTests)", "test_roundtrip (utils_tests.test_http.Base36IntTests)", "test_to_base36_errors (utils_tests.test_http.Base36IntTests)", "test_to_int_errors (utils_tests.test_http.Base36IntTests)", "test_values (utils_tests.test_http.Base36IntTests)", "test_allowed_hosts_str (utils_tests.test_http.IsSafeURLTests)", "test_bad_urls (utils_tests.test_http.IsSafeURLTests)", "test_basic_auth (utils_tests.test_http.IsSafeURLTests)", "test_good_urls (utils_tests.test_http.IsSafeURLTests)", "test_is_safe_url_deprecated (utils_tests.test_http.IsSafeURLTests)", "test_no_allowed_hosts (utils_tests.test_http.IsSafeURLTests)", "test_secure_param_https_urls (utils_tests.test_http.IsSafeURLTests)", "test_secure_param_non_https_urls (utils_tests.test_http.IsSafeURLTests)", "test_custom_iterable_not_doseq (utils_tests.test_http.URLEncodeTests)", "test_dict (utils_tests.test_http.URLEncodeTests)", "test_dict_containing_empty_sequence_doseq (utils_tests.test_http.URLEncodeTests)", "test_dict_containing_sequence_doseq (utils_tests.test_http.URLEncodeTests)", "test_dict_containing_sequence_not_doseq (utils_tests.test_http.URLEncodeTests)", "test_dict_containing_tuple_not_doseq (utils_tests.test_http.URLEncodeTests)", "test_dict_with_bytearray (utils_tests.test_http.URLEncodeTests)", "test_dict_with_bytes_values (utils_tests.test_http.URLEncodeTests)", "test_dict_with_sequence_of_bytes (utils_tests.test_http.URLEncodeTests)", "test_generator (utils_tests.test_http.URLEncodeTests)", "test_multivaluedict (utils_tests.test_http.URLEncodeTests)", "test_none (utils_tests.test_http.URLEncodeTests)", "test_none_in_generator (utils_tests.test_http.URLEncodeTests)", "test_none_in_sequence (utils_tests.test_http.URLEncodeTests)", "test_tuples (utils_tests.test_http.URLEncodeTests)", "test_parsing (utils_tests.test_http.ETagProcessingTests)", "test_quoting (utils_tests.test_http.ETagProcessingTests)", "test (utils_tests.test_http.EscapeLeadingSlashesTests)", "test_http_date (utils_tests.test_http.HttpDateProcessingTests)", "test_parsing_asctime (utils_tests.test_http.HttpDateProcessingTests)", "test_parsing_rfc1123 (utils_tests.test_http.HttpDateProcessingTests)", "test_parsing_rfc850 (utils_tests.test_http.HttpDateProcessingTests)", "test_parsing_year_less_than_70 (utils_tests.test_http.HttpDateProcessingTests)", "test_bad (utils_tests.test_http.IsSameDomainTests)", "test_good (utils_tests.test_http.IsSameDomainTests)", "test_quote (utils_tests.test_http.URLQuoteTests)", "test_quote_plus (utils_tests.test_http.URLQuoteTests)", "test_unquote (utils_tests.test_http.URLQuoteTests)", "test_unquote_plus (utils_tests.test_http.URLQuoteTests)", "test_roundtrip (utils_tests.test_http.URLSafeBase64Tests)"]}
{"instance_id": "django__django-11905", "tests_passing_in_original_repo": ["test_chain_date_time_lookups (lookup.tests.LookupTests)", "test_count (lookup.tests.LookupTests)", "test_custom_field_none_rhs (lookup.tests.LookupTests)", "Lookup.can_use_none_as_rhs=True allows None as a lookup value.", "test_error_messages (lookup.tests.LookupTests)", "test_escaping (lookup.tests.LookupTests)", "test_exact_exists (lookup.tests.LookupTests)", "Transforms are used for __exact=None.", "test_exact_query_rhs_with_selected_columns (lookup.tests.LookupTests)", "test_exact_sliced_queryset_limit_one (lookup.tests.LookupTests)", "test_exact_sliced_queryset_limit_one_offset (lookup.tests.LookupTests)", "test_exact_sliced_queryset_not_limited_to_one (lookup.tests.LookupTests)", "test_exclude (lookup.tests.LookupTests)", "test_exists (lookup.tests.LookupTests)", "test_get_next_previous_by (lookup.tests.LookupTests)", "test_in (lookup.tests.LookupTests)", "test_in_bulk (lookup.tests.LookupTests)", "test_in_bulk_lots_of_ids (lookup.tests.LookupTests)", "test_in_bulk_non_unique_field (lookup.tests.LookupTests)", "test_in_bulk_with_field (lookup.tests.LookupTests)", "test_in_different_database (lookup.tests.LookupTests)", "test_in_keeps_value_ordering (lookup.tests.LookupTests)", "test_iterator (lookup.tests.LookupTests)", "test_lookup_collision (lookup.tests.LookupTests)", "test_lookup_date_as_str (lookup.tests.LookupTests)", "test_lookup_int_as_str (lookup.tests.LookupTests)", "test_nested_outerref_lhs (lookup.tests.LookupTests)", "test_none (lookup.tests.LookupTests)", "test_nonfield_lookups (lookup.tests.LookupTests)", "test_pattern_lookups_with_substr (lookup.tests.LookupTests)", "test_regex (lookup.tests.LookupTests)", "test_regex_backreferencing (lookup.tests.LookupTests)", "test_regex_non_ascii (lookup.tests.LookupTests)", "test_regex_non_string (lookup.tests.LookupTests)", "test_regex_null (lookup.tests.LookupTests)", "test_relation_nested_lookup_error (lookup.tests.LookupTests)", "test_unsupported_lookups (lookup.tests.LookupTests)", "test_values (lookup.tests.LookupTests)", "test_values_list (lookup.tests.LookupTests)"]}
{"instance_id": "django__django-11910", "tests_passing_in_original_repo": ["test_add_alter_order_with_respect_to (migrations.test_autodetector.AutodetectorTests)", "test_add_blank_textfield_and_charfield (migrations.test_autodetector.AutodetectorTests)", "Test change detection of new constraints.", "test_add_date_fields_with_auto_now_add_asking_for_default (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_add_not_asking_for_null_addition (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_not_asking_for_default (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of new fields.", "test_add_field_and_foo_together (migrations.test_autodetector.AutodetectorTests)", "#22030 - Adding a field with a default should work.", "Tests index/unique_together detection.", "Test change detection of new indexes.", "#22435 - Adding a ManyToManyField should not prompt for a default.", "test_add_model_order_with_respect_to (migrations.test_autodetector.AutodetectorTests)", "test_add_non_blank_textfield_and_charfield (migrations.test_autodetector.AutodetectorTests)", "Tests detection for adding db_table in model's options.", "Tests detection for changing db_table in model's options'.", "test_alter_db_table_no_changes (migrations.test_autodetector.AutodetectorTests)", "Tests detection for removing db_table in model's options.", "test_alter_db_table_with_model_change (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_fk_dependency_other_app (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_not_null_oneoff_default (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_not_null_with_default (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_not_null_without_default (migrations.test_autodetector.AutodetectorTests)", "test_alter_fk_before_model_deletion (migrations.test_autodetector.AutodetectorTests)", "test_alter_many_to_many (migrations.test_autodetector.AutodetectorTests)", "test_alter_model_managers (migrations.test_autodetector.AutodetectorTests)", "Changing a model's options should make a change.", "Changing a proxy model's options should also make a change.", "Tests auto-naming of migrations for graph matching.", "Bases of other models come first.", "test_circular_dependency_mixed_addcreate (migrations.test_autodetector.AutodetectorTests)", "test_circular_dependency_swappable (migrations.test_autodetector.AutodetectorTests)", "test_circular_dependency_swappable2 (migrations.test_autodetector.AutodetectorTests)", "test_circular_dependency_swappable_self (migrations.test_autodetector.AutodetectorTests)", "test_circular_fk_dependency (migrations.test_autodetector.AutodetectorTests)", "test_concrete_field_changed_to_many_to_many (migrations.test_autodetector.AutodetectorTests)", "test_create_model_and_unique_together (migrations.test_autodetector.AutodetectorTests)", "Test creation of new model with constraints already defined.", "Test creation of new model with indexes already defined.", "test_create_with_through_model (migrations.test_autodetector.AutodetectorTests)", "test_custom_deconstructible (migrations.test_autodetector.AutodetectorTests)", "Tests custom naming of migrations for graph matching.", "Field instances are handled correctly by nested deconstruction.", "test_deconstruct_type (migrations.test_autodetector.AutodetectorTests)", "Nested deconstruction descends into dict values.", "Nested deconstruction descends into lists.", "Nested deconstruction descends into tuples.", "test_default_related_name_option (migrations.test_autodetector.AutodetectorTests)", "test_different_regex_does_alter (migrations.test_autodetector.AutodetectorTests)", "test_empty_foo_together (migrations.test_autodetector.AutodetectorTests)", "test_first_dependency (migrations.test_autodetector.AutodetectorTests)", "Having a ForeignKey automatically adds a dependency.", "test_fk_dependency_other_app (migrations.test_autodetector.AutodetectorTests)", "test_foo_together_no_changes (migrations.test_autodetector.AutodetectorTests)", "test_foo_together_ordering (migrations.test_autodetector.AutodetectorTests)", "Tests unique_together and field removal detection & ordering", "test_foreign_key_removed_before_target_model (migrations.test_autodetector.AutodetectorTests)", "test_identical_regex_doesnt_alter (migrations.test_autodetector.AutodetectorTests)", "test_keep_db_table_with_model_change (migrations.test_autodetector.AutodetectorTests)", "test_last_dependency (migrations.test_autodetector.AutodetectorTests)", "test_m2m_w_through_multistep_remove (migrations.test_autodetector.AutodetectorTests)", "test_managed_to_unmanaged (migrations.test_autodetector.AutodetectorTests)", "test_many_to_many_changed_to_concrete_field (migrations.test_autodetector.AutodetectorTests)", "test_many_to_many_removed_before_through_model (migrations.test_autodetector.AutodetectorTests)", "test_many_to_many_removed_before_through_model_2 (migrations.test_autodetector.AutodetectorTests)", "test_mti_inheritance_model_removal (migrations.test_autodetector.AutodetectorTests)", "#23956 - Inheriting models doesn't move *_ptr fields into AddField operations.", "test_nested_deconstructible_objects (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of new models.", "test_non_circular_foreignkey_dependency_removal (migrations.test_autodetector.AutodetectorTests)", "Tests deletion of old models.", "Test change detection of reordering of fields in indexes.", "test_pk_fk_included (migrations.test_autodetector.AutodetectorTests)", "The autodetector correctly deals with proxy models.", "Bases of proxies come first.", "test_proxy_custom_pk (migrations.test_autodetector.AutodetectorTests)", "FK dependencies still work on proxy models.", "test_proxy_to_mti_with_fk_to_proxy (migrations.test_autodetector.AutodetectorTests)", "test_proxy_to_mti_with_fk_to_proxy_proxy (migrations.test_autodetector.AutodetectorTests)", "test_remove_alter_order_with_respect_to (migrations.test_autodetector.AutodetectorTests)", "Test change detection of removed constraints.", "Tests autodetection of removed fields.", "test_remove_field_and_foo_together (migrations.test_autodetector.AutodetectorTests)", "Test change detection of removed indexes.", "Tests autodetection of renamed fields.", "test_rename_field_and_foo_together (migrations.test_autodetector.AutodetectorTests)", "test_rename_field_foreign_key_to_field (migrations.test_autodetector.AutodetectorTests)", "test_rename_field_preserved_db_column (migrations.test_autodetector.AutodetectorTests)", "test_rename_foreign_object_fields (migrations.test_autodetector.AutodetectorTests)", "test_rename_m2m_through_model (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of renamed models.", "test_rename_model_reverse_relation_dependencies (migrations.test_autodetector.AutodetectorTests)", "test_rename_model_with_fks_in_different_position (migrations.test_autodetector.AutodetectorTests)", "test_rename_model_with_renamed_rel_field (migrations.test_autodetector.AutodetectorTests)", "test_rename_related_field_preserved_db_column (migrations.test_autodetector.AutodetectorTests)", "test_replace_string_with_foreignkey (migrations.test_autodetector.AutodetectorTests)", "test_same_app_circular_fk_dependency (migrations.test_autodetector.AutodetectorTests)", "test_same_app_circular_fk_dependency_with_unique_together_and_indexes (migrations.test_autodetector.AutodetectorTests)", "test_same_app_no_fk_dependency (migrations.test_autodetector.AutodetectorTests)", "Setting order_with_respect_to adds a field.", "test_supports_functools_partial (migrations.test_autodetector.AutodetectorTests)", "test_swappable (migrations.test_autodetector.AutodetectorTests)", "test_swappable_changed (migrations.test_autodetector.AutodetectorTests)", "test_swappable_circular_multi_mti (migrations.test_autodetector.AutodetectorTests)", "Swappable models get their CreateModel first.", "test_trim_apps (migrations.test_autodetector.AutodetectorTests)", "The autodetector correctly deals with managed models.", "test_unmanaged_custom_pk (migrations.test_autodetector.AutodetectorTests)", "test_unmanaged_delete (migrations.test_autodetector.AutodetectorTests)", "test_unmanaged_to_managed (migrations.test_autodetector.AutodetectorTests)"]}
{"instance_id": "django__django-11964", "tests_passing_in_original_repo": ["test_integerchoices (model_enums.tests.ChoicesTests)", "test_integerchoices_auto_label (model_enums.tests.ChoicesTests)", "test_integerchoices_containment (model_enums.tests.ChoicesTests)", "test_integerchoices_empty_label (model_enums.tests.ChoicesTests)", "test_integerchoices_functional_api (model_enums.tests.ChoicesTests)", "test_invalid_definition (model_enums.tests.ChoicesTests)", "test_textchoices (model_enums.tests.ChoicesTests)", "test_textchoices_auto_label (model_enums.tests.ChoicesTests)", "test_textchoices_blank_value (model_enums.tests.ChoicesTests)", "test_textchoices_containment (model_enums.tests.ChoicesTests)", "test_textchoices_empty_label (model_enums.tests.ChoicesTests)", "test_textchoices_functional_api (model_enums.tests.ChoicesTests)", "test_bool_unsupported (model_enums.tests.CustomChoicesTests)", "test_labels_valid (model_enums.tests.CustomChoicesTests)", "test_timezone_unsupported (model_enums.tests.CustomChoicesTests)", "test_uuid_unsupported (model_enums.tests.CustomChoicesTests)"]}
{"instance_id": "django__django-11999", "tests_passing_in_original_repo": ["test_get_choices (model_fields.tests.GetChoicesLimitChoicesToTests)", "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesLimitChoicesToTests)", "test_get_choices (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_default_ordering (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_reverse_related_field_default_ordering (model_fields.tests.GetChoicesOrderingTests)", "Can supply a custom choices form class to Field.formfield()", "deconstruct() uses __qualname__ for nested class support.", "Field instances can be pickled.", "test_field_name (model_fields.tests.BasicFieldTests)", "Fields are ordered based on their creation.", "test_field_repr (model_fields.tests.BasicFieldTests)", "__repr__() uses __qualname__ for nested class support.", "test_field_str (model_fields.tests.BasicFieldTests)", "test_field_verbose_name (model_fields.tests.BasicFieldTests)", "Field.formfield() sets disabled for fields with choices.", "test_show_hidden_initial (model_fields.tests.BasicFieldTests)", "test_check (model_fields.tests.ChoicesTests)", "test_choices (model_fields.tests.ChoicesTests)", "test_flatchoices (model_fields.tests.ChoicesTests)", "test_formfield (model_fields.tests.ChoicesTests)", "test_invalid_choice (model_fields.tests.ChoicesTests)", "test_blank_in_choices (model_fields.tests.GetChoicesTests)", "test_blank_in_grouped_choices (model_fields.tests.GetChoicesTests)", "test_empty_choices (model_fields.tests.GetChoicesTests)", "test_lazy_strings_not_evaluated (model_fields.tests.GetChoicesTests)", "test_choices_and_field_display (model_fields.tests.GetFieldDisplayTests)", "test_empty_iterator_choices (model_fields.tests.GetFieldDisplayTests)", "A translated display value is coerced to str.", "test_iterator_choices (model_fields.tests.GetFieldDisplayTests)"]}
{"instance_id": "django__django-12113", "tests_passing_in_original_repo": []}
{"instance_id": "django__django-12125", "tests_passing_in_original_repo": ["test_args_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_args_signature (migrations.test_writer.OperationWriterTests)", "test_empty_signature (migrations.test_writer.OperationWriterTests)", "test_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_multiline_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_operation_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_custom_operation (migrations.test_writer.WriterTests)", "test_deconstruct_class_arguments (migrations.test_writer.WriterTests)", "test_migration_file_header_comments (migrations.test_writer.WriterTests)", "test_migration_path (migrations.test_writer.WriterTests)", "test_models_import_omitted (migrations.test_writer.WriterTests)", "test_register_non_serializer (migrations.test_writer.WriterTests)", "test_register_serializer (migrations.test_writer.WriterTests)", "test_serialize_builtin_types (migrations.test_writer.WriterTests)", "test_serialize_builtins (migrations.test_writer.WriterTests)", "test_serialize_choices (migrations.test_writer.WriterTests)", "test_serialize_class_based_validators (migrations.test_writer.WriterTests)", "test_serialize_collections (migrations.test_writer.WriterTests)", "test_serialize_compiled_regex (migrations.test_writer.WriterTests)", "test_serialize_constants (migrations.test_writer.WriterTests)", "test_serialize_datetime (migrations.test_writer.WriterTests)", "test_serialize_empty_nonempty_tuple (migrations.test_writer.WriterTests)", "test_serialize_enums (migrations.test_writer.WriterTests)", "test_serialize_fields (migrations.test_writer.WriterTests)", "test_serialize_frozensets (migrations.test_writer.WriterTests)", "test_serialize_functions (migrations.test_writer.WriterTests)", "test_serialize_functools_partial (migrations.test_writer.WriterTests)", "test_serialize_functools_partialmethod (migrations.test_writer.WriterTests)", "test_serialize_iterators (migrations.test_writer.WriterTests)", "test_serialize_lazy_objects (migrations.test_writer.WriterTests)", "A reference in a local scope can't be serialized.", "test_serialize_managers (migrations.test_writer.WriterTests)", "test_serialize_multiline_strings (migrations.test_writer.WriterTests)", "test_serialize_numbers (migrations.test_writer.WriterTests)", "test_serialize_range (migrations.test_writer.WriterTests)", "test_serialize_set (migrations.test_writer.WriterTests)", "test_serialize_settings (migrations.test_writer.WriterTests)", "test_serialize_strings (migrations.test_writer.WriterTests)", "test_serialize_timedelta (migrations.test_writer.WriterTests)", "test_serialize_type_none (migrations.test_writer.WriterTests)", "An unbound method used within a class body can be serialized.", "test_serialize_uuid (migrations.test_writer.WriterTests)", "test_simple_migration (migrations.test_writer.WriterTests)", "test_sorted_imports (migrations.test_writer.WriterTests)"]}
{"instance_id": "django__django-12184", "tests_passing_in_original_repo": ["test_resolve_type_error_propagates (urlpatterns.tests.ConversionExceptionTests)", "test_resolve_value_error_means_no_match (urlpatterns.tests.ConversionExceptionTests)", "test_reverse_value_error_propagates (urlpatterns.tests.ConversionExceptionTests)", "test_matching_urls (urlpatterns.tests.ConverterTests)", "test_nonmatching_urls (urlpatterns.tests.ConverterTests)", "test_allows_non_ascii_but_valid_identifiers (urlpatterns.tests.ParameterRestrictionTests)", "test_non_identifier_parameter_name_causes_exception (urlpatterns.tests.ParameterRestrictionTests)", "test_converter_resolve (urlpatterns.tests.SimplifiedURLTests)", "test_converter_reverse (urlpatterns.tests.SimplifiedURLTests)", "test_converter_reverse_with_second_layer_instance_namespace (urlpatterns.tests.SimplifiedURLTests)", "test_invalid_converter (urlpatterns.tests.SimplifiedURLTests)", "test_path_inclusion_is_matchable (urlpatterns.tests.SimplifiedURLTests)", "test_path_inclusion_is_reversible (urlpatterns.tests.SimplifiedURLTests)", "test_path_lookup_with_double_inclusion (urlpatterns.tests.SimplifiedURLTests)", "test_path_lookup_with_empty_string_inclusion (urlpatterns.tests.SimplifiedURLTests)", "test_path_lookup_with_inclusion (urlpatterns.tests.SimplifiedURLTests)", "test_path_lookup_with_multiple_parameters (urlpatterns.tests.SimplifiedURLTests)", "test_path_lookup_with_typed_parameters (urlpatterns.tests.SimplifiedURLTests)", "test_path_lookup_without_parameters (urlpatterns.tests.SimplifiedURLTests)", "test_path_reverse_with_parameter (urlpatterns.tests.SimplifiedURLTests)", "test_path_reverse_without_parameter (urlpatterns.tests.SimplifiedURLTests)", "test_re_path (urlpatterns.tests.SimplifiedURLTests)", "test_re_path_with_optional_parameter (urlpatterns.tests.SimplifiedURLTests)", "test_space_in_route (urlpatterns.tests.SimplifiedURLTests)", "test_two_variable_at_start_of_path_pattern (urlpatterns.tests.SimplifiedURLTests)"]}
{"instance_id": "django__django-12284", "tests_passing_in_original_repo": ["test_get_choices (model_fields.tests.GetChoicesLimitChoicesToTests)", "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesLimitChoicesToTests)", "test_get_choices (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_default_ordering (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_reverse_related_field_default_ordering (model_fields.tests.GetChoicesOrderingTests)", "Can supply a custom choices form class to Field.formfield()", "deconstruct() uses __qualname__ for nested class support.", "Field instances can be pickled.", "test_field_name (model_fields.tests.BasicFieldTests)", "Fields are ordered based on their creation.", "test_field_repr (model_fields.tests.BasicFieldTests)", "__repr__() uses __qualname__ for nested class support.", "test_field_str (model_fields.tests.BasicFieldTests)", "test_field_verbose_name (model_fields.tests.BasicFieldTests)", "Field.formfield() sets disabled for fields with choices.", "test_show_hidden_initial (model_fields.tests.BasicFieldTests)", "test_check (model_fields.tests.ChoicesTests)", "test_choices (model_fields.tests.ChoicesTests)", "test_flatchoices (model_fields.tests.ChoicesTests)", "test_formfield (model_fields.tests.ChoicesTests)", "test_invalid_choice (model_fields.tests.ChoicesTests)", "test_blank_in_choices (model_fields.tests.GetChoicesTests)", "test_blank_in_grouped_choices (model_fields.tests.GetChoicesTests)", "test_empty_choices (model_fields.tests.GetChoicesTests)", "test_lazy_strings_not_evaluated (model_fields.tests.GetChoicesTests)", "test_choices_and_field_display (model_fields.tests.GetFieldDisplayTests)", "test_empty_iterator_choices (model_fields.tests.GetFieldDisplayTests)", "A translated display value is coerced to str.", "test_iterator_choices (model_fields.tests.GetFieldDisplayTests)", "test_overriding_FIELD_display (model_fields.tests.GetFieldDisplayTests)"]}
{"instance_id": "django__django-12286", "tests_passing_in_original_repo": ["test_inconsistent_language_settings (check_framework.test_translation.TranslationCheckTests)", "test_invalid_language_code (check_framework.test_translation.TranslationCheckTests)", "test_invalid_languages (check_framework.test_translation.TranslationCheckTests)", "test_invalid_languages_bidi (check_framework.test_translation.TranslationCheckTests)", "test_valid_language_code (check_framework.test_translation.TranslationCheckTests)", "test_valid_languages (check_framework.test_translation.TranslationCheckTests)", "test_valid_languages_bidi (check_framework.test_translation.TranslationCheckTests)"]}
{"instance_id": "django__django-12308", "tests_passing_in_original_repo": ["test_cyclic (admin_utils.tests.NestedObjectsTests)", "test_non_added_parent (admin_utils.tests.NestedObjectsTests)", "test_on_delete_do_nothing (admin_utils.tests.NestedObjectsTests)", "test_queries (admin_utils.tests.NestedObjectsTests)", "test_relation_on_abstract (admin_utils.tests.NestedObjectsTests)", "test_siblings (admin_utils.tests.NestedObjectsTests)", "test_unrelated_roots (admin_utils.tests.NestedObjectsTests)", "test_flatten (admin_utils.tests.UtilsTests)", "test_flatten_fieldsets (admin_utils.tests.UtilsTests)", "test_label_for_field (admin_utils.tests.UtilsTests)", "test_label_for_field_form_argument (admin_utils.tests.UtilsTests)", "test_label_for_property (admin_utils.tests.UtilsTests)", "test_list_display_for_value (admin_utils.tests.UtilsTests)", "test_list_display_for_value_boolean (admin_utils.tests.UtilsTests)", "test_null_display_for_field (admin_utils.tests.UtilsTests)", "test_number_formats_display_for_field (admin_utils.tests.UtilsTests)", "test_number_formats_with_thousand_separator_display_for_field (admin_utils.tests.UtilsTests)", "test_quote (admin_utils.tests.UtilsTests)", "test_related_name (admin_utils.tests.UtilsTests)", "test_safestring_in_field_label (admin_utils.tests.UtilsTests)", "test_values_from_lookup_field (admin_utils.tests.UtilsTests)"]}
{"instance_id": "django__django-12453", "tests_passing_in_original_repo": ["test_migrate_test_setting_false (backends.base.test_creation.TestDbCreationTests)", "test_migrate_test_setting_true (backends.base.test_creation.TestDbCreationTests)", "test_custom_test_name (backends.base.test_creation.TestDbSignatureTests)", "test_custom_test_name_with_test_prefix (backends.base.test_creation.TestDbSignatureTests)", "test_default_name (backends.base.test_creation.TestDbSignatureTests)"]}
{"instance_id": "django__django-12470", "tests_passing_in_original_repo": ["test_unique (model_inheritance.tests.InheritanceUniqueTests)", "test_unique_together (model_inheritance.tests.InheritanceUniqueTests)", "test_exclude_inherited_on_null (model_inheritance.tests.ModelInheritanceDataTests)", "test_filter_inherited_model (model_inheritance.tests.ModelInheritanceDataTests)", "test_filter_inherited_on_null (model_inheritance.tests.ModelInheritanceDataTests)", "test_filter_on_parent_returns_object_of_parent_type (model_inheritance.tests.ModelInheritanceDataTests)", "test_inherited_does_not_exist_exception (model_inheritance.tests.ModelInheritanceDataTests)", "test_inherited_multiple_objects_returned_exception (model_inheritance.tests.ModelInheritanceDataTests)", "test_parent_cache_reuse (model_inheritance.tests.ModelInheritanceDataTests)", "test_parent_child_one_to_one_link (model_inheritance.tests.ModelInheritanceDataTests)", "test_parent_child_one_to_one_link_on_nonrelated_objects (model_inheritance.tests.ModelInheritanceDataTests)", "test_parent_fields_available_for_filtering_in_child_model (model_inheritance.tests.ModelInheritanceDataTests)", "test_related_objects_for_inherited_models (model_inheritance.tests.ModelInheritanceDataTests)", "test_select_related_defer (model_inheritance.tests.ModelInheritanceDataTests)", "test_select_related_works_on_parent_model_fields (model_inheritance.tests.ModelInheritanceDataTests)", "test_update_inherited_model (model_inheritance.tests.ModelInheritanceDataTests)", "test_update_query_counts (model_inheritance.tests.ModelInheritanceDataTests)", "test_update_works_on_parent_and_child_models_at_once (model_inheritance.tests.ModelInheritanceDataTests)", "test_values_works_on_parent_model_fields (model_inheritance.tests.ModelInheritanceDataTests)", "test_abstract (model_inheritance.tests.ModelInheritanceTests)", "test_abstract_parent_link (model_inheritance.tests.ModelInheritanceTests)", "Creating a child with non-abstract parents only issues INSERTs.", "test_custompk_m2m (model_inheritance.tests.ModelInheritanceTests)", "test_eq (model_inheritance.tests.ModelInheritanceTests)", "test_init_subclass (model_inheritance.tests.ModelInheritanceTests)", "test_meta_fields_and_ordering (model_inheritance.tests.ModelInheritanceTests)", "test_mixin_init (model_inheritance.tests.ModelInheritanceTests)", "test_model_with_distinct_accessors (model_inheritance.tests.ModelInheritanceTests)", "test_model_with_distinct_related_query_name (model_inheritance.tests.ModelInheritanceTests)", "test_reverse_relation_for_different_hierarchy_tree (model_inheritance.tests.ModelInheritanceTests)", "test_set_name (model_inheritance.tests.ModelInheritanceTests)", "test_update_parent_filtering (model_inheritance.tests.ModelInheritanceTests)", "test_abstract_fk_related_name (model_inheritance.tests.InheritanceSameModelNameTests)"]}
{"instance_id": "django__django-12497", "tests_passing_in_original_repo": ["test_clash_between_accessors (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.AccessorClashTests)", "Ref #22047.", "test_no_clash_for_hidden_related_name (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_clash_parent_link (invalid_models_tests.test_relative_fields.ComplexClashTests)", "test_complex_clash (invalid_models_tests.test_relative_fields.ComplexClashTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_explicit_field_names (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_intersection_foreign_object (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_invalid_field (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_invalid_order (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_m2m_field_argument_validation (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_superset_foreign_object (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_ambiguous_relationship_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_abstract_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_isolate_apps_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_missing_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_non_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_non_unique_field_under_explicit_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_partially_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_unique_field_with_meta_constraint (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_object_to_non_unique_fields (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_object_to_partially_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_object_to_unique_field_with_meta_constraint (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_invalid_related_query_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_m2m_to_abstract_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_through_isolate_apps_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_to_isolate_apps_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_to_missing_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_with_limit_choices_auto_created_no_warning (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_with_useless_options (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_missing_relationship_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_missing_relationship_model_on_model_check (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_not_swapped_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_nullable_primary_key (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_on_delete_set_default_without_default_value (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_on_delete_set_null_on_non_nullable_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_referencing_to_swapped_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_related_field_has_invalid_related_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_related_field_has_valid_related_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_relationship_model_missing_foreign_key (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_relationship_model_with_foreign_key_to_wrong_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_to_fields_exist (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_to_fields_not_checked_if_related_model_doesnt_exist (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_too_many_foreign_keys_in_self_referential_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_unique_m2m (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_valid_foreign_key_without_accessor (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_accessor_clash (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)", "test_clash_under_explicit_related_name (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)", "test_reverse_query_name_clash (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)", "test_accessor_clash (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_clash_between_accessors (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_clash_under_explicit_related_name (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_reverse_query_name_clash (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_valid_model (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)"]}
{"instance_id": "django__django-12589", "tests_passing_in_original_repo": ["test_add_implementation (aggregation.tests.AggregateTestCase)", "test_aggregate_alias (aggregation.tests.AggregateTestCase)", "test_aggregate_annotation (aggregation.tests.AggregateTestCase)", "test_aggregate_in_order_by (aggregation.tests.AggregateTestCase)", "test_aggregate_multi_join (aggregation.tests.AggregateTestCase)", "test_aggregate_over_complex_annotation (aggregation.tests.AggregateTestCase)", "test_aggregation_exists_annotation (aggregation.tests.AggregateTestCase)", "test_aggregation_expressions (aggregation.tests.AggregateTestCase)", "test_aggregation_order_by_not_selected_annotation_values (aggregation.tests.AggregateTestCase)", "Subquery annotations are excluded from the GROUP BY if they are", "test_aggregation_subquery_annotation_exists (aggregation.tests.AggregateTestCase)", "test_aggregation_subquery_annotation_multivalued (aggregation.tests.AggregateTestCase)", "test_aggregation_subquery_annotation_related_field (aggregation.tests.AggregateTestCase)", "test_aggregation_subquery_annotation_values (aggregation.tests.AggregateTestCase)", "test_annotate_basic (aggregation.tests.AggregateTestCase)", "test_annotate_defer (aggregation.tests.AggregateTestCase)", "test_annotate_defer_select_related (aggregation.tests.AggregateTestCase)", "test_annotate_m2m (aggregation.tests.AggregateTestCase)", "test_annotate_ordering (aggregation.tests.AggregateTestCase)", "test_annotate_over_annotate (aggregation.tests.AggregateTestCase)", "test_annotate_values (aggregation.tests.AggregateTestCase)", "test_annotate_values_aggregate (aggregation.tests.AggregateTestCase)", "test_annotate_values_list (aggregation.tests.AggregateTestCase)", "test_annotated_aggregate_over_annotated_aggregate (aggregation.tests.AggregateTestCase)", "test_annotation (aggregation.tests.AggregateTestCase)", "test_annotation_expressions (aggregation.tests.AggregateTestCase)", "test_arguments_must_be_expressions (aggregation.tests.AggregateTestCase)", "test_avg_decimal_field (aggregation.tests.AggregateTestCase)", "test_avg_duration_field (aggregation.tests.AggregateTestCase)", "test_backwards_m2m_annotate (aggregation.tests.AggregateTestCase)", "test_combine_different_types (aggregation.tests.AggregateTestCase)", "test_complex_aggregations_require_kwarg (aggregation.tests.AggregateTestCase)", "test_complex_values_aggregation (aggregation.tests.AggregateTestCase)", "test_count (aggregation.tests.AggregateTestCase)", "test_count_distinct_expression (aggregation.tests.AggregateTestCase)", "test_count_star (aggregation.tests.AggregateTestCase)", "test_dates_with_aggregation (aggregation.tests.AggregateTestCase)", "test_decimal_max_digits_has_no_effect (aggregation.tests.AggregateTestCase)", "test_distinct_on_aggregate (aggregation.tests.AggregateTestCase)", "test_empty_aggregate (aggregation.tests.AggregateTestCase)", "test_even_more_aggregate (aggregation.tests.AggregateTestCase)", "test_expression_on_aggregation (aggregation.tests.AggregateTestCase)", "test_filter_aggregate (aggregation.tests.AggregateTestCase)", "test_filtering (aggregation.tests.AggregateTestCase)", "test_fkey_aggregate (aggregation.tests.AggregateTestCase)", "test_group_by_exists_annotation (aggregation.tests.AggregateTestCase)", "test_group_by_subquery_annotation (aggregation.tests.AggregateTestCase)", "test_grouped_annotation_in_group_by (aggregation.tests.AggregateTestCase)", "test_missing_output_field_raises_error (aggregation.tests.AggregateTestCase)", "test_more_aggregation (aggregation.tests.AggregateTestCase)", "test_multi_arg_aggregate (aggregation.tests.AggregateTestCase)", "test_multiple_aggregates (aggregation.tests.AggregateTestCase)", "test_non_grouped_annotation_not_in_group_by (aggregation.tests.AggregateTestCase)", "test_nonaggregate_aggregation_throws (aggregation.tests.AggregateTestCase)", "test_nonfield_annotation (aggregation.tests.AggregateTestCase)", "test_order_of_precedence (aggregation.tests.AggregateTestCase)", "test_related_aggregate (aggregation.tests.AggregateTestCase)", "test_reverse_fkey_annotate (aggregation.tests.AggregateTestCase)", "test_single_aggregate (aggregation.tests.AggregateTestCase)", "test_sum_distinct_aggregate (aggregation.tests.AggregateTestCase)", "test_sum_duration_field (aggregation.tests.AggregateTestCase)", "test_ticket11881 (aggregation.tests.AggregateTestCase)", "test_ticket12886 (aggregation.tests.AggregateTestCase)", "test_ticket17424 (aggregation.tests.AggregateTestCase)", "test_values_aggregation (aggregation.tests.AggregateTestCase)", "test_values_annotation_with_expression (aggregation.tests.AggregateTestCase)"]}
{"instance_id": "django__django-12700", "tests_passing_in_original_repo": ["test_repr (view_tests.tests.test_debug.CallableSettingWrapperTests)", "test_cleansed_substitute_override (view_tests.tests.test_debug.CustomExceptionReporterFilterTests)", "test_hidden_settings_override (view_tests.tests.test_debug.CustomExceptionReporterFilterTests)", "test_setting_allows_custom_subclass (view_tests.tests.test_debug.CustomExceptionReporterFilterTests)", "test_handle_db_exception (view_tests.tests.test_debug.DebugViewQueriesAllowedTests)", "test_400 (view_tests.tests.test_debug.DebugViewTests)", "test_403 (view_tests.tests.test_debug.DebugViewTests)", "test_403_template (view_tests.tests.test_debug.DebugViewTests)", "test_404 (view_tests.tests.test_debug.DebugViewTests)", "test_404_empty_path_not_in_urls (view_tests.tests.test_debug.DebugViewTests)", "test_404_not_in_urls (view_tests.tests.test_debug.DebugViewTests)", "test_classbased_technical_404 (view_tests.tests.test_debug.DebugViewTests)", "test_default_urlconf_template (view_tests.tests.test_debug.DebugViewTests)", "test_exception_reporter_from_request (view_tests.tests.test_debug.DebugViewTests)", "test_exception_reporter_from_settings (view_tests.tests.test_debug.DebugViewTests)", "test_files (view_tests.tests.test_debug.DebugViewTests)", "test_no_template_source_loaders (view_tests.tests.test_debug.DebugViewTests)", "test_non_l10ned_numeric_ids (view_tests.tests.test_debug.DebugViewTests)", "test_regression_21530 (view_tests.tests.test_debug.DebugViewTests)", "test_technical_404 (view_tests.tests.test_debug.DebugViewTests)", "test_technical_404_converter_raise_404 (view_tests.tests.test_debug.DebugViewTests)", "test_template_encoding (view_tests.tests.test_debug.DebugViewTests)", "test_template_exceptions (view_tests.tests.test_debug.DebugViewTests)", "Tests for not existing file", "test_sensitive_post_parameters_not_called (view_tests.tests.test_debug.DecoratorsTests)", "test_sensitive_variables_not_called (view_tests.tests.test_debug.DecoratorsTests)", "test_callable_settings (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_callable_settings_forbidding_to_set_attributes (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_cleanse_setting_basic (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_cleanse_setting_ignore_case (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_cleanse_setting_recurses_in_dictionary (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_custom_exception_reporter_filter (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_dict_setting_with_non_str_key (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_exception_report_uses_meta_filtering (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_multivalue_dict_key_error (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_non_sensitive_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_paranoid_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_request_meta_filtering (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_function_arguments (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_function_keyword_arguments (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_method (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_sensitive_settings (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "test_settings_with_sensitive_keys (view_tests.tests.test_debug.ExceptionReporterFilterTests)", "An exception report can be generated even for a disallowed host.", "test_encoding_error (view_tests.tests.test_debug.ExceptionReporterTests)", "The ExceptionReporter supports Unix, Windows and Macintosh EOL markers", "test_exception_fetching_user (view_tests.tests.test_debug.ExceptionReporterTests)", "test_ignore_traceback_evaluation_exceptions (view_tests.tests.test_debug.ExceptionReporterTests)", "Safe strings in local variables are escaped.", "test_message_only (view_tests.tests.test_debug.ExceptionReporterTests)", "An exception report can be generated for just a request", "An exception report can be generated without request", "Non-UTF-8 exceptions/values should not make the output generation choke.", "test_reporting_frames_for_cyclic_reference (view_tests.tests.test_debug.ExceptionReporterTests)", "test_reporting_frames_source_not_match (view_tests.tests.test_debug.ExceptionReporterTests)", "test_reporting_frames_without_source (view_tests.tests.test_debug.ExceptionReporterTests)", "test_reporting_of_nested_exceptions (view_tests.tests.test_debug.ExceptionReporterTests)", "A simple exception report can be generated", "A message can be provided in addition to a request", "test_request_with_items_key (view_tests.tests.test_debug.ExceptionReporterTests)", "test_template_encoding (view_tests.tests.test_debug.ExceptionReporterTests)", "Large values should not create a large HTML.", "test_unfrozen_importlib (view_tests.tests.test_debug.ExceptionReporterTests)", "Unprintable values should not make the output generation choke.", "test_400 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_403 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_404 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_template_not_found_error (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)", "test_custom_exception_reporter_filter (view_tests.tests.test_debug.NonHTMLResponseExceptionReporterFilter)", "test_non_html_response_encoding (view_tests.tests.test_debug.NonHTMLResponseExceptionReporterFilter)", "test_non_sensitive_request (view_tests.tests.test_debug.NonHTMLResponseExceptionReporterFilter)", "test_paranoid_request (view_tests.tests.test_debug.NonHTMLResponseExceptionReporterFilter)", "test_sensitive_request (view_tests.tests.test_debug.NonHTMLResponseExceptionReporterFilter)", "test_message_only (view_tests.tests.test_debug.PlainTextReportTests)", "test_request_with_items_key (view_tests.tests.test_debug.PlainTextReportTests)", "test_template_exception (view_tests.tests.test_debug.PlainTextReportTests)"]}
{"instance_id": "django__django-12708", "tests_passing_in_original_repo": ["test_reference_field_by_through_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_from_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_name (migrations.test_operations.FieldOperationTests)", "test_references_field_by_remote_field_model (migrations.test_operations.FieldOperationTests)", "test_references_field_by_through (migrations.test_operations.FieldOperationTests)", "test_references_field_by_to_fields (migrations.test_operations.FieldOperationTests)", "test_references_model (migrations.test_operations.FieldOperationTests)", "test_add_binaryfield (migrations.test_operations.OperationTests)", "test_add_charfield (migrations.test_operations.OperationTests)", "test_add_constraint (migrations.test_operations.OperationTests)", "test_add_constraint_combinable (migrations.test_operations.OperationTests)", "test_add_constraint_percent_escaping (migrations.test_operations.OperationTests)", "test_add_field (migrations.test_operations.OperationTests)", "test_add_field_m2m (migrations.test_operations.OperationTests)", "test_add_field_preserve_default (migrations.test_operations.OperationTests)", "test_add_index (migrations.test_operations.OperationTests)", "test_add_index_state_forwards (migrations.test_operations.OperationTests)", "test_add_or_constraint (migrations.test_operations.OperationTests)", "test_add_partial_unique_constraint (migrations.test_operations.OperationTests)", "test_add_textfield (migrations.test_operations.OperationTests)", "test_alter_field (migrations.test_operations.OperationTests)", "test_alter_field_m2m (migrations.test_operations.OperationTests)", "test_alter_field_pk (migrations.test_operations.OperationTests)", "test_alter_field_pk_fk (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_on_fk_target_changes (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_on_fk_with_to_field_target_changes (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_on_fk_with_to_field_target_type_change (migrations.test_operations.OperationTests)", "test_alter_field_with_index (migrations.test_operations.OperationTests)", "test_alter_fk (migrations.test_operations.OperationTests)", "test_alter_fk_non_fk (migrations.test_operations.OperationTests)", "test_alter_index_together (migrations.test_operations.OperationTests)", "test_alter_index_together_remove (migrations.test_operations.OperationTests)", "test_alter_model_managers (migrations.test_operations.OperationTests)", "test_alter_model_managers_emptying (migrations.test_operations.OperationTests)", "test_alter_model_options (migrations.test_operations.OperationTests)", "test_alter_model_options_emptying (migrations.test_operations.OperationTests)", "test_alter_model_table (migrations.test_operations.OperationTests)", "test_alter_model_table_m2m (migrations.test_operations.OperationTests)", "test_alter_model_table_none (migrations.test_operations.OperationTests)", "test_alter_model_table_noop (migrations.test_operations.OperationTests)", "test_alter_order_with_respect_to (migrations.test_operations.OperationTests)", "test_alter_unique_together (migrations.test_operations.OperationTests)", "test_alter_unique_together_remove (migrations.test_operations.OperationTests)", "A field may be migrated from AutoField to BigAutoField.", "test_column_name_quoting (migrations.test_operations.OperationTests)", "test_create_model (migrations.test_operations.OperationTests)", "test_create_model_inheritance (migrations.test_operations.OperationTests)", "test_create_model_m2m (migrations.test_operations.OperationTests)", "test_create_model_managers (migrations.test_operations.OperationTests)", "test_create_model_with_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_base (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_field_name (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_manager_name (migrations.test_operations.OperationTests)", "test_create_model_with_partial_unique_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_unique_after (migrations.test_operations.OperationTests)", "test_create_proxy_model (migrations.test_operations.OperationTests)", "test_create_unmanaged_model (migrations.test_operations.OperationTests)", "test_delete_model (migrations.test_operations.OperationTests)", "test_delete_mti_model (migrations.test_operations.OperationTests)", "test_delete_proxy_model (migrations.test_operations.OperationTests)", "test_model_with_bigautofield (migrations.test_operations.OperationTests)", "test_remove_constraint (migrations.test_operations.OperationTests)", "test_remove_field (migrations.test_operations.OperationTests)", "test_remove_field_m2m (migrations.test_operations.OperationTests)", "test_remove_field_m2m_with_through (migrations.test_operations.OperationTests)", "test_remove_fk (migrations.test_operations.OperationTests)", "test_remove_index (migrations.test_operations.OperationTests)", "test_remove_index_state_forwards (migrations.test_operations.OperationTests)", "test_remove_partial_unique_constraint (migrations.test_operations.OperationTests)", "test_rename_field (migrations.test_operations.OperationTests)", "test_rename_field_reloads_state_on_fk_target_changes (migrations.test_operations.OperationTests)", "RenameModel renames a many-to-many column after a RenameField.", "test_rename_m2m_target_model (migrations.test_operations.OperationTests)", "test_rename_m2m_through_model (migrations.test_operations.OperationTests)", "test_rename_missing_field (migrations.test_operations.OperationTests)", "test_rename_model (migrations.test_operations.OperationTests)", "test_rename_model_state_forwards (migrations.test_operations.OperationTests)", "test_rename_model_with_m2m (migrations.test_operations.OperationTests)", "test_rename_model_with_self_referential_fk (migrations.test_operations.OperationTests)", "test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)", "test_rename_model_with_superclass_fk (migrations.test_operations.OperationTests)", "test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests)", "test_repoint_field_m2m (migrations.test_operations.OperationTests)", "test_run_python (migrations.test_operations.OperationTests)", "test_run_python_atomic (migrations.test_operations.OperationTests)", "test_run_python_noop (migrations.test_operations.OperationTests)", "test_run_python_related_assignment (migrations.test_operations.OperationTests)", "test_run_sql (migrations.test_operations.OperationTests)", "test_run_sql_noop (migrations.test_operations.OperationTests)", "test_run_sql_params (migrations.test_operations.OperationTests)", "test_run_sql_params_invalid (migrations.test_operations.OperationTests)", "test_separate_database_and_state (migrations.test_operations.OperationTests)", "test_separate_database_and_state2 (migrations.test_operations.OperationTests)", "A field may be migrated from SmallAutoField to AutoField.", "A field may be migrated from SmallAutoField to BigAutoField.", "test_add_field_ignore_swapped (migrations.test_operations.SwappableOperationTests)", "test_create_ignore_swapped (migrations.test_operations.SwappableOperationTests)", "test_delete_ignore_swapped (migrations.test_operations.SwappableOperationTests)", "test_indexes_ignore_swapped (migrations.test_operations.SwappableOperationTests)", "test_references_model_mixin (migrations.test_operations.TestCreateModel)"]}
{"instance_id": "django__django-12747", "tests_passing_in_original_repo": ["test_bulk (delete.tests.DeletionTests)", "test_can_defer_constraint_checks (delete.tests.DeletionTests)", "test_delete_with_keeping_parents (delete.tests.DeletionTests)", "test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests)", "test_deletion_order (delete.tests.DeletionTests)", "test_hidden_related (delete.tests.DeletionTests)", "test_instance_update (delete.tests.DeletionTests)", "test_large_delete (delete.tests.DeletionTests)", "test_large_delete_related (delete.tests.DeletionTests)", "test_m2m (delete.tests.DeletionTests)", "test_model_delete_returns_num_rows (delete.tests.DeletionTests)", "test_only_referenced_fields_selected (delete.tests.DeletionTests)", "test_proxied_model_duplicate_queries (delete.tests.DeletionTests)", "test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)", "test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests)", "test_fast_delete_combined_relationships (delete.tests.FastDeleteTests)", "test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests)", "test_fast_delete_fk (delete.tests.FastDeleteTests)", "test_fast_delete_inheritance (delete.tests.FastDeleteTests)", "test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests)", "test_fast_delete_joined_qs (delete.tests.FastDeleteTests)", "test_fast_delete_large_batch (delete.tests.FastDeleteTests)", "test_fast_delete_m2m (delete.tests.FastDeleteTests)", "test_fast_delete_qs (delete.tests.FastDeleteTests)", "test_fast_delete_revm2m (delete.tests.FastDeleteTests)", "test_auto (delete.tests.OnDeleteTests)", "test_auto_nullable (delete.tests.OnDeleteTests)", "test_cascade (delete.tests.OnDeleteTests)", "test_cascade_from_child (delete.tests.OnDeleteTests)", "test_cascade_from_parent (delete.tests.OnDeleteTests)", "test_cascade_nullable (delete.tests.OnDeleteTests)", "test_do_nothing (delete.tests.OnDeleteTests)", "test_do_nothing_qscount (delete.tests.OnDeleteTests)", "test_inheritance_cascade_down (delete.tests.OnDeleteTests)", "test_inheritance_cascade_up (delete.tests.OnDeleteTests)", "test_non_callable (delete.tests.OnDeleteTests)", "test_o2o_setnull (delete.tests.OnDeleteTests)", "test_protect (delete.tests.OnDeleteTests)", "test_protect_multiple (delete.tests.OnDeleteTests)", "test_protect_path (delete.tests.OnDeleteTests)", "test_restrict (delete.tests.OnDeleteTests)", "test_restrict_gfk_no_fast_delete (delete.tests.OnDeleteTests)", "test_restrict_multiple (delete.tests.OnDeleteTests)", "test_restrict_path_cascade_direct (delete.tests.OnDeleteTests)", "test_restrict_path_cascade_indirect (delete.tests.OnDeleteTests)", "test_restrict_path_cascade_indirect_diamond (delete.tests.OnDeleteTests)", "test_setdefault (delete.tests.OnDeleteTests)", "test_setdefault_none (delete.tests.OnDeleteTests)", "test_setnull (delete.tests.OnDeleteTests)", "test_setnull_from_child (delete.tests.OnDeleteTests)", "test_setnull_from_parent (delete.tests.OnDeleteTests)", "test_setvalue (delete.tests.OnDeleteTests)"]}
{"instance_id": "django__django-12856", "tests_passing_in_original_repo": ["test_check_constraints (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraints_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_deferrable_unique_constraint (invalid_models_tests.test_models.ConstraintsTests)", "test_deferrable_unique_constraint_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_with_condition (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_with_condition_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_db_column_clash (invalid_models_tests.test_models.FieldNamesTests)", "test_ending_with_underscore (invalid_models_tests.test_models.FieldNamesTests)", "test_including_separator (invalid_models_tests.test_models.FieldNamesTests)", "test_pk (invalid_models_tests.test_models.FieldNamesTests)", "test_index_with_condition (invalid_models_tests.test_models.IndexesTests)", "test_index_with_condition_required_db_features (invalid_models_tests.test_models.IndexesTests)", "test_max_name_length (invalid_models_tests.test_models.IndexesTests)", "test_name_constraints (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_fk (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_m2m_field (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_missing_field (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_non_local_field (invalid_models_tests.test_models.IndexesTests)", "test_check_jsonfield (invalid_models_tests.test_models.JSONFieldTests)", "test_check_jsonfield_required_db_features (invalid_models_tests.test_models.JSONFieldTests)", "test_ordering_pointing_to_json_field_value (invalid_models_tests.test_models.JSONFieldTests)", "test_list_containing_non_iterable (invalid_models_tests.test_models.IndexTogetherTests)", "test_non_iterable (invalid_models_tests.test_models.IndexTogetherTests)", "test_non_list (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_fk (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_m2m_field (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_missing_field (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_non_local_field (invalid_models_tests.test_models.IndexTogetherTests)", "test_just_order_with_respect_to_no_errors (invalid_models_tests.test_models.OtherModelTests)", "test_just_ordering_no_errors (invalid_models_tests.test_models.OtherModelTests)", "test_lazy_reference_checks (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_autogenerated_table_name_clash (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_autogenerated_table_name_clash_database_routers_installed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_field_table_name_clash (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_field_table_name_clash_database_routers_installed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_table_name_clash (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_table_name_clash_database_routers_installed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_to_concrete_and_proxy_allowed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_unmanaged_shadow_models_not_checked (invalid_models_tests.test_models.OtherModelTests)", "test_name_beginning_with_underscore (invalid_models_tests.test_models.OtherModelTests)", "test_name_contains_double_underscores (invalid_models_tests.test_models.OtherModelTests)", "test_name_ending_with_underscore (invalid_models_tests.test_models.OtherModelTests)", "test_non_valid (invalid_models_tests.test_models.OtherModelTests)", "test_onetoone_with_explicit_parent_link_parent_model (invalid_models_tests.test_models.OtherModelTests)", "test_onetoone_with_parent_model (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_allows_registered_lookups (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_non_iterable (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_multiple_times_to_model_fields (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_foreignkey_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_lookup_not_transform (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_foreignkey_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_related_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_related_model_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_non_related_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_related_model_pk (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_two_related_model_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_with_order_with_respect_to (invalid_models_tests.test_models.OtherModelTests)", "test_property_and_related_field_accessor_clash (invalid_models_tests.test_models.OtherModelTests)", "test_single_primary_key (invalid_models_tests.test_models.OtherModelTests)", "test_swappable_missing_app (invalid_models_tests.test_models.OtherModelTests)", "test_swappable_missing_app_name (invalid_models_tests.test_models.OtherModelTests)", "test_two_m2m_through_same_model_with_different_through_fields (invalid_models_tests.test_models.OtherModelTests)", "test_two_m2m_through_same_relationship (invalid_models_tests.test_models.OtherModelTests)", "test_unique_primary_key (invalid_models_tests.test_models.OtherModelTests)", "test_field_name_clash_with_child_accessor (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_id_clash (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_inheritance_clash (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_multigeneration_inheritance (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_multiinheritance_clash (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_list_containing_non_iterable (invalid_models_tests.test_models.UniqueTogetherTests)", "test_non_iterable (invalid_models_tests.test_models.UniqueTogetherTests)", "test_non_list (invalid_models_tests.test_models.UniqueTogetherTests)", "test_pointing_to_fk (invalid_models_tests.test_models.UniqueTogetherTests)", "test_pointing_to_m2m (invalid_models_tests.test_models.UniqueTogetherTests)", "test_pointing_to_missing_field (invalid_models_tests.test_models.UniqueTogetherTests)", "test_valid_model (invalid_models_tests.test_models.UniqueTogetherTests)"]}
{"instance_id": "django__django-12908", "tests_passing_in_original_repo": ["test_combining_multiple_models (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_difference (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_intersection (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_union (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_union_empty_result (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_difference_with_empty_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_difference_with_values (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_intersection_with_empty_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_intersection_with_values (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_limits (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_order_by_same_type (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_order_raises_on_non_selected_column (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_ordering (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_ordering_by_f_expression (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_qs_with_subcompound_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_simple_difference (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_simple_intersection (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_simple_union (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_distinct (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_empty_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_extra_and_values_list (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_two_annotated_values_list (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_values (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_values_list_and_order (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_values_list_on_annotated_and_unannotated (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_unsupported_operations_on_combined_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_unsupported_ordering_slicing_raises_db_error (queries.test_qs_combinators.QuerySetSetOperationTests)"]}
{"instance_id": "django__django-12915", "tests_passing_in_original_repo": ["test_disconnect (asgi.tests.ASGITest)", "test_file_response (asgi.tests.ASGITest)", "test_get_asgi_application (asgi.tests.ASGITest)", "test_get_query_string (asgi.tests.ASGITest)", "test_headers (asgi.tests.ASGITest)", "test_non_unicode_query_string (asgi.tests.ASGITest)", "test_request_lifecycle_signals_dispatched_with_thread_sensitive (asgi.tests.ASGITest)", "test_wrong_connection_type (asgi.tests.ASGITest)"]}
{"instance_id": "django__django-12983", "tests_passing_in_original_repo": ["test_compress_sequence (utils_tests.test_text.TestUtilsText)", "test_format_lazy (utils_tests.test_text.TestUtilsText)", "test_get_text_list (utils_tests.test_text.TestUtilsText)", "test_get_valid_filename (utils_tests.test_text.TestUtilsText)", "test_normalize_newlines (utils_tests.test_text.TestUtilsText)", "test_phone2numeric (utils_tests.test_text.TestUtilsText)", "test_slugify (utils_tests.test_text.TestUtilsText)", "test_smart_split (utils_tests.test_text.TestUtilsText)", "test_truncate_chars (utils_tests.test_text.TestUtilsText)", "test_truncate_chars_html (utils_tests.test_text.TestUtilsText)", "test_truncate_html_words (utils_tests.test_text.TestUtilsText)", "test_truncate_words (utils_tests.test_text.TestUtilsText)", "test_unescape_entities (utils_tests.test_text.TestUtilsText)", "test_unescape_entities_deprecated (utils_tests.test_text.TestUtilsText)", "test_unescape_string_literal (utils_tests.test_text.TestUtilsText)", "test_wrap (utils_tests.test_text.TestUtilsText)"]}
{"instance_id": "django__django-13028", "tests_passing_in_original_repo": ["#13227 -- If a queryset is already evaluated, it can still be used as a query arg", "test_no_fields_cloning (queries.tests.CloneTests)", "test_no_model_options_cloning (queries.tests.CloneTests)", "test_ticket8597 (queries.tests.ComparisonTests)", "test_in_list_limit (queries.tests.ConditionalTests)", "test_infinite_loop (queries.tests.ConditionalTests)", "test_ticket7371 (queries.tests.CustomPkTests)", "test_no_extra_params (queries.tests.DefaultValuesInsertTest)", "test_disjunction_promotion1 (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion2 (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion3 (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion3_demote (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion4 (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion4_demote (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion5_demote (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion6 (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion7 (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion_fexpression (queries.tests.DisjunctionPromotionTests)", "test_disjunction_promotion_select_related (queries.tests.DisjunctionPromotionTests)", "test_ticket7872 (queries.tests.DisjunctiveFilterTests)", "test_ticket8283 (queries.tests.DisjunctiveFilterTests)", "test_double_subquery_in (queries.tests.DoubleInSubqueryTests)", "test_21001 (queries.tests.EmptyStringsAsNullTest)", "test_direct_exclude (queries.tests.EmptyStringsAsNullTest)", "test_joined_exclude (queries.tests.EmptyStringsAsNullTest)", "test_ticket_7302 (queries.tests.EscapingTests)", "test_ticket15786 (queries.tests.Exclude15786)", "test_exclude_plain (queries.tests.ExcludeTest17600)", "test_exclude_plain_distinct (queries.tests.ExcludeTest17600)", "test_exclude_with_q_is_equal_to_plain_exclude (queries.tests.ExcludeTest17600)", "test_exclude_with_q_is_equal_to_plain_exclude_variation (queries.tests.ExcludeTest17600)", "test_exclude_with_q_object_distinct (queries.tests.ExcludeTest17600)", "test_exclude_with_q_object_no_distinct (queries.tests.ExcludeTest17600)", "test_exclude_reverse_fk_field_ref (queries.tests.ExcludeTests)", "test_exclude_with_circular_fk_relation (queries.tests.ExcludeTests)", "test_subquery_exclude_outerref (queries.tests.ExcludeTests)", "test_ticket14511 (queries.tests.ExcludeTests)", "test_to_field (queries.tests.ExcludeTests)", "test_exists (queries.tests.ExistsSql)", "test_ticket_18414 (queries.tests.ExistsSql)", "test_ticket_21787 (queries.tests.ForeignKeyToBaseExcludeTests)", "test_primary_key (queries.tests.IsNullTests)", "test_to_field (queries.tests.IsNullTests)", "test_fk_reuse (queries.tests.JoinReuseTest)", "test_fk_reuse_annotation (queries.tests.JoinReuseTest)", "test_fk_reuse_disjunction (queries.tests.JoinReuseTest)", "test_fk_reuse_order_by (queries.tests.JoinReuseTest)", "test_fk_reuse_select_related (queries.tests.JoinReuseTest)", "test_inverted_q_across_relations (queries.tests.JoinReuseTest)", "test_revfk_noreuse (queries.tests.JoinReuseTest)", "test_revo2o_reuse (queries.tests.JoinReuseTest)", "test_exclude_many_to_many (queries.tests.ManyToManyExcludeTest)", "test_ticket_12823 (queries.tests.ManyToManyExcludeTest)", "test_double_exclude (queries.tests.NullInExcludeTest)", "test_null_in_exclude_qs (queries.tests.NullInExcludeTest)", "test_isnull_filter_promotion (queries.tests.NullJoinPromotionOrTest)", "test_null_join_demotion (queries.tests.NullJoinPromotionOrTest)", "test_ticket_17886 (queries.tests.NullJoinPromotionOrTest)", "test_ticket_21366 (queries.tests.NullJoinPromotionOrTest)", "test_ticket_21748 (queries.tests.NullJoinPromotionOrTest)", "test_ticket_21748_complex_filter (queries.tests.NullJoinPromotionOrTest)", "test_ticket_21748_double_negated_and (queries.tests.NullJoinPromotionOrTest)", "test_ticket_21748_double_negated_or (queries.tests.NullJoinPromotionOrTest)", "test_join_already_in_query (queries.tests.NullableRelOrderingTests)", "test_ticket10028 (queries.tests.NullableRelOrderingTests)", "test_evaluated_proxy_count (queries.tests.ProxyQueryCleanupTest)", "test_avoid_infinite_loop_on_too_many_subqueries (queries.tests.Queries1Tests)", "test_common_mixed_case_foreign_keys (queries.tests.Queries1Tests)", "test_deferred_load_qs_pickling (queries.tests.Queries1Tests)", "test_double_exclude (queries.tests.Queries1Tests)", "test_error_raised_on_filter_with_dictionary (queries.tests.Queries1Tests)", "test_exclude (queries.tests.Queries1Tests)", "test_exclude_in (queries.tests.Queries1Tests)", "test_excluded_intermediary_m2m_table_joined (queries.tests.Queries1Tests)", "test_get_clears_ordering (queries.tests.Queries1Tests)", "test_heterogeneous_qs_combination (queries.tests.Queries1Tests)", "test_lookup_constraint_fielderror (queries.tests.Queries1Tests)", "test_nested_exclude (queries.tests.Queries1Tests)", "test_order_by_join_unref (queries.tests.Queries1Tests)", "test_order_by_raw_column_alias_warning (queries.tests.Queries1Tests)", "test_order_by_rawsql (queries.tests.Queries1Tests)", "test_order_by_tables (queries.tests.Queries1Tests)", "test_reasonable_number_of_subq_aliases (queries.tests.Queries1Tests)", "test_subquery_condition (queries.tests.Queries1Tests)", "test_ticket10205 (queries.tests.Queries1Tests)", "test_ticket10432 (queries.tests.Queries1Tests)", "test_ticket1050 (queries.tests.Queries1Tests)", "test_ticket10742 (queries.tests.Queries1Tests)", "test_ticket17429 (queries.tests.Queries1Tests)", "test_ticket1801 (queries.tests.Queries1Tests)", "test_ticket19672 (queries.tests.Queries1Tests)", "test_ticket2091 (queries.tests.Queries1Tests)", "test_ticket2253 (queries.tests.Queries1Tests)", "test_ticket2306 (queries.tests.Queries1Tests)", "test_ticket2400 (queries.tests.Queries1Tests)", "test_ticket2496 (queries.tests.Queries1Tests)", "test_ticket3037 (queries.tests.Queries1Tests)", "test_ticket3141 (queries.tests.Queries1Tests)", "test_ticket4358 (queries.tests.Queries1Tests)", "test_ticket4464 (queries.tests.Queries1Tests)", "test_ticket4510 (queries.tests.Queries1Tests)", "test_ticket6074 (queries.tests.Queries1Tests)", "test_ticket6154 (queries.tests.Queries1Tests)", "test_ticket6981 (queries.tests.Queries1Tests)", "test_ticket7076 (queries.tests.Queries1Tests)", "test_ticket7096 (queries.tests.Queries1Tests)", "test_ticket7098 (queries.tests.Queries1Tests)", "test_ticket7155 (queries.tests.Queries1Tests)", "test_ticket7181 (queries.tests.Queries1Tests)", "test_ticket7235 (queries.tests.Queries1Tests)", "test_ticket7277 (queries.tests.Queries1Tests)", "test_ticket7323 (queries.tests.Queries1Tests)", "test_ticket7378 (queries.tests.Queries1Tests)", "test_ticket7791 (queries.tests.Queries1Tests)", "test_ticket7813 (queries.tests.Queries1Tests)", "test_ticket8439 (queries.tests.Queries1Tests)", "test_ticket9411 (queries.tests.Queries1Tests)", "test_ticket9926 (queries.tests.Queries1Tests)", "test_ticket9985 (queries.tests.Queries1Tests)", "test_ticket9997 (queries.tests.Queries1Tests)", "test_ticket_10790_1 (queries.tests.Queries1Tests)", "test_ticket_10790_2 (queries.tests.Queries1Tests)", "test_ticket_10790_3 (queries.tests.Queries1Tests)", "test_ticket_10790_4 (queries.tests.Queries1Tests)", "test_ticket_10790_5 (queries.tests.Queries1Tests)", "test_ticket_10790_6 (queries.tests.Queries1Tests)", "test_ticket_10790_7 (queries.tests.Queries1Tests)", "test_ticket_10790_8 (queries.tests.Queries1Tests)", "test_ticket_10790_combine (queries.tests.Queries1Tests)", "test_ticket_20250 (queries.tests.Queries1Tests)", "test_tickets_1878_2939 (queries.tests.Queries1Tests)", "test_tickets_2076_7256 (queries.tests.Queries1Tests)", "test_tickets_2080_3592 (queries.tests.Queries1Tests)", "test_tickets_2874_3002 (queries.tests.Queries1Tests)", "test_tickets_4088_4306 (queries.tests.Queries1Tests)", "test_tickets_5321_7070 (queries.tests.Queries1Tests)", "test_tickets_5324_6704 (queries.tests.Queries1Tests)", "test_tickets_6180_6203 (queries.tests.Queries1Tests)", "test_tickets_7087_12242 (queries.tests.Queries1Tests)", "test_tickets_7204_7506 (queries.tests.Queries1Tests)", "test_tickets_7448_7707 (queries.tests.Queries1Tests)", "test_ticket12239 (queries.tests.Queries2Tests)", "test_ticket4289 (queries.tests.Queries2Tests)", "test_ticket7759 (queries.tests.Queries2Tests)", "test_ticket22023 (queries.tests.Queries3Tests)", "test_ticket7107 (queries.tests.Queries3Tests)", "test_ticket8683 (queries.tests.Queries3Tests)", "test_combine_join_reuse (queries.tests.Queries4Tests)", "test_filter_reverse_non_integer_pk (queries.tests.Queries4Tests)", "test_join_reuse_order (queries.tests.Queries4Tests)", "test_order_by_resetting (queries.tests.Queries4Tests)", "test_order_by_reverse_fk (queries.tests.Queries4Tests)", "test_ticket10181 (queries.tests.Queries4Tests)", "test_ticket11811 (queries.tests.Queries4Tests)", "test_ticket14876 (queries.tests.Queries4Tests)", "test_ticket15316_exclude_false (queries.tests.Queries4Tests)", "test_ticket15316_exclude_true (queries.tests.Queries4Tests)", "test_ticket15316_filter_false (queries.tests.Queries4Tests)", "test_ticket15316_filter_true (queries.tests.Queries4Tests)", "test_ticket15316_one2one_exclude_false (queries.tests.Queries4Tests)", "test_ticket15316_one2one_exclude_true (queries.tests.Queries4Tests)", "test_ticket15316_one2one_filter_false (queries.tests.Queries4Tests)", "test_ticket15316_one2one_filter_true (queries.tests.Queries4Tests)", "test_ticket24525 (queries.tests.Queries4Tests)", "test_ticket7095 (queries.tests.Queries4Tests)", "test_extra_select_literal_percent_s (queries.tests.Queries5Tests)", "test_ordering (queries.tests.Queries5Tests)", "test_ticket5261 (queries.tests.Queries5Tests)", "test_ticket7045 (queries.tests.Queries5Tests)", "test_ticket7256 (queries.tests.Queries5Tests)", "test_ticket9848 (queries.tests.Queries5Tests)", "test_distinct_ordered_sliced_subquery_aggregation (queries.tests.Queries6Tests)", "test_multiple_columns_with_the_same_name_slice (queries.tests.Queries6Tests)", "test_nested_queries_sql (queries.tests.Queries6Tests)", "test_parallel_iterators (queries.tests.Queries6Tests)", "test_ticket3739 (queries.tests.Queries6Tests)", "test_ticket_11320 (queries.tests.Queries6Tests)", "test_tickets_8921_9188 (queries.tests.Queries6Tests)", "test_or_with_both_slice (queries.tests.QuerySetBitwiseOperationTests)", "test_or_with_both_slice_and_ordering (queries.tests.QuerySetBitwiseOperationTests)", "test_or_with_lhs_slice (queries.tests.QuerySetBitwiseOperationTests)", "test_or_with_rhs_slice (queries.tests.QuerySetBitwiseOperationTests)", "test_can_combine_queries_using_and_and_or_operators (queries.tests.QuerySetSupportsPythonIdioms)", "test_can_get_items_using_index_and_slice_notation (queries.tests.QuerySetSupportsPythonIdioms)", "test_can_get_number_of_items_in_queryset_using_standard_len (queries.tests.QuerySetSupportsPythonIdioms)", "test_invalid_index (queries.tests.QuerySetSupportsPythonIdioms)", "test_slicing_can_slice_again_after_slicing (queries.tests.QuerySetSupportsPythonIdioms)", "test_slicing_cannot_combine_queries_once_sliced (queries.tests.QuerySetSupportsPythonIdioms)", "test_slicing_cannot_filter_queryset_once_sliced (queries.tests.QuerySetSupportsPythonIdioms)", "test_slicing_cannot_reorder_queryset_once_sliced (queries.tests.QuerySetSupportsPythonIdioms)", "hint: inverting your ordering might do what you need", "test_slicing_with_steps_can_be_used (queries.tests.QuerySetSupportsPythonIdioms)", "test_slicing_with_tests_is_not_lazy (queries.tests.QuerySetSupportsPythonIdioms)", "test_slicing_without_step_is_lazy (queries.tests.QuerySetSupportsPythonIdioms)", "test_ticket14729 (queries.tests.RawQueriesTests)", "test_ticket_19964 (queries.tests.RelabelCloneTest)", "test_correct_lookup (queries.tests.RelatedLookupTypeTests)", "test_values_queryset_lookup (queries.tests.RelatedLookupTypeTests)", "test_wrong_backward_lookup (queries.tests.RelatedLookupTypeTests)", "test_wrong_type_lookup (queries.tests.RelatedLookupTypeTests)", "test_reverse_trimming (queries.tests.ReverseJoinTrimmingTest)", "test_ticket_21879 (queries.tests.ReverseM2MCustomPkTests)", "test_tickets_3045_3288 (queries.tests.SelectRelatedTests)", "test_ticket7778 (queries.tests.SubclassFKTests)", "test_distinct_ordered_sliced_subquery (queries.tests.SubqueryTests)", "Subselects honor any manual ordering", "test_related_sliced_subquery (queries.tests.SubqueryTests)", "test_slice_subquery_and_query (queries.tests.SubqueryTests)", "Delete queries can safely contain sliced subqueries", "test_ticket_24278 (queries.tests.TestTicket24279)", "test_ticket_24605 (queries.tests.TestTicket24605)", "test_ticket_12807 (queries.tests.Ticket12807Tests)", "test_ticket_14056 (queries.tests.Ticket14056Tests)", "test_ticket_20101 (queries.tests.Ticket20101Tests)", "test_ticket_20788 (queries.tests.Ticket20788Tests)", "test_ticket_20955 (queries.tests.Ticket20955Tests)", "test_ticket_21203 (queries.tests.Ticket21203Tests)", "test_ticket_22429 (queries.tests.Ticket22429Tests)", "test_ticket_23605 (queries.tests.Ticket23605Tests)", "test_in_query (queries.tests.ToFieldTests)", "test_in_subquery (queries.tests.ToFieldTests)", "test_nested_in_subquery (queries.tests.ToFieldTests)", "test_recursive_fk (queries.tests.ToFieldTests)", "test_recursive_fk_reverse (queries.tests.ToFieldTests)", "test_reverse_in (queries.tests.ToFieldTests)", "test_single_object (queries.tests.ToFieldTests)", "test_single_object_reverse (queries.tests.ToFieldTests)", "test_non_nullable_fk_not_promoted (queries.tests.ValuesJoinPromotionTests)", "test_ticket_21376 (queries.tests.ValuesJoinPromotionTests)", "test_values_no_promotion_for_existing (queries.tests.ValuesJoinPromotionTests)", "test_extra_multiple_select_params_values_order_by (queries.tests.ValuesQuerysetTests)", "test_extra_select_params_values_order_in_extra (queries.tests.ValuesQuerysetTests)", "test_extra_values (queries.tests.ValuesQuerysetTests)", "test_extra_values_list (queries.tests.ValuesQuerysetTests)", "test_extra_values_order_in_extra (queries.tests.ValuesQuerysetTests)", "test_extra_values_order_multiple (queries.tests.ValuesQuerysetTests)", "test_extra_values_order_twice (queries.tests.ValuesQuerysetTests)", "test_field_error_values_list (queries.tests.ValuesQuerysetTests)", "test_flat_extra_values_list (queries.tests.ValuesQuerysetTests)", "test_flat_values_list (queries.tests.ValuesQuerysetTests)", "test_named_values_list_bad_field_name (queries.tests.ValuesQuerysetTests)", "test_named_values_list_expression (queries.tests.ValuesQuerysetTests)", "test_named_values_list_expression_with_default_alias (queries.tests.ValuesQuerysetTests)", "test_named_values_list_flat (queries.tests.ValuesQuerysetTests)", "test_named_values_list_with_fields (queries.tests.ValuesQuerysetTests)", "test_named_values_list_without_fields (queries.tests.ValuesQuerysetTests)", "test_values_in_subquery (queries.tests.ValuesSubqueryTests)", "test_empty_resultset_sql (queries.tests.WeirdQuerysetSlicingTests)", "test_empty_sliced_subquery (queries.tests.WeirdQuerysetSlicingTests)", "test_empty_sliced_subquery_exclude (queries.tests.WeirdQuerysetSlicingTests)", "test_tickets_7698_10202 (queries.tests.WeirdQuerysetSlicingTests)", "test_zero_length_values_slicing (queries.tests.WeirdQuerysetSlicingTests)", "test_emptyqueryset_values (queries.tests.EmptyQuerySetTests)", "test_ticket_19151 (queries.tests.EmptyQuerySetTests)", "test_values_subquery (queries.tests.EmptyQuerySetTests)", "test_empty_string_promotion (queries.tests.EmptyStringPromotionTests)", "test_ticket10432 (queries.tests.GeneratorExpressionTests)", "test_invalid_order_by (queries.tests.QuerySetExceptionTests)", "test_invalid_queryset_model (queries.tests.QuerySetExceptionTests)", "test_iter_exceptions (queries.tests.QuerySetExceptionTests)", "test_invalid_values (queries.tests.TestInvalidValuesRelation)", "test_ticket_18785 (queries.tests.Ticket18785Tests)", "test_empty_full_handling_conjunction (queries.tests.WhereNodeTest)", "test_empty_full_handling_disjunction (queries.tests.WhereNodeTest)", "test_empty_nodes (queries.tests.WhereNodeTest)", "test_annotated_ordering (queries.tests.QuerysetOrderedTests)", "test_cleared_default_ordering (queries.tests.QuerysetOrderedTests)", "test_empty_queryset (queries.tests.QuerysetOrderedTests)", "test_explicit_ordering (queries.tests.QuerysetOrderedTests)", "test_no_default_or_explicit_ordering (queries.tests.QuerysetOrderedTests)", "test_order_by_extra (queries.tests.QuerysetOrderedTests)", "test_AB_ACB (queries.tests.UnionTests)", "test_A_AB (queries.tests.UnionTests)", "test_A_AB2 (queries.tests.UnionTests)", "test_BAB_BAC (queries.tests.UnionTests)", "test_BAB_BACB (queries.tests.UnionTests)", "test_BA_BCA__BAB_BAC_BCA (queries.tests.UnionTests)"]}
{"instance_id": "django__django-13033", "tests_passing_in_original_repo": ["test_default_ordering (ordering.tests.OrderingTests)", "F expressions can be used in Meta.ordering.", "test_default_ordering_override (ordering.tests.OrderingTests)", "test_extra_ordering (ordering.tests.OrderingTests)", "test_extra_ordering_quoting (ordering.tests.OrderingTests)", "test_extra_ordering_with_table_name (ordering.tests.OrderingTests)", "test_no_reordering_after_slicing (ordering.tests.OrderingTests)", "test_order_by_constant_value (ordering.tests.OrderingTests)", "test_order_by_constant_value_without_output_field (ordering.tests.OrderingTests)", "test_order_by_f_expression (ordering.tests.OrderingTests)", "test_order_by_f_expression_duplicates (ordering.tests.OrderingTests)", "test_order_by_fk_attname (ordering.tests.OrderingTests)", "test_order_by_nulls_first (ordering.tests.OrderingTests)", "test_order_by_nulls_first_and_last (ordering.tests.OrderingTests)", "test_order_by_nulls_last (ordering.tests.OrderingTests)", "test_order_by_override (ordering.tests.OrderingTests)", "test_order_by_pk (ordering.tests.OrderingTests)", "test_order_by_ptr_field_with_default_ordering_by_expression (ordering.tests.OrderingTests)", "test_orders_nulls_first_on_filtered_subquery (ordering.tests.OrderingTests)", "test_random_ordering (ordering.tests.OrderingTests)", "test_related_ordering_duplicate_table_reference (ordering.tests.OrderingTests)", "test_reverse_meta_ordering_pure (ordering.tests.OrderingTests)", "test_reverse_ordering_pure (ordering.tests.OrderingTests)", "test_reversed_ordering (ordering.tests.OrderingTests)", "test_stop_slicing (ordering.tests.OrderingTests)", "test_stop_start_slicing (ordering.tests.OrderingTests)"]}
{"instance_id": "django__django-13158", "tests_passing_in_original_repo": ["test_combining_multiple_models (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_difference (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_intersection (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_union (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_count_union_empty_result (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_difference_with_empty_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_difference_with_values (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_intersection_with_empty_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_intersection_with_values (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_limits (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_order_by_same_type (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_order_raises_on_non_selected_column (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_ordering (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_ordering_by_alias (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_ordering_by_f_expression (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_ordering_by_f_expression_and_alias (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_qs_with_subcompound_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_simple_difference (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_simple_intersection (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_simple_union (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_distinct (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_empty_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_extra_and_values_list (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_two_annotated_values_list (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_values (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_values_list_and_order (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_union_with_values_list_on_annotated_and_unannotated (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_unsupported_operations_on_combined_qs (queries.test_qs_combinators.QuerySetSetOperationTests)", "test_unsupported_ordering_slicing_raises_db_error (queries.test_qs_combinators.QuerySetSetOperationTests)"]}
{"instance_id": "django__django-13220", "tests_passing_in_original_repo": ["test_messages_concatenates_error_dict_values (test_exceptions.test_validation_error.TestValidationError)"]}
{"instance_id": "django__django-13230", "tests_passing_in_original_repo": ["test_add_domain (syndication_tests.tests.SyndicationFeedTest)", "test_atom_feed (syndication_tests.tests.SyndicationFeedTest)", "test_atom_feed_published_and_updated_elements (syndication_tests.tests.SyndicationFeedTest)", "test_atom_multiple_enclosures (syndication_tests.tests.SyndicationFeedTest)", "test_atom_single_enclosure (syndication_tests.tests.SyndicationFeedTest)", "test_aware_datetime_conversion (syndication_tests.tests.SyndicationFeedTest)", "test_custom_feed_generator (syndication_tests.tests.SyndicationFeedTest)", "test_feed_generator_language_attribute (syndication_tests.tests.SyndicationFeedTest)", "test_feed_last_modified_time (syndication_tests.tests.SyndicationFeedTest)", "test_feed_last_modified_time_naive_date (syndication_tests.tests.SyndicationFeedTest)", "test_feed_url (syndication_tests.tests.SyndicationFeedTest)", "test_item_link_error (syndication_tests.tests.SyndicationFeedTest)", "test_latest_post_date (syndication_tests.tests.SyndicationFeedTest)", "test_naive_datetime_conversion (syndication_tests.tests.SyndicationFeedTest)", "test_rss091_feed (syndication_tests.tests.SyndicationFeedTest)", "test_rss2_feed (syndication_tests.tests.SyndicationFeedTest)", "test_rss2_feed_guid_permalink_false (syndication_tests.tests.SyndicationFeedTest)", "test_rss2_feed_guid_permalink_true (syndication_tests.tests.SyndicationFeedTest)", "test_rss2_multiple_enclosures (syndication_tests.tests.SyndicationFeedTest)", "test_rss2_single_enclosure (syndication_tests.tests.SyndicationFeedTest)", "test_secure_urls (syndication_tests.tests.SyndicationFeedTest)", "test_template_context_feed (syndication_tests.tests.SyndicationFeedTest)", "test_template_feed (syndication_tests.tests.SyndicationFeedTest)", "test_title_escaping (syndication_tests.tests.SyndicationFeedTest)"]}
{"instance_id": "django__django-13265", "tests_passing_in_original_repo": ["test_add_alter_order_with_respect_to (migrations.test_autodetector.AutodetectorTests)", "test_add_blank_textfield_and_charfield (migrations.test_autodetector.AutodetectorTests)", "Test change detection of new constraints.", "test_add_date_fields_with_auto_now_add_asking_for_default (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_add_not_asking_for_null_addition (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_not_asking_for_default (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of new fields.", "test_add_field_and_foo_together (migrations.test_autodetector.AutodetectorTests)", "#22030 - Adding a field with a default should work.", "Tests index/unique_together detection.", "Test change detection of new indexes.", "#22435 - Adding a ManyToManyField should not prompt for a default.", "test_add_model_order_with_respect_to (migrations.test_autodetector.AutodetectorTests)", "test_add_model_with_field_removed_from_base_model (migrations.test_autodetector.AutodetectorTests)", "test_add_non_blank_textfield_and_charfield (migrations.test_autodetector.AutodetectorTests)", "Tests detection for adding db_table in model's options.", "Tests detection for changing db_table in model's options'.", "test_alter_db_table_no_changes (migrations.test_autodetector.AutodetectorTests)", "Tests detection for removing db_table in model's options.", "test_alter_db_table_with_model_change (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_fk_dependency_other_app (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_not_null_oneoff_default (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_not_null_with_default (migrations.test_autodetector.AutodetectorTests)", "test_alter_field_to_not_null_without_default (migrations.test_autodetector.AutodetectorTests)", "test_alter_fk_before_model_deletion (migrations.test_autodetector.AutodetectorTests)", "test_alter_many_to_many (migrations.test_autodetector.AutodetectorTests)", "test_alter_model_managers (migrations.test_autodetector.AutodetectorTests)", "Changing a model's options should make a change.", "Changing a proxy model's options should also make a change.", "Tests auto-naming of migrations for graph matching.", "test_arrange_for_graph_with_multiple_initial (migrations.test_autodetector.AutodetectorTests)", "Bases of other models come first.", "test_circular_dependency_mixed_addcreate (migrations.test_autodetector.AutodetectorTests)", "test_circular_dependency_swappable (migrations.test_autodetector.AutodetectorTests)", "test_circular_dependency_swappable2 (migrations.test_autodetector.AutodetectorTests)", "test_circular_dependency_swappable_self (migrations.test_autodetector.AutodetectorTests)", "test_circular_fk_dependency (migrations.test_autodetector.AutodetectorTests)", "test_concrete_field_changed_to_many_to_many (migrations.test_autodetector.AutodetectorTests)", "test_create_model_and_unique_together (migrations.test_autodetector.AutodetectorTests)", "Test creation of new model with constraints already defined.", "Test creation of new model with indexes already defined.", "test_create_with_through_model (migrations.test_autodetector.AutodetectorTests)", "test_custom_deconstructible (migrations.test_autodetector.AutodetectorTests)", "Tests custom naming of migrations for graph matching.", "Field instances are handled correctly by nested deconstruction.", "test_deconstruct_type (migrations.test_autodetector.AutodetectorTests)", "Nested deconstruction descends into dict values.", "Nested deconstruction descends into lists.", "Nested deconstruction descends into tuples.", "test_default_related_name_option (migrations.test_autodetector.AutodetectorTests)", "test_different_regex_does_alter (migrations.test_autodetector.AutodetectorTests)", "test_empty_foo_together (migrations.test_autodetector.AutodetectorTests)", "test_first_dependency (migrations.test_autodetector.AutodetectorTests)", "Having a ForeignKey automatically adds a dependency.", "test_fk_dependency_other_app (migrations.test_autodetector.AutodetectorTests)", "test_foo_together_no_changes (migrations.test_autodetector.AutodetectorTests)", "test_foo_together_ordering (migrations.test_autodetector.AutodetectorTests)", "Tests unique_together and field removal detection & ordering", "test_foreign_key_removed_before_target_model (migrations.test_autodetector.AutodetectorTests)", "test_identical_regex_doesnt_alter (migrations.test_autodetector.AutodetectorTests)", "test_keep_db_table_with_model_change (migrations.test_autodetector.AutodetectorTests)", "test_last_dependency (migrations.test_autodetector.AutodetectorTests)", "test_m2m_w_through_multistep_remove (migrations.test_autodetector.AutodetectorTests)", "test_managed_to_unmanaged (migrations.test_autodetector.AutodetectorTests)", "test_many_to_many_changed_to_concrete_field (migrations.test_autodetector.AutodetectorTests)", "test_many_to_many_removed_before_through_model (migrations.test_autodetector.AutodetectorTests)", "test_many_to_many_removed_before_through_model_2 (migrations.test_autodetector.AutodetectorTests)", "test_mti_inheritance_model_removal (migrations.test_autodetector.AutodetectorTests)", "#23956 - Inheriting models doesn't move *_ptr fields into AddField operations.", "test_nested_deconstructible_objects (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of new models.", "test_non_circular_foreignkey_dependency_removal (migrations.test_autodetector.AutodetectorTests)", "Tests deletion of old models.", "Test change detection of reordering of fields in indexes.", "test_pk_fk_included (migrations.test_autodetector.AutodetectorTests)", "The autodetector correctly deals with proxy models.", "Bases of proxies come first.", "test_proxy_custom_pk (migrations.test_autodetector.AutodetectorTests)", "FK dependencies still work on proxy models.", "test_proxy_to_mti_with_fk_to_proxy (migrations.test_autodetector.AutodetectorTests)", "test_proxy_to_mti_with_fk_to_proxy_proxy (migrations.test_autodetector.AutodetectorTests)", "test_remove_alter_order_with_respect_to (migrations.test_autodetector.AutodetectorTests)", "Test change detection of removed constraints.", "Tests autodetection of removed fields.", "test_remove_field_and_foo_together (migrations.test_autodetector.AutodetectorTests)", "Test change detection of removed indexes.", "Tests autodetection of renamed fields.", "test_rename_field_and_foo_together (migrations.test_autodetector.AutodetectorTests)", "test_rename_field_foreign_key_to_field (migrations.test_autodetector.AutodetectorTests)", "test_rename_field_preserved_db_column (migrations.test_autodetector.AutodetectorTests)", "test_rename_foreign_object_fields (migrations.test_autodetector.AutodetectorTests)", "test_rename_m2m_through_model (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of renamed models.", "test_rename_model_case (migrations.test_autodetector.AutodetectorTests)", "test_rename_model_reverse_relation_dependencies (migrations.test_autodetector.AutodetectorTests)", "test_rename_model_with_fks_in_different_position (migrations.test_autodetector.AutodetectorTests)", "test_rename_model_with_renamed_rel_field (migrations.test_autodetector.AutodetectorTests)", "test_rename_referenced_primary_key (migrations.test_autodetector.AutodetectorTests)", "test_rename_related_field_preserved_db_column (migrations.test_autodetector.AutodetectorTests)", "test_replace_string_with_foreignkey (migrations.test_autodetector.AutodetectorTests)", "test_same_app_circular_fk_dependency (migrations.test_autodetector.AutodetectorTests)", "test_same_app_circular_fk_dependency_with_unique_together_and_indexes (migrations.test_autodetector.AutodetectorTests)", "test_same_app_no_fk_dependency (migrations.test_autodetector.AutodetectorTests)", "Setting order_with_respect_to adds a field.", "test_supports_functools_partial (migrations.test_autodetector.AutodetectorTests)", "test_swappable (migrations.test_autodetector.AutodetectorTests)", "test_swappable_changed (migrations.test_autodetector.AutodetectorTests)", "test_swappable_circular_multi_mti (migrations.test_autodetector.AutodetectorTests)", "Swappable models get their CreateModel first.", "test_trim_apps (migrations.test_autodetector.AutodetectorTests)", "The autodetector correctly deals with managed models.", "test_unmanaged_custom_pk (migrations.test_autodetector.AutodetectorTests)", "test_unmanaged_delete (migrations.test_autodetector.AutodetectorTests)", "test_unmanaged_to_managed (migrations.test_autodetector.AutodetectorTests)", "test_auto (migrations.test_autodetector.MigrationSuggestNameTests)", "test_none_name (migrations.test_autodetector.MigrationSuggestNameTests)", "test_none_name_with_initial_true (migrations.test_autodetector.MigrationSuggestNameTests)", "test_single_operation (migrations.test_autodetector.MigrationSuggestNameTests)", "test_two_create_models (migrations.test_autodetector.MigrationSuggestNameTests)", "test_two_create_models_with_initial_true (migrations.test_autodetector.MigrationSuggestNameTests)"]}
{"instance_id": "django__django-13315", "tests_passing_in_original_repo": ["test_model_form_clean_applies_to_model (model_forms.tests.CustomCleanTests)", "test_override_clean (model_forms.tests.CustomCleanTests)", "test_clean_false (model_forms.tests.FileAndImageFieldTests)", "test_clean_false_required (model_forms.tests.FileAndImageFieldTests)", "test_clear_and_file_contradiction (model_forms.tests.FileAndImageFieldTests)", "test_custom_file_field_save (model_forms.tests.FileAndImageFieldTests)", "test_file_field_data (model_forms.tests.FileAndImageFieldTests)", "test_file_field_multiple_save (model_forms.tests.FileAndImageFieldTests)", "FilePathField(blank=True) includes the empty option.", "test_filefield_required_false (model_forms.tests.FileAndImageFieldTests)", "test_full_clear (model_forms.tests.FileAndImageFieldTests)", "test_image_field (model_forms.tests.FileAndImageFieldTests)", "test_render_empty_file_field (model_forms.tests.FileAndImageFieldTests)", "test_callable_called_each_time_form_is_instantiated (model_forms.tests.LimitChoicesToTests)", "test_custom_field_with_queryset_but_no_limit_choices_to (model_forms.tests.LimitChoicesToTests)", "test_fields_for_model_applies_limit_choices_to (model_forms.tests.LimitChoicesToTests)", "test_limit_choices_to_callable_for_fk_rel (model_forms.tests.LimitChoicesToTests)", "test_limit_choices_to_callable_for_m2m_rel (model_forms.tests.LimitChoicesToTests)", "test_model_form_applies_localize_to_all_fields (model_forms.tests.LocalizedModelFormTest)", "test_model_form_applies_localize_to_some_fields (model_forms.tests.LocalizedModelFormTest)", "test_model_form_refuses_arbitrary_string (model_forms.tests.LocalizedModelFormTest)", "test_article_form (model_forms.tests.ModelFormBaseTest)", "test_bad_form (model_forms.tests.ModelFormBaseTest)", "test_base_form (model_forms.tests.ModelFormBaseTest)", "test_blank_false_with_null_true_foreign_key_field (model_forms.tests.ModelFormBaseTest)", "test_blank_foreign_key_with_radio (model_forms.tests.ModelFormBaseTest)", "test_blank_with_null_foreign_key_field (model_forms.tests.ModelFormBaseTest)", "test_confused_form (model_forms.tests.ModelFormBaseTest)", "test_default_filefield (model_forms.tests.ModelFormBaseTest)", "test_default_not_populated_on_checkboxselectmultiple (model_forms.tests.ModelFormBaseTest)", "test_default_not_populated_on_non_empty_value_in_cleaned_data (model_forms.tests.ModelFormBaseTest)", "test_default_not_populated_on_optional_checkbox_input (model_forms.tests.ModelFormBaseTest)", "test_default_not_populated_on_selectmultiple (model_forms.tests.ModelFormBaseTest)", "test_default_populated_on_optional_field (model_forms.tests.ModelFormBaseTest)", "test_default_selectdatewidget (model_forms.tests.ModelFormBaseTest)", "test_default_splitdatetime_field (model_forms.tests.ModelFormBaseTest)", "test_empty_fields_on_modelform (model_forms.tests.ModelFormBaseTest)", "test_empty_fields_to_construct_instance (model_forms.tests.ModelFormBaseTest)", "test_empty_fields_to_fields_for_model (model_forms.tests.ModelFormBaseTest)", "test_exclude_and_validation (model_forms.tests.ModelFormBaseTest)", "test_exclude_fields (model_forms.tests.ModelFormBaseTest)", "test_exclude_fields_with_string (model_forms.tests.ModelFormBaseTest)", "test_exclude_nonexistent_field (model_forms.tests.ModelFormBaseTest)", "test_extra_declared_field_model_form (model_forms.tests.ModelFormBaseTest)", "test_extra_field_model_form (model_forms.tests.ModelFormBaseTest)", "test_extra_field_modelform_factory (model_forms.tests.ModelFormBaseTest)", "test_extra_fields (model_forms.tests.ModelFormBaseTest)", "test_invalid_meta_model (model_forms.tests.ModelFormBaseTest)", "test_limit_fields_with_string (model_forms.tests.ModelFormBaseTest)", "test_limit_nonexistent_field (model_forms.tests.ModelFormBaseTest)", "test_missing_fields_attribute (model_forms.tests.ModelFormBaseTest)", "test_mixmodel_form (model_forms.tests.ModelFormBaseTest)", "test_no_model_class (model_forms.tests.ModelFormBaseTest)", "test_non_blank_foreign_key_with_radio (model_forms.tests.ModelFormBaseTest)", "test_orderfields2_form (model_forms.tests.ModelFormBaseTest)", "test_orderfields_form (model_forms.tests.ModelFormBaseTest)", "test_override_field (model_forms.tests.ModelFormBaseTest)", "test_prefixed_form_with_default_field (model_forms.tests.ModelFormBaseTest)", "test_renderer_kwarg (model_forms.tests.ModelFormBaseTest)", "test_replace_field (model_forms.tests.ModelFormBaseTest)", "test_replace_field_variant_2 (model_forms.tests.ModelFormBaseTest)", "test_replace_field_variant_3 (model_forms.tests.ModelFormBaseTest)", "test_save_blank_false_with_required_false (model_forms.tests.ModelFormBaseTest)", "test_save_blank_null_unique_charfield_saves_null (model_forms.tests.ModelFormBaseTest)", "test_subcategory_form (model_forms.tests.ModelFormBaseTest)", "test_subclassmeta_form (model_forms.tests.ModelFormBaseTest)", "test_auto_id (model_forms.tests.ModelFormBasicTests)", "test_base_form (model_forms.tests.ModelFormBasicTests)", "test_basic_creation (model_forms.tests.ModelFormBasicTests)", "test_custom_form_fields (model_forms.tests.ModelFormBasicTests)", "test_initial_values (model_forms.tests.ModelFormBasicTests)", "test_m2m_editing (model_forms.tests.ModelFormBasicTests)", "test_m2m_initial_callable (model_forms.tests.ModelFormBasicTests)", "test_multi_fields (model_forms.tests.ModelFormBasicTests)", "test_recleaning_model_form_instance (model_forms.tests.ModelFormBasicTests)", "test_runtime_choicefield_populated (model_forms.tests.ModelFormBasicTests)", "test_save_commit_false (model_forms.tests.ModelFormBasicTests)", "test_save_with_data_errors (model_forms.tests.ModelFormBasicTests)", "test_subset_fields (model_forms.tests.ModelFormBasicTests)", "test_validate_foreign_key_to_model_with_overridden_manager (model_forms.tests.ModelFormBasicTests)", "test_validate_foreign_key_uses_default_manager (model_forms.tests.ModelFormBasicTests)", "test_clean_does_deduplicate_values (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_model_multiple_choice_field (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_model_multiple_choice_field_22745 (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_model_multiple_choice_number_of_queries (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_model_multiple_choice_required_false (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_model_multiple_choice_run_validators (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_model_multiple_choice_show_hidden_initial (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_show_hidden_initial_changed_queries_efficiently (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_to_field_name_with_initial_data (model_forms.tests.ModelMultipleChoiceFieldTests)", "test_assignment_of_none (model_forms.tests.ModelOneToOneFieldTests)", "test_assignment_of_none_null_false (model_forms.tests.ModelOneToOneFieldTests)", "test_modelform_onetoonefield (model_forms.tests.ModelOneToOneFieldTests)", "test_modelform_subclassed_model (model_forms.tests.ModelOneToOneFieldTests)", "test_onetoonefield (model_forms.tests.ModelOneToOneFieldTests)", "Data for a ManyToManyField is a list rather than a lazy QuerySet.", "test_callable_field_default (model_forms.tests.OtherModelFormTests)", "test_choices_type (model_forms.tests.OtherModelFormTests)", "test_foreignkeys_which_use_to_field (model_forms.tests.OtherModelFormTests)", "test_iterable_model_m2m (model_forms.tests.OtherModelFormTests)", "test_media_on_modelform (model_forms.tests.OtherModelFormTests)", "test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields (model_forms.tests.OtherModelFormTests)", "test_prefetch_related_queryset (model_forms.tests.OtherModelFormTests)", "test_abstract_inherited_unique (model_forms.tests.UniqueTest)", "test_abstract_inherited_unique_together (model_forms.tests.UniqueTest)", "Ensure keys and blank character strings are tested for uniqueness.", "Test for primary_key being in the form and failing validation.", "test_inherited_unique (model_forms.tests.UniqueTest)", "test_inherited_unique_for_date (model_forms.tests.UniqueTest)", "test_inherited_unique_together (model_forms.tests.UniqueTest)", "test_multiple_field_unique_together (model_forms.tests.UniqueTest)", "test_override_unique_for_date_message (model_forms.tests.UniqueTest)", "test_override_unique_message (model_forms.tests.UniqueTest)", "test_override_unique_together_message (model_forms.tests.UniqueTest)", "test_simple_unique (model_forms.tests.UniqueTest)", "test_unique_for_date (model_forms.tests.UniqueTest)", "test_unique_for_date_in_exclude (model_forms.tests.UniqueTest)", "test_unique_for_date_with_nullable_date (model_forms.tests.UniqueTest)", "test_unique_null (model_forms.tests.UniqueTest)", "ModelForm test of unique_together constraint", "test_unique_together_exclusion (model_forms.tests.UniqueTest)", "test_modelform_factory_metaclass (model_forms.tests.CustomMetaclassTestCase)", "test_bad_callback (model_forms.tests.FormFieldCallbackTests)", "Regression for #13095: Using base forms with widgets defined in Meta should not raise errors.", "A custom formfield_callback is used if provided", "Regression for #15315: modelform_factory should accept widgets", "test_inherit_after_custom_callback (model_forms.tests.FormFieldCallbackTests)", "Regression for #19733", "test_custom_error_messages (model_forms.tests.ModelFormCustomErrorTests)", "test_model_clean_error_messages (model_forms.tests.ModelFormCustomErrorTests)", "test_field_removal (model_forms.tests.ModelFormInheritanceTests)", "test_field_removal_name_clashes (model_forms.tests.ModelFormInheritanceTests)", "test_form_subclass_inheritance (model_forms.tests.ModelFormInheritanceTests)", "test_big_integer_field (model_forms.tests.ModelOtherFieldTests)", "test_http_prefixing (model_forms.tests.ModelOtherFieldTests)", "test_modelform_non_editable_field (model_forms.tests.ModelOtherFieldTests)", "Check basic URL field validation on model forms", "test_setattr_raises_validation_error_field_specific (model_forms.tests.StrictAssignmentTests)", "test_setattr_raises_validation_error_non_field (model_forms.tests.StrictAssignmentTests)", "test_error_messages_overrides (model_forms.tests.TestFieldOverridesByFormMeta)", "test_field_type_overrides (model_forms.tests.TestFieldOverridesByFormMeta)", "test_help_text_overrides (model_forms.tests.TestFieldOverridesByFormMeta)", "test_label_overrides (model_forms.tests.TestFieldOverridesByFormMeta)", "test_widget_overrides (model_forms.tests.TestFieldOverridesByFormMeta)", "test_notrequired_overrides_notblank (model_forms.tests.ValidationTest)", "test_validates_with_replaced_field_excluded (model_forms.tests.ValidationTest)", "test_validates_with_replaced_field_not_specified (model_forms.tests.ValidationTest)"]}
{"instance_id": "django__django-13321", "tests_passing_in_original_repo": ["test_actual_expiry (sessions_tests.tests.CacheDBSessionTests)", "test_clear (sessions_tests.tests.CacheDBSessionTests)", "test_custom_expiry_datetime (sessions_tests.tests.CacheDBSessionTests)", "test_custom_expiry_reset (sessions_tests.tests.CacheDBSessionTests)", "test_custom_expiry_seconds (sessions_tests.tests.CacheDBSessionTests)", "test_custom_expiry_timedelta (sessions_tests.tests.CacheDBSessionTests)", "test_cycle (sessions_tests.tests.CacheDBSessionTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.CacheDBSessionTests)", "test_decode (sessions_tests.tests.CacheDBSessionTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.CacheDBSessionTests)", "test_decode_legacy (sessions_tests.tests.CacheDBSessionTests)", "test_default_expiry (sessions_tests.tests.CacheDBSessionTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CacheDBSessionTests)", "test_delete (sessions_tests.tests.CacheDBSessionTests)", "test_exists_searches_cache_first (sessions_tests.tests.CacheDBSessionTests)", "test_flush (sessions_tests.tests.CacheDBSessionTests)", "test_get_empty (sessions_tests.tests.CacheDBSessionTests)", "test_get_expire_at_browser_close (sessions_tests.tests.CacheDBSessionTests)", "test_has_key (sessions_tests.tests.CacheDBSessionTests)", "test_invalid_key (sessions_tests.tests.CacheDBSessionTests)", "test_items (sessions_tests.tests.CacheDBSessionTests)", "test_keys (sessions_tests.tests.CacheDBSessionTests)", "test_load_overlong_key (sessions_tests.tests.CacheDBSessionTests)", "test_new_session (sessions_tests.tests.CacheDBSessionTests)", "test_non_default_cache (sessions_tests.tests.CacheDBSessionTests)", "test_pop (sessions_tests.tests.CacheDBSessionTests)", "test_pop_default (sessions_tests.tests.CacheDBSessionTests)", "test_pop_default_named_argument (sessions_tests.tests.CacheDBSessionTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.CacheDBSessionTests)", "test_save (sessions_tests.tests.CacheDBSessionTests)", "test_save_doesnt_clear_data (sessions_tests.tests.CacheDBSessionTests)", "Falsey values (Such as an empty string) are rejected.", "test_session_key_is_read_only (sessions_tests.tests.CacheDBSessionTests)", "Strings shorter than 8 characters are rejected.", "Strings of length 8 and up are accepted and stored.", "test_session_load_does_not_create_record (sessions_tests.tests.CacheDBSessionTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CacheDBSessionTests)", "test_setdefault (sessions_tests.tests.CacheDBSessionTests)", "test_store (sessions_tests.tests.CacheDBSessionTests)", "test_update (sessions_tests.tests.CacheDBSessionTests)", "test_values (sessions_tests.tests.CacheDBSessionTests)", "test_actual_expiry (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_clear (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_custom_expiry_datetime (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_custom_expiry_reset (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_custom_expiry_seconds (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_custom_expiry_timedelta (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_cycle (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_decode (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_decode_legacy (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_default_expiry (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_delete (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_exists_searches_cache_first (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_flush (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_get_empty (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_get_expire_at_browser_close (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_has_key (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_invalid_key (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_items (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_keys (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_load_overlong_key (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_new_session (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_non_default_cache (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_pop (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_pop_default (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_pop_default_named_argument (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_save (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_save_doesnt_clear_data (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_session_key_is_read_only (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_session_load_does_not_create_record (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_setdefault (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_store (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_update (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_values (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)", "test_actual_expiry (sessions_tests.tests.CustomDatabaseSessionTests)", "test_clear (sessions_tests.tests.CustomDatabaseSessionTests)", "test_clearsessions_command (sessions_tests.tests.CustomDatabaseSessionTests)", "test_custom_expiry_datetime (sessions_tests.tests.CustomDatabaseSessionTests)", "test_custom_expiry_reset (sessions_tests.tests.CustomDatabaseSessionTests)", "test_custom_expiry_seconds (sessions_tests.tests.CustomDatabaseSessionTests)", "test_custom_expiry_timedelta (sessions_tests.tests.CustomDatabaseSessionTests)", "test_cycle (sessions_tests.tests.CustomDatabaseSessionTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.CustomDatabaseSessionTests)", "test_decode (sessions_tests.tests.CustomDatabaseSessionTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.CustomDatabaseSessionTests)", "test_decode_legacy (sessions_tests.tests.CustomDatabaseSessionTests)", "test_default_expiry (sessions_tests.tests.CustomDatabaseSessionTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CustomDatabaseSessionTests)", "test_delete (sessions_tests.tests.CustomDatabaseSessionTests)", "test_extra_session_field (sessions_tests.tests.CustomDatabaseSessionTests)", "test_flush (sessions_tests.tests.CustomDatabaseSessionTests)", "test_get_empty (sessions_tests.tests.CustomDatabaseSessionTests)", "test_get_expire_at_browser_close (sessions_tests.tests.CustomDatabaseSessionTests)", "test_has_key (sessions_tests.tests.CustomDatabaseSessionTests)", "test_invalid_key (sessions_tests.tests.CustomDatabaseSessionTests)", "test_items (sessions_tests.tests.CustomDatabaseSessionTests)", "test_keys (sessions_tests.tests.CustomDatabaseSessionTests)", "test_new_session (sessions_tests.tests.CustomDatabaseSessionTests)", "test_pop (sessions_tests.tests.CustomDatabaseSessionTests)", "test_pop_default (sessions_tests.tests.CustomDatabaseSessionTests)", "test_pop_default_named_argument (sessions_tests.tests.CustomDatabaseSessionTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.CustomDatabaseSessionTests)", "test_save (sessions_tests.tests.CustomDatabaseSessionTests)", "test_save_doesnt_clear_data (sessions_tests.tests.CustomDatabaseSessionTests)", "test_session_get_decoded (sessions_tests.tests.CustomDatabaseSessionTests)", "test_session_key_is_read_only (sessions_tests.tests.CustomDatabaseSessionTests)", "test_session_load_does_not_create_record (sessions_tests.tests.CustomDatabaseSessionTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CustomDatabaseSessionTests)", "Session repr should be the session key.", "test_sessionmanager_save (sessions_tests.tests.CustomDatabaseSessionTests)", "test_setdefault (sessions_tests.tests.CustomDatabaseSessionTests)", "test_store (sessions_tests.tests.CustomDatabaseSessionTests)", "test_update (sessions_tests.tests.CustomDatabaseSessionTests)", "test_values (sessions_tests.tests.CustomDatabaseSessionTests)", "test_actual_expiry (sessions_tests.tests.DatabaseSessionTests)", "test_clear (sessions_tests.tests.DatabaseSessionTests)", "test_clearsessions_command (sessions_tests.tests.DatabaseSessionTests)", "test_custom_expiry_datetime (sessions_tests.tests.DatabaseSessionTests)", "test_custom_expiry_reset (sessions_tests.tests.DatabaseSessionTests)", "test_custom_expiry_seconds (sessions_tests.tests.DatabaseSessionTests)", "test_custom_expiry_timedelta (sessions_tests.tests.DatabaseSessionTests)", "test_cycle (sessions_tests.tests.DatabaseSessionTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.DatabaseSessionTests)", "test_decode (sessions_tests.tests.DatabaseSessionTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.DatabaseSessionTests)", "test_decode_legacy (sessions_tests.tests.DatabaseSessionTests)", "test_default_expiry (sessions_tests.tests.DatabaseSessionTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.DatabaseSessionTests)", "test_delete (sessions_tests.tests.DatabaseSessionTests)", "test_flush (sessions_tests.tests.DatabaseSessionTests)", "test_get_empty (sessions_tests.tests.DatabaseSessionTests)", "test_get_expire_at_browser_close (sessions_tests.tests.DatabaseSessionTests)", "test_has_key (sessions_tests.tests.DatabaseSessionTests)", "test_invalid_key (sessions_tests.tests.DatabaseSessionTests)", "test_items (sessions_tests.tests.DatabaseSessionTests)", "test_keys (sessions_tests.tests.DatabaseSessionTests)", "test_new_session (sessions_tests.tests.DatabaseSessionTests)", "test_pop (sessions_tests.tests.DatabaseSessionTests)", "test_pop_default (sessions_tests.tests.DatabaseSessionTests)", "test_pop_default_named_argument (sessions_tests.tests.DatabaseSessionTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.DatabaseSessionTests)", "test_save (sessions_tests.tests.DatabaseSessionTests)", "test_save_doesnt_clear_data (sessions_tests.tests.DatabaseSessionTests)", "test_session_get_decoded (sessions_tests.tests.DatabaseSessionTests)", "test_session_key_is_read_only (sessions_tests.tests.DatabaseSessionTests)", "test_session_load_does_not_create_record (sessions_tests.tests.DatabaseSessionTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.DatabaseSessionTests)", "test_sessionmanager_save (sessions_tests.tests.DatabaseSessionTests)", "test_setdefault (sessions_tests.tests.DatabaseSessionTests)", "test_store (sessions_tests.tests.DatabaseSessionTests)", "test_update (sessions_tests.tests.DatabaseSessionTests)", "test_values (sessions_tests.tests.DatabaseSessionTests)", "test_actual_expiry (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_clear (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_clearsessions_command (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_custom_expiry_datetime (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_custom_expiry_reset (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_custom_expiry_seconds (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_custom_expiry_timedelta (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_cycle (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_decode (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_decode_legacy (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_default_expiry (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_delete (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_flush (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_get_empty (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_get_expire_at_browser_close (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_has_key (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_invalid_key (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_items (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_keys (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_new_session (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_pop (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_pop_default (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_pop_default_named_argument (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_save (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_save_doesnt_clear_data (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_session_get_decoded (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_session_key_is_read_only (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_session_load_does_not_create_record (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_sessionmanager_save (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_setdefault (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_store (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_update (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_values (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)", "test_empty_session_saved (sessions_tests.tests.SessionMiddlewareTests)", "test_flush_empty_without_session_cookie_doesnt_set_cookie (sessions_tests.tests.SessionMiddlewareTests)", "test_httponly_session_cookie (sessions_tests.tests.SessionMiddlewareTests)", "test_no_httponly_session_cookie (sessions_tests.tests.SessionMiddlewareTests)", "test_samesite_session_cookie (sessions_tests.tests.SessionMiddlewareTests)", "test_secure_session_cookie (sessions_tests.tests.SessionMiddlewareTests)", "test_session_delete_on_end (sessions_tests.tests.SessionMiddlewareTests)", "test_session_delete_on_end_with_custom_domain_and_path (sessions_tests.tests.SessionMiddlewareTests)", "test_session_save_on_500 (sessions_tests.tests.SessionMiddlewareTests)", "test_session_update_error_redirect (sessions_tests.tests.SessionMiddlewareTests)", "test_actual_expiry (sessions_tests.tests.CacheSessionTests)", "test_clear (sessions_tests.tests.CacheSessionTests)", "test_create_and_save (sessions_tests.tests.CacheSessionTests)", "test_custom_expiry_datetime (sessions_tests.tests.CacheSessionTests)", "test_custom_expiry_reset (sessions_tests.tests.CacheSessionTests)", "test_custom_expiry_seconds (sessions_tests.tests.CacheSessionTests)", "test_custom_expiry_timedelta (sessions_tests.tests.CacheSessionTests)", "test_cycle (sessions_tests.tests.CacheSessionTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.CacheSessionTests)", "test_decode (sessions_tests.tests.CacheSessionTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.CacheSessionTests)", "test_decode_legacy (sessions_tests.tests.CacheSessionTests)", "test_default_cache (sessions_tests.tests.CacheSessionTests)", "test_default_expiry (sessions_tests.tests.CacheSessionTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CacheSessionTests)", "test_delete (sessions_tests.tests.CacheSessionTests)", "test_flush (sessions_tests.tests.CacheSessionTests)", "test_get_empty (sessions_tests.tests.CacheSessionTests)", "test_get_expire_at_browser_close (sessions_tests.tests.CacheSessionTests)", "test_has_key (sessions_tests.tests.CacheSessionTests)", "test_invalid_key (sessions_tests.tests.CacheSessionTests)", "test_items (sessions_tests.tests.CacheSessionTests)", "test_keys (sessions_tests.tests.CacheSessionTests)", "test_load_overlong_key (sessions_tests.tests.CacheSessionTests)", "test_new_session (sessions_tests.tests.CacheSessionTests)", "test_non_default_cache (sessions_tests.tests.CacheSessionTests)", "test_pop (sessions_tests.tests.CacheSessionTests)", "test_pop_default (sessions_tests.tests.CacheSessionTests)", "test_pop_default_named_argument (sessions_tests.tests.CacheSessionTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.CacheSessionTests)", "test_save (sessions_tests.tests.CacheSessionTests)", "test_save_doesnt_clear_data (sessions_tests.tests.CacheSessionTests)", "test_session_key_is_read_only (sessions_tests.tests.CacheSessionTests)", "test_session_load_does_not_create_record (sessions_tests.tests.CacheSessionTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CacheSessionTests)", "test_setdefault (sessions_tests.tests.CacheSessionTests)", "test_store (sessions_tests.tests.CacheSessionTests)", "test_update (sessions_tests.tests.CacheSessionTests)", "test_values (sessions_tests.tests.CacheSessionTests)", "test_clear (sessions_tests.tests.CookieSessionTests)", "test_custom_expiry_datetime (sessions_tests.tests.CookieSessionTests)", "test_custom_expiry_reset (sessions_tests.tests.CookieSessionTests)", "test_custom_expiry_seconds (sessions_tests.tests.CookieSessionTests)", "test_custom_expiry_timedelta (sessions_tests.tests.CookieSessionTests)", "test_cycle (sessions_tests.tests.CookieSessionTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.CookieSessionTests)", "test_decode (sessions_tests.tests.CookieSessionTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.CookieSessionTests)", "test_decode_legacy (sessions_tests.tests.CookieSessionTests)", "test_default_expiry (sessions_tests.tests.CookieSessionTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CookieSessionTests)", "test_delete (sessions_tests.tests.CookieSessionTests)", "test_flush (sessions_tests.tests.CookieSessionTests)", "test_get_empty (sessions_tests.tests.CookieSessionTests)", "test_get_expire_at_browser_close (sessions_tests.tests.CookieSessionTests)", "test_has_key (sessions_tests.tests.CookieSessionTests)", "test_invalid_key (sessions_tests.tests.CookieSessionTests)", "test_items (sessions_tests.tests.CookieSessionTests)", "test_keys (sessions_tests.tests.CookieSessionTests)", "test_new_session (sessions_tests.tests.CookieSessionTests)", "test_pop (sessions_tests.tests.CookieSessionTests)", "test_pop_default (sessions_tests.tests.CookieSessionTests)", "test_pop_default_named_argument (sessions_tests.tests.CookieSessionTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.CookieSessionTests)", "test_save (sessions_tests.tests.CookieSessionTests)", "test_save_doesnt_clear_data (sessions_tests.tests.CookieSessionTests)", "test_session_key_is_read_only (sessions_tests.tests.CookieSessionTests)", "test_setdefault (sessions_tests.tests.CookieSessionTests)", "test_store (sessions_tests.tests.CookieSessionTests)", "test_unpickling_exception (sessions_tests.tests.CookieSessionTests)", "test_update (sessions_tests.tests.CookieSessionTests)", "test_values (sessions_tests.tests.CookieSessionTests)", "test_actual_expiry (sessions_tests.tests.FileSessionPathLibTests)", "test_clear (sessions_tests.tests.FileSessionPathLibTests)", "test_clearsessions_command (sessions_tests.tests.FileSessionPathLibTests)", "test_configuration_check (sessions_tests.tests.FileSessionPathLibTests)", "test_custom_expiry_datetime (sessions_tests.tests.FileSessionPathLibTests)", "test_custom_expiry_reset (sessions_tests.tests.FileSessionPathLibTests)", "test_custom_expiry_seconds (sessions_tests.tests.FileSessionPathLibTests)", "test_custom_expiry_timedelta (sessions_tests.tests.FileSessionPathLibTests)", "test_cycle (sessions_tests.tests.FileSessionPathLibTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.FileSessionPathLibTests)", "test_decode (sessions_tests.tests.FileSessionPathLibTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.FileSessionPathLibTests)", "test_decode_legacy (sessions_tests.tests.FileSessionPathLibTests)", "test_default_expiry (sessions_tests.tests.FileSessionPathLibTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.FileSessionPathLibTests)", "test_delete (sessions_tests.tests.FileSessionPathLibTests)", "test_flush (sessions_tests.tests.FileSessionPathLibTests)", "test_get_empty (sessions_tests.tests.FileSessionPathLibTests)", "test_get_expire_at_browser_close (sessions_tests.tests.FileSessionPathLibTests)", "test_has_key (sessions_tests.tests.FileSessionPathLibTests)", "test_invalid_key (sessions_tests.tests.FileSessionPathLibTests)", "test_invalid_key_backslash (sessions_tests.tests.FileSessionPathLibTests)", "test_invalid_key_forwardslash (sessions_tests.tests.FileSessionPathLibTests)", "test_items (sessions_tests.tests.FileSessionPathLibTests)", "test_keys (sessions_tests.tests.FileSessionPathLibTests)", "test_new_session (sessions_tests.tests.FileSessionPathLibTests)", "test_pop (sessions_tests.tests.FileSessionPathLibTests)", "test_pop_default (sessions_tests.tests.FileSessionPathLibTests)", "test_pop_default_named_argument (sessions_tests.tests.FileSessionPathLibTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.FileSessionPathLibTests)", "test_save (sessions_tests.tests.FileSessionPathLibTests)", "test_save_doesnt_clear_data (sessions_tests.tests.FileSessionPathLibTests)", "test_session_key_is_read_only (sessions_tests.tests.FileSessionPathLibTests)", "test_session_load_does_not_create_record (sessions_tests.tests.FileSessionPathLibTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.FileSessionPathLibTests)", "test_setdefault (sessions_tests.tests.FileSessionPathLibTests)", "test_store (sessions_tests.tests.FileSessionPathLibTests)", "test_update (sessions_tests.tests.FileSessionPathLibTests)", "test_values (sessions_tests.tests.FileSessionPathLibTests)", "test_actual_expiry (sessions_tests.tests.FileSessionTests)", "test_clear (sessions_tests.tests.FileSessionTests)", "test_clearsessions_command (sessions_tests.tests.FileSessionTests)", "test_configuration_check (sessions_tests.tests.FileSessionTests)", "test_custom_expiry_datetime (sessions_tests.tests.FileSessionTests)", "test_custom_expiry_reset (sessions_tests.tests.FileSessionTests)", "test_custom_expiry_seconds (sessions_tests.tests.FileSessionTests)", "test_custom_expiry_timedelta (sessions_tests.tests.FileSessionTests)", "test_cycle (sessions_tests.tests.FileSessionTests)", "test_cycle_with_no_session_cache (sessions_tests.tests.FileSessionTests)", "test_decode (sessions_tests.tests.FileSessionTests)", "test_decode_failure_logged_to_security (sessions_tests.tests.FileSessionTests)", "test_decode_legacy (sessions_tests.tests.FileSessionTests)", "test_default_expiry (sessions_tests.tests.FileSessionTests)", "test_default_hashing_algorith_legacy_decode (sessions_tests.tests.FileSessionTests)", "test_delete (sessions_tests.tests.FileSessionTests)", "test_flush (sessions_tests.tests.FileSessionTests)", "test_get_empty (sessions_tests.tests.FileSessionTests)", "test_get_expire_at_browser_close (sessions_tests.tests.FileSessionTests)", "test_has_key (sessions_tests.tests.FileSessionTests)", "test_invalid_key (sessions_tests.tests.FileSessionTests)", "test_invalid_key_backslash (sessions_tests.tests.FileSessionTests)", "test_invalid_key_forwardslash (sessions_tests.tests.FileSessionTests)", "test_items (sessions_tests.tests.FileSessionTests)", "test_keys (sessions_tests.tests.FileSessionTests)", "test_new_session (sessions_tests.tests.FileSessionTests)", "test_pop (sessions_tests.tests.FileSessionTests)", "test_pop_default (sessions_tests.tests.FileSessionTests)", "test_pop_default_named_argument (sessions_tests.tests.FileSessionTests)", "test_pop_no_default_keyerror_raised (sessions_tests.tests.FileSessionTests)", "test_save (sessions_tests.tests.FileSessionTests)", "test_save_doesnt_clear_data (sessions_tests.tests.FileSessionTests)", "test_session_key_is_read_only (sessions_tests.tests.FileSessionTests)", "test_session_load_does_not_create_record (sessions_tests.tests.FileSessionTests)", "test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.FileSessionTests)", "test_setdefault (sessions_tests.tests.FileSessionTests)", "test_store (sessions_tests.tests.FileSessionTests)", "test_update (sessions_tests.tests.FileSessionTests)", "test_values (sessions_tests.tests.FileSessionTests)"]}
{"instance_id": "django__django-13401", "tests_passing_in_original_repo": ["test_get_choices (model_fields.tests.GetChoicesLimitChoicesToTests)", "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesLimitChoicesToTests)", "test_get_choices (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_default_ordering (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesOrderingTests)", "test_get_choices_reverse_related_field_default_ordering (model_fields.tests.GetChoicesOrderingTests)", "Can supply a custom choices form class to Field.formfield()", "deconstruct() uses __qualname__ for nested class support.", "Field instances can be pickled.", "test_field_name (model_fields.tests.BasicFieldTests)", "Fields are ordered based on their creation.", "test_field_repr (model_fields.tests.BasicFieldTests)", "__repr__() uses __qualname__ for nested class support.", "test_field_str (model_fields.tests.BasicFieldTests)", "test_field_verbose_name (model_fields.tests.BasicFieldTests)", "Field.formfield() sets disabled for fields with choices.", "test_show_hidden_initial (model_fields.tests.BasicFieldTests)", "test_check (model_fields.tests.ChoicesTests)", "test_choices (model_fields.tests.ChoicesTests)", "test_flatchoices (model_fields.tests.ChoicesTests)", "test_formfield (model_fields.tests.ChoicesTests)", "test_invalid_choice (model_fields.tests.ChoicesTests)", "test_blank_in_choices (model_fields.tests.GetChoicesTests)", "test_blank_in_grouped_choices (model_fields.tests.GetChoicesTests)", "test_empty_choices (model_fields.tests.GetChoicesTests)", "test_lazy_strings_not_evaluated (model_fields.tests.GetChoicesTests)", "test_choices_and_field_display (model_fields.tests.GetFieldDisplayTests)", "test_empty_iterator_choices (model_fields.tests.GetFieldDisplayTests)", "A translated display value is coerced to str.", "test_iterator_choices (model_fields.tests.GetFieldDisplayTests)", "test_overriding_FIELD_display (model_fields.tests.GetFieldDisplayTests)", "test_overriding_inherited_FIELD_display (model_fields.tests.GetFieldDisplayTests)"]}
{"instance_id": "django__django-13447", "tests_passing_in_original_repo": ["test_available_apps (admin_views.test_adminsite.SiteEachContextTest)", "test_each_context (admin_views.test_adminsite.SiteEachContextTest)", "test_each_context_site_url_with_script_name (admin_views.test_adminsite.SiteEachContextTest)", "test_add_action (admin_views.test_adminsite.SiteActionsTests)", "test_disable_action (admin_views.test_adminsite.SiteActionsTests)", "AdminSite.get_action() returns an action even if it's disabled."]}
{"instance_id": "django__django-13448", "tests_passing_in_original_repo": ["test_migrate_test_setting_false (backends.base.test_creation.TestDbCreationTests)", "test_migrate_test_setting_true (backends.base.test_creation.TestDbCreationTests)", "test_custom_test_name (backends.base.test_creation.TestDbSignatureTests)", "test_custom_test_name_with_test_prefix (backends.base.test_creation.TestDbSignatureTests)", "test_default_name (backends.base.test_creation.TestDbSignatureTests)", "test_circular_reference (backends.base.test_creation.TestDeserializeDbFromString)", "test_circular_reference_with_natural_key (backends.base.test_creation.TestDeserializeDbFromString)", "test_self_reference (backends.base.test_creation.TestDeserializeDbFromString)"]}
{"instance_id": "django__django-13551", "tests_passing_in_original_repo": ["test_check_password_upgrade (auth_tests.test_models.AbstractUserTestCase)", "test_email_user (auth_tests.test_models.AbstractUserTestCase)", "test_last_login_default (auth_tests.test_models.AbstractUserTestCase)", "test_user_clean_normalize_email (auth_tests.test_models.AbstractUserTestCase)", "test_user_double_save (auth_tests.test_models.AbstractUserTestCase)", "test_builtin_user_isactive (auth_tests.test_models.IsActiveTestCase)", "test_is_active_field_default (auth_tests.test_models.IsActiveTestCase)", "test_load_data_with_user_permissions (auth_tests.test_models.LoadDataWithNaturalKeysAndMultipleDatabasesTestCase)", "test_user_is_created_and_added_to_group (auth_tests.test_models.LoadDataWithNaturalKeysTestCase)", "test_user_is_created_and_added_to_group (auth_tests.test_models.LoadDataWithoutNaturalKeysTestCase)", "test_group_natural_key (auth_tests.test_models.NaturalKeysTestCase)", "test_user_natural_key (auth_tests.test_models.NaturalKeysTestCase)", "test_str (auth_tests.test_models.PermissionTests)", "test_create_superuser (auth_tests.test_models.TestCreateSuperUserSignals)", "test_create_user (auth_tests.test_models.TestCreateSuperUserSignals)", "test_backend_without_with_perm (auth_tests.test_models.UserWithPermTestCase)", "test_basic (auth_tests.test_models.UserWithPermTestCase)", "test_custom_backend (auth_tests.test_models.UserWithPermTestCase)", "test_custom_backend_pass_obj (auth_tests.test_models.UserWithPermTestCase)", "test_invalid_backend_type (auth_tests.test_models.UserWithPermTestCase)", "test_invalid_permission_name (auth_tests.test_models.UserWithPermTestCase)", "test_invalid_permission_type (auth_tests.test_models.UserWithPermTestCase)", "test_multiple_backends (auth_tests.test_models.UserWithPermTestCase)", "test_nonexistent_backend (auth_tests.test_models.UserWithPermTestCase)", "test_nonexistent_permission (auth_tests.test_models.UserWithPermTestCase)", "test_10265 (auth_tests.test_tokens.TokenGeneratorTest)", "test_check_token_with_nonexistent_token_and_user (auth_tests.test_tokens.TokenGeneratorTest)", "test_legacy_token_validation (auth_tests.test_tokens.TokenGeneratorTest)", "test_make_token (auth_tests.test_tokens.TokenGeneratorTest)", "The token is valid after n seconds, but no greater.", "test_token_default_hashing_algorithm (auth_tests.test_tokens.TokenGeneratorTest)", "test_token_with_different_secret (auth_tests.test_tokens.TokenGeneratorTest)", "test_clean_normalize_username (auth_tests.test_models.AbstractBaseUserTests)", "test_custom_email (auth_tests.test_models.AbstractBaseUserTests)", "test_default_email (auth_tests.test_models.AbstractBaseUserTests)", "test_has_usable_password (auth_tests.test_models.AbstractBaseUserTests)", "test_normalize_username (auth_tests.test_models.AbstractBaseUserTests)", "test_check_password (auth_tests.test_models.AnonymousUserTests)", "test_delete (auth_tests.test_models.AnonymousUserTests)", "test_eq (auth_tests.test_models.AnonymousUserTests)", "test_hash (auth_tests.test_models.AnonymousUserTests)", "test_int (auth_tests.test_models.AnonymousUserTests)", "test_properties (auth_tests.test_models.AnonymousUserTests)", "test_save (auth_tests.test_models.AnonymousUserTests)", "test_set_password (auth_tests.test_models.AnonymousUserTests)", "test_str (auth_tests.test_models.AnonymousUserTests)", "test_str (auth_tests.test_models.GroupTests)", "test_create_super_user_raises_error_on_false_is_superuser (auth_tests.test_models.UserManagerTestCase)", "test_create_superuser_raises_error_on_false_is_staff (auth_tests.test_models.UserManagerTestCase)", "test_create_user (auth_tests.test_models.UserManagerTestCase)", "test_create_user_email_domain_normalize (auth_tests.test_models.UserManagerTestCase)", "test_create_user_email_domain_normalize_rfc3696 (auth_tests.test_models.UserManagerTestCase)", "test_create_user_email_domain_normalize_with_whitespace (auth_tests.test_models.UserManagerTestCase)", "test_create_user_is_staff (auth_tests.test_models.UserManagerTestCase)", "test_empty_username (auth_tests.test_models.UserManagerTestCase)", "test_make_random_password (auth_tests.test_models.UserManagerTestCase)", "test_runpython_manager_methods (auth_tests.test_models.UserManagerTestCase)"]}
{"instance_id": "django__django-13590", "tests_passing_in_original_repo": ["test_aggregate_subquery_annotation (expressions.tests.BasicExpressionsTests)", "test_annotate_values_aggregate (expressions.tests.BasicExpressionsTests)", "test_annotate_values_count (expressions.tests.BasicExpressionsTests)", "test_annotate_values_filter (expressions.tests.BasicExpressionsTests)", "test_annotation_with_nested_outerref (expressions.tests.BasicExpressionsTests)", "test_annotation_with_outerref (expressions.tests.BasicExpressionsTests)", "test_annotations_within_subquery (expressions.tests.BasicExpressionsTests)", "test_arithmetic (expressions.tests.BasicExpressionsTests)", "test_boolean_expression_combined (expressions.tests.BasicExpressionsTests)", "test_case_in_filter_if_boolean_output_field (expressions.tests.BasicExpressionsTests)", "test_exist_single_field_output_field (expressions.tests.BasicExpressionsTests)", "test_exists_in_filter (expressions.tests.BasicExpressionsTests)", "test_explicit_output_field (expressions.tests.BasicExpressionsTests)", "test_filter_inter_attribute (expressions.tests.BasicExpressionsTests)", "test_filter_with_join (expressions.tests.BasicExpressionsTests)", "test_filtering_on_annotate_that_uses_q (expressions.tests.BasicExpressionsTests)", "test_filtering_on_q_that_is_boolean (expressions.tests.BasicExpressionsTests)", "test_filtering_on_rawsql_that_is_boolean (expressions.tests.BasicExpressionsTests)", "test_in_subquery (expressions.tests.BasicExpressionsTests)", "test_incorrect_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_incorrect_joined_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_nested_outerref_with_function (expressions.tests.BasicExpressionsTests)", "test_nested_subquery (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_join_outer_ref (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_2 (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_with_autofield (expressions.tests.BasicExpressionsTests)", "test_new_object_create (expressions.tests.BasicExpressionsTests)", "test_new_object_save (expressions.tests.BasicExpressionsTests)", "test_object_create_with_aggregate (expressions.tests.BasicExpressionsTests)", "test_object_update (expressions.tests.BasicExpressionsTests)", "test_object_update_fk (expressions.tests.BasicExpressionsTests)", "test_object_update_unsaved_objects (expressions.tests.BasicExpressionsTests)", "test_order_by_exists (expressions.tests.BasicExpressionsTests)", "test_order_by_multiline_sql (expressions.tests.BasicExpressionsTests)", "test_order_of_operations (expressions.tests.BasicExpressionsTests)", "test_outerref (expressions.tests.BasicExpressionsTests)", "test_outerref_mixed_case_table_name (expressions.tests.BasicExpressionsTests)", "test_outerref_with_operator (expressions.tests.BasicExpressionsTests)", "test_parenthesis_priority (expressions.tests.BasicExpressionsTests)", "test_pickle_expression (expressions.tests.BasicExpressionsTests)", "test_subquery (expressions.tests.BasicExpressionsTests)", "test_subquery_eq (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_aggregate (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_lazy (expressions.tests.BasicExpressionsTests)", "test_subquery_group_by_outerref_in_filter (expressions.tests.BasicExpressionsTests)", "test_subquery_in_filter (expressions.tests.BasicExpressionsTests)", "test_subquery_references_joined_table_twice (expressions.tests.BasicExpressionsTests)", "test_ticket_11722_iexact_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_16731_startswith_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_chained_filters (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_join_reuse (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering_2 (expressions.tests.BasicExpressionsTests)", "test_update (expressions.tests.BasicExpressionsTests)", "test_update_inherited_field_value (expressions.tests.BasicExpressionsTests)", "test_update_with_fk (expressions.tests.BasicExpressionsTests)", "test_update_with_none (expressions.tests.BasicExpressionsTests)", "test_uuid_pk_subquery (expressions.tests.BasicExpressionsTests)", "test_optimizations (expressions.tests.ExistsTests)", "test_lefthand_addition (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_and (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_left_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_or (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_right_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor_null (expressions.tests.ExpressionOperatorTests)", "test_lefthand_division (expressions.tests.ExpressionOperatorTests)", "test_lefthand_modulo (expressions.tests.ExpressionOperatorTests)", "test_lefthand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_lefthand_power (expressions.tests.ExpressionOperatorTests)", "test_lefthand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_right_hand_addition (expressions.tests.ExpressionOperatorTests)", "test_right_hand_division (expressions.tests.ExpressionOperatorTests)", "test_right_hand_modulo (expressions.tests.ExpressionOperatorTests)", "test_right_hand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_right_hand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_righthand_power (expressions.tests.ExpressionOperatorTests)", "test_complex_expressions (expressions.tests.ExpressionsNumericTests)", "test_fill_with_value_from_same_object (expressions.tests.ExpressionsNumericTests)", "test_filter_not_equals_other_field (expressions.tests.ExpressionsNumericTests)", "test_increment_value (expressions.tests.ExpressionsNumericTests)", "test_F_reuse (expressions.tests.ExpressionsTests)", "test_insensitive_patterns_escape (expressions.tests.ExpressionsTests)", "test_patterns_escape (expressions.tests.ExpressionsTests)", "test_date_case_subtraction (expressions.tests.FTimeDeltaTests)", "test_date_comparison (expressions.tests.FTimeDeltaTests)", "test_date_minus_duration (expressions.tests.FTimeDeltaTests)", "test_date_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_date_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction_microseconds (expressions.tests.FTimeDeltaTests)", "test_delta_add (expressions.tests.FTimeDeltaTests)", "test_delta_subtract (expressions.tests.FTimeDeltaTests)", "test_delta_update (expressions.tests.FTimeDeltaTests)", "test_duration_expressions (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime_microseconds (expressions.tests.FTimeDeltaTests)", "test_durationfield_add (expressions.tests.FTimeDeltaTests)", "test_exclude (expressions.tests.FTimeDeltaTests)", "test_invalid_operator (expressions.tests.FTimeDeltaTests)", "test_mixed_comparisons2 (expressions.tests.FTimeDeltaTests)", "test_multiple_query_compilation (expressions.tests.FTimeDeltaTests)", "test_negative_timedelta_update (expressions.tests.FTimeDeltaTests)", "test_query_clone (expressions.tests.FTimeDeltaTests)", "test_time_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_time_subtraction (expressions.tests.FTimeDeltaTests)", "test_month_aggregation (expressions.tests.FieldTransformTests)", "test_multiple_transforms_in_values (expressions.tests.FieldTransformTests)", "test_transform_in_values (expressions.tests.FieldTransformTests)", "test_complex_expressions_do_not_introduce_sql_injection_via_untrusted_string_inclusion (expressions.tests.IterableLookupInnerExpressionsTests)", "test_expressions_in_lookups_join_choice (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_datetimes (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_range_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_compile_unresolved (expressions.tests.ValueTests)", "test_deconstruct (expressions.tests.ValueTests)", "test_deconstruct_output_field (expressions.tests.ValueTests)", "test_equal (expressions.tests.ValueTests)", "test_equal_output_field (expressions.tests.ValueTests)", "test_hash (expressions.tests.ValueTests)", "test_raise_empty_expressionlist (expressions.tests.ValueTests)", "test_resolve_output_field (expressions.tests.ValueTests)", "test_resolve_output_field_failure (expressions.tests.ValueTests)", "test_update_TimeField_using_Value (expressions.tests.ValueTests)", "test_update_UUIDField_using_Value (expressions.tests.ValueTests)", "test_and (expressions.tests.CombinableTests)", "test_negation (expressions.tests.CombinableTests)", "test_or (expressions.tests.CombinableTests)", "test_reversed_and (expressions.tests.CombinableTests)", "test_reversed_or (expressions.tests.CombinableTests)", "test_resolve_output_field (expressions.tests.CombinedExpressionTests)", "test_empty_group_by (expressions.tests.ExpressionWrapperTests)", "test_non_empty_group_by (expressions.tests.ExpressionWrapperTests)", "test_deconstruct (expressions.tests.FTests)", "test_deepcopy (expressions.tests.FTests)", "test_equal (expressions.tests.FTests)", "test_hash (expressions.tests.FTests)", "test_not_equal_Value (expressions.tests.FTests)", "test_aggregates (expressions.tests.ReprTests)", "test_distinct_aggregates (expressions.tests.ReprTests)", "test_expressions (expressions.tests.ReprTests)", "test_filtered_aggregates (expressions.tests.ReprTests)", "test_functions (expressions.tests.ReprTests)", "test_equal (expressions.tests.SimpleExpressionTests)", "test_hash (expressions.tests.SimpleExpressionTests)"]}
{"instance_id": "django__django-13658", "tests_passing_in_original_repo": ["test_migration_warning_multiple_apps (admin_scripts.tests.ManageRunserverMigrationWarning)", "test_migration_warning_one_app (admin_scripts.tests.ManageRunserverMigrationWarning)", "Options passed before settings are correctly handled.", "Options are correctly handled when they are passed before and after", "Options passed after settings are correctly handled.", "Short options passed after settings are correctly handled.", "Short options passed before settings are correctly handled.", "User AppCommands can execute when a single app name is provided", "User AppCommands raise an error when multiple app names are provided", "User AppCommands raise an error when no app name is provided", "User AppCommands can execute when some of the provided app names are invalid", "User BaseCommands can execute when a label is provided", "User BaseCommands can execute when no labels are provided", "User BaseCommands can execute with options when a label is provided", "User BaseCommands can execute with multiple options when a label is provided", "User BaseCommands outputs command usage when wrong option is specified", "test_base_run_from_argv (admin_scripts.tests.CommandTypes)", "test_color_style (admin_scripts.tests.CommandTypes)", "test_command_color (admin_scripts.tests.CommandTypes)", "--no-color prevent colorization of the output", "test_custom_stderr (admin_scripts.tests.CommandTypes)", "test_custom_stdout (admin_scripts.tests.CommandTypes)", "test_force_color_command_init (admin_scripts.tests.CommandTypes)", "test_force_color_execute (admin_scripts.tests.CommandTypes)", "help is handled as a special case", "--help is equivalent to help", "help --commands shows the list of all available commands", "-h is handled as a short form of --help", "User LabelCommands can execute when a label is provided", "User LabelCommands are executed multiple times if multiple labels are provided", "User LabelCommands raise an error if no label is provided", "test_no_color_force_color_mutually_exclusive_command_init (admin_scripts.tests.CommandTypes)", "test_no_color_force_color_mutually_exclusive_execute (admin_scripts.tests.CommandTypes)", "NoArg Commands can be executed", "NoArg Commands raise an error if an argument is provided", "test_run_from_argv_closes_connections (admin_scripts.tests.CommandTypes)", "test_run_from_argv_non_ascii_error (admin_scripts.tests.CommandTypes)", "--help can be used on a specific command", "version is handled as a special case", "--version is equivalent to version", "The all option also shows settings with the default value.", "Runs without error and emits settings diff.", "test_custom_default (admin_scripts.tests.DiffSettings)", "test_dynamic_settings_configured (admin_scripts.tests.DiffSettings)", "test_settings_configured (admin_scripts.tests.DiffSettings)", "--output=unified emits settings diff in unified mode.", "test_unified_all (admin_scripts.tests.DiffSettings)", "test_precedence (admin_scripts.tests.Discovery)", "alternate: django-admin builtin commands fail with an error when no settings provided", "alternate: django-admin builtin commands fail if settings file (from environment) doesn't exist", "alternate: django-admin builtin commands fail if settings file (from argument) doesn't exist", "alternate: django-admin builtin commands succeed if settings are provided in the environment", "alternate: django-admin builtin commands succeed if settings are provided as argument", "alternate: django-admin can't execute user commands unless settings are provided", "alternate: django-admin can execute user commands if settings are provided in environment", "alternate: django-admin can execute user commands if settings are provided as argument", "default: django-admin builtin commands fail with an error when no settings provided", "default: django-admin builtin commands fail if settings file (from environment) doesn't exist", "default: django-admin builtin commands fail if settings file (from argument) doesn't exist", "default: django-admin builtin commands succeed if settings are provided in the environment", "default: django-admin builtin commands succeed if settings are provided as argument", "default: django-admin can't execute user commands if it isn't provided settings", "default: django-admin can execute user commands if settings are provided in environment", "default: django-admin can execute user commands if settings are provided as argument", "fulldefault: django-admin builtin commands fail with an error when no settings provided", "fulldefault: django-admin builtin commands fail if settings file (from environment) doesn't exist", "fulldefault: django-admin builtin commands fail if settings file (from argument) doesn't exist", "fulldefault: django-admin builtin commands succeed if the environment contains settings", "fulldefault: django-admin builtin commands succeed if a settings file is provided", "fulldefault: django-admin can't execute user commands unless settings are provided", "fulldefault: django-admin can execute user commands if settings are provided in environment", "fulldefault: django-admin can execute user commands if settings are provided as argument", "minimal: django-admin builtin commands fail with an error when no settings provided", "minimal: django-admin builtin commands fail if settings file (from environment) doesn't exist", "minimal: django-admin builtin commands fail if settings file (from argument) doesn't exist", "minimal: django-admin builtin commands fail if settings are provided in the environment", "minimal: django-admin builtin commands fail if settings are provided as argument", "minimal: django-admin can't execute user commands unless settings are provided", "minimal: django-admin can't execute user commands, even if settings are provided in environment", "minimal: django-admin can't execute user commands, even if settings are provided as argument", "no settings: django-admin builtin commands fail with an error when no settings provided", "no settings: django-admin builtin commands fail if settings file (from environment) doesn't exist", "no settings: django-admin builtin commands fail if settings file (from argument) doesn't exist", "test_commands_with_invalid_settings (admin_scripts.tests.DjangoAdminNoSettings)", "directory: django-admin builtin commands fail with an error when no settings provided", "directory: django-admin builtin commands fail if settings file (from environment) doesn't exist", "directory: django-admin builtin commands fail if settings file (from argument) doesn't exist", "directory: django-admin builtin commands succeed if settings are provided in the environment", "directory: django-admin builtin commands succeed if settings are provided as argument", "directory: django-admin can't execute user commands unless settings are provided", "directory: startapp creates the correct directory", "directory: startapp creates the correct directory with a custom template", "startapp creates the correct directory with Unicode characters.", "test_no_suggestions (admin_scripts.tests.DjangoAdminSuggestions)", "test_suggestions (admin_scripts.tests.DjangoAdminSuggestions)", "Regression for #20509", "test_program_name_in_help (admin_scripts.tests.MainModule)", "alternate: manage.py builtin commands fail with an error when no default settings provided", "alternate: manage.py builtin commands fail if settings file (from environment) doesn't exist", "alternate: manage.py builtin commands fail if settings file (from argument) doesn't exist", "alternate: manage.py builtin commands work if settings are provided in the environment", "alternate: manage.py builtin commands work with settings provided as argument", "alternate: manage.py can't execute user commands without settings", "alternate: manage.py output syntax color can be deactivated with the `--no-color` option", "alternate: manage.py can execute user commands if settings are provided in environment", "alternate: manage.py can execute user commands if settings are provided as argument", "manage.py check does not raise errors when an app imports a base", "manage.py check reports an ImportError if an app's models.py", "manage.py check does not raise an ImportError validating a", "check reports an error on a nonexistent app in INSTALLED_APPS.", "All errors/warnings should be sorted by level and by message.", "test_warning_does_not_halt (admin_scripts.tests.ManageCheck)", "default: manage.py builtin commands succeed when default settings are appropriate", "default: manage.py builtin commands fail if settings file (from environment) doesn't exist", "default: manage.py builtin commands succeed if settings file (from argument) doesn't exist", "default: manage.py builtin commands succeed if settings are provided in the environment", "default: manage.py builtin commands succeed if settings are provided as argument", "default: manage.py can execute user commands when default settings are appropriate", "default: manage.py can execute user commands when settings are provided in environment", "default: manage.py can execute user commands when settings are provided as argument", "fulldefault: manage.py builtin commands succeed when default settings are appropriate", "fulldefault: manage.py builtin commands fail if settings file (from environment) doesn't exist", "fulldefault: manage.py builtin commands succeed if settings file (from argument) doesn't exist", "fulldefault: manage.py builtin commands succeed if settings are provided in the environment", "fulldefault: manage.py builtin commands succeed if settings are provided as argument", "fulldefault: manage.py can execute user commands when default settings are appropriate", "fulldefault: manage.py can execute user commands when settings are provided in environment", "fulldefault: manage.py can execute user commands when settings are provided as argument", "test_non_existent_command_output (admin_scripts.tests.ManageManuallyConfiguredSettings)", "minimal: manage.py builtin commands fail with an error when no settings provided", "minimal: manage.py builtin commands fail if settings file (from environment) doesn't exist", "minimal: manage.py builtin commands fail if settings file (from argument) doesn't exist", "minimal: manage.py builtin commands fail if settings are provided in the environment", "minimal: manage.py builtin commands fail if settings are provided as argument", "minimal: manage.py can't execute user commands without appropriate settings", "minimal: manage.py can't execute user commands, even if settings are provided in environment", "minimal: manage.py can't execute user commands, even if settings are provided as argument", "multiple: manage.py builtin commands fail with an error when no settings provided", "multiple: manage.py builtin commands fail if settings file (from environment) doesn't exist", "multiple: manage.py builtin commands fail if settings file (from argument) doesn't exist", "multiple: manage.py can execute builtin commands if settings are provided in the environment", "multiple: manage.py builtin commands succeed if settings are provided as argument", "multiple: manage.py can't execute user commands using default settings", "multiple: manage.py can execute user commands if settings are provided in environment", "multiple: manage.py can execute user commands if settings are provided as argument", "no settings: manage.py builtin commands fail with an error when no settings provided", "no settings: manage.py builtin commands fail if settings file (from environment) doesn't exist", "no settings: manage.py builtin commands fail if settings file (from argument) doesn't exist", "test_no_database (admin_scripts.tests.ManageRunserver)", "test_readonly_database (admin_scripts.tests.ManageRunserver)", "test_runner_addrport_ipv6 (admin_scripts.tests.ManageRunserver)", "test_runner_ambiguous (admin_scripts.tests.ManageRunserver)", "test_runner_custom_defaults (admin_scripts.tests.ManageRunserver)", "test_runner_custom_defaults_ipv6 (admin_scripts.tests.ManageRunserver)", "test_runner_hostname (admin_scripts.tests.ManageRunserver)", "test_runner_hostname_ipv6 (admin_scripts.tests.ManageRunserver)", "test_runserver_addrport (admin_scripts.tests.ManageRunserver)", "test_empty_allowed_hosts_error (admin_scripts.tests.ManageRunserverEmptyAllowedHosts)", "test_attribute_error (admin_scripts.tests.ManageSettingsWithSettingsErrors)", "test_help (admin_scripts.tests.ManageSettingsWithSettingsErrors)", "test_import_error (admin_scripts.tests.ManageSettingsWithSettingsErrors)", "test_key_error (admin_scripts.tests.ManageSettingsWithSettingsErrors)", "test_params_to_runserver (admin_scripts.tests.ManageTestserver)", "test_testserver_handle_params (admin_scripts.tests.ManageTestserver)", "test_importable_name (admin_scripts.tests.StartApp)", "test_importable_target_name (admin_scripts.tests.StartApp)", "startapp validates that app name is a valid Python identifier.", "test_invalid_target_name (admin_scripts.tests.StartApp)", "test_overlaying_app (admin_scripts.tests.StartApp)", "test_custom_project_destination_missing (admin_scripts.tests.StartProject)", "Make sure the startproject management command is able to use a different project template", "Make sure template context variables are rendered with proper values", "Make sure the startproject management command is able to use a different project template from a tarball", "test_custom_project_template_from_tarball_by_url (admin_scripts.tests.StartProject)", "Startproject can use a project template from a tarball and create it in a specified location", "test_custom_project_template_with_non_ascii_templates (admin_scripts.tests.StartProject)", "Make sure the startproject management command is able to render custom files", "test_importable_project_name (admin_scripts.tests.StartProject)", "Make sure the startproject management command validates a project name", "Make sure template context variables are not html escaped", "Startproject management command handles project template tar/zip balls from non-canonical urls", "Make sure the startproject management command creates a project", "Make sure the startproject management command creates a project in a specific directory", "Ticket 17475: Template dir passed has a trailing path separator", "Make sure passing the wrong kinds of arguments outputs an error and prints usage"]}
{"instance_id": "django__django-13660", "tests_passing_in_original_repo": ["test_command_option (shell.tests.ShellCommandTestCase)", "test_shell_with_bpython_not_installed (shell.tests.ShellCommandTestCase)", "test_shell_with_ipython_not_installed (shell.tests.ShellCommandTestCase)", "test_stdin_read (shell.tests.ShellCommandTestCase)"]}
{"instance_id": "django__django-13710", "tests_passing_in_original_repo": ["Admin inline should invoke local callable when its name is listed in readonly_fields", "can_delete should be passed to inlineformset factory.", "An object can be created with inlines when it inherits another class.", "test_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline)", "A model form with a form field specified (TitleForm.title1) should have", "SomeChildModelForm.__init__() overrides the label of a form field.", "test_custom_get_extra_form (admin_inlines.tests.TestInline)", "test_custom_min_num (admin_inlines.tests.TestInline)", "The \"View on Site\" link is correct for models with a custom primary key", "The inlines' model field help texts are displayed when using both the", "test_inline_editable_pk (admin_inlines.tests.TestInline)", "#18263 -- Make sure hidden fields don't get a column in tabular inlines", "test_inline_nonauto_noneditable_inherited_pk (admin_inlines.tests.TestInline)", "test_inline_nonauto_noneditable_pk (admin_inlines.tests.TestInline)", "test_inline_primary (admin_inlines.tests.TestInline)", "test_inlines_plural_heading_foreign_key (admin_inlines.tests.TestInline)", "Inlines `show_change_link` for registered models when enabled.", "Inlines `show_change_link` disabled for unregistered models.", "test_inlines_singular_heading_one_to_one (admin_inlines.tests.TestInline)", "The \"View on Site\" link is correct for locales that use thousand", "Autogenerated many-to-many inlines are displayed correctly (#13407)", "min_num and extra determine number of forms.", "Admin inline `readonly_field` shouldn't invoke parent ModelAdmin callable", "test_non_editable_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline)", "Multiple inlines with related_name='+' have correct form prefixes.", "Inlines without change permission shows field inputs on add form.", "Bug #13174.", "test_stacked_inline_edit_form_contains_has_original_class (admin_inlines.tests.TestInline)", "Field names are included in the context to output a field-specific", "Inlines `show_change_link` disabled by default.", "Tabular inlines use ModelForm.Meta.help_texts and labels for read-only", "non_field_errors are displayed correctly, including the correct value", "Regression for #9362", "test_all_inline_media (admin_inlines.tests.TestInlineMedia)", "test_inline_media_only_base (admin_inlines.tests.TestInlineMedia)", "test_inline_media_only_inline (admin_inlines.tests.TestInlineMedia)", "test_inline_add_fk_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_fk_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_m2m_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_add_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_add_change_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_all_perms (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_change_del_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_change_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_fk_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_change_perm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_noperm (admin_inlines.tests.TestInlinePermissions)", "test_inline_change_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions)", "test_deleting_inline_with_protected_delete_does_not_validate (admin_inlines.tests.TestInlineProtectedOnDelete)", "test_add_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_extra_inlines_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_get_to_change_url_is_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_inline_delete_buttons_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_inlines_are_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_main_model_is_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_post_to_change_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_submit_line_shows_only_close_button (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)", "test_both_verbose_names_inline (admin_inlines.tests.TestVerboseNameInlineForms)", "test_verbose_name_plural_inline (admin_inlines.tests.TestVerboseNameInlineForms)"]}
{"instance_id": "django__django-13757", "tests_passing_in_original_repo": ["test_custom_encoder_decoder (model_fields.test_jsonfield.JSONFieldTests)", "test_db_check_constraints (model_fields.test_jsonfield.JSONFieldTests)", "test_invalid_value (model_fields.test_jsonfield.JSONFieldTests)", "test_contained_by_unsupported (model_fields.test_jsonfield.TestQuerying)", "test_contains_unsupported (model_fields.test_jsonfield.TestQuerying)", "test_deep_lookup_array (model_fields.test_jsonfield.TestQuerying)", "test_deep_lookup_mixed (model_fields.test_jsonfield.TestQuerying)", "test_deep_lookup_objs (model_fields.test_jsonfield.TestQuerying)", "test_deep_lookup_transform (model_fields.test_jsonfield.TestQuerying)", "test_deep_values (model_fields.test_jsonfield.TestQuerying)", "test_exact (model_fields.test_jsonfield.TestQuerying)", "test_exact_complex (model_fields.test_jsonfield.TestQuerying)", "test_expression_wrapper_key_transform (model_fields.test_jsonfield.TestQuerying)", "test_has_any_keys (model_fields.test_jsonfield.TestQuerying)", "test_has_key (model_fields.test_jsonfield.TestQuerying)", "test_has_key_deep (model_fields.test_jsonfield.TestQuerying)", "test_has_key_list (model_fields.test_jsonfield.TestQuerying)", "test_has_key_null_value (model_fields.test_jsonfield.TestQuerying)", "test_has_keys (model_fields.test_jsonfield.TestQuerying)", "test_isnull (model_fields.test_jsonfield.TestQuerying)", "test_isnull_key (model_fields.test_jsonfield.TestQuerying)", "test_isnull_key_or_none (model_fields.test_jsonfield.TestQuerying)", "test_join_key_transform_annotation_expression (model_fields.test_jsonfield.TestQuerying)", "test_key_endswith (model_fields.test_jsonfield.TestQuerying)", "test_key_escape (model_fields.test_jsonfield.TestQuerying)", "test_key_icontains (model_fields.test_jsonfield.TestQuerying)", "test_key_iendswith (model_fields.test_jsonfield.TestQuerying)", "test_key_iexact (model_fields.test_jsonfield.TestQuerying)", "test_key_in (model_fields.test_jsonfield.TestQuerying)", "test_key_iregex (model_fields.test_jsonfield.TestQuerying)", "test_key_istartswith (model_fields.test_jsonfield.TestQuerying)", "test_key_quoted_string (model_fields.test_jsonfield.TestQuerying)", "test_key_regex (model_fields.test_jsonfield.TestQuerying)", "test_key_sql_injection_escape (model_fields.test_jsonfield.TestQuerying)", "test_key_startswith (model_fields.test_jsonfield.TestQuerying)", "test_key_transform_annotation_expression (model_fields.test_jsonfield.TestQuerying)", "test_key_transform_expression (model_fields.test_jsonfield.TestQuerying)", "test_key_transform_raw_expression (model_fields.test_jsonfield.TestQuerying)", "test_key_values (model_fields.test_jsonfield.TestQuerying)", "test_lookup_exclude (model_fields.test_jsonfield.TestQuerying)", "test_lookup_exclude_nonexistent_key (model_fields.test_jsonfield.TestQuerying)", "test_lookups_with_key_transform (model_fields.test_jsonfield.TestQuerying)", "test_nested_key_transform_annotation_expression (model_fields.test_jsonfield.TestQuerying)", "test_nested_key_transform_expression (model_fields.test_jsonfield.TestQuerying)", "test_nested_key_transform_on_subquery (model_fields.test_jsonfield.TestQuerying)", "test_nested_key_transform_raw_expression (model_fields.test_jsonfield.TestQuerying)", "test_none_key (model_fields.test_jsonfield.TestQuerying)", "test_none_key_and_exact_lookup (model_fields.test_jsonfield.TestQuerying)", "test_none_key_exclude (model_fields.test_jsonfield.TestQuerying)", "test_obj_subquery_lookup (model_fields.test_jsonfield.TestQuerying)", "test_order_grouping_custom_decoder (model_fields.test_jsonfield.TestQuerying)", "test_ordering_by_transform (model_fields.test_jsonfield.TestQuerying)", "test_ordering_grouping_by_count (model_fields.test_jsonfield.TestQuerying)", "test_ordering_grouping_by_key_transform (model_fields.test_jsonfield.TestQuerying)", "test_shallow_list_lookup (model_fields.test_jsonfield.TestQuerying)", "test_shallow_lookup_obj_target (model_fields.test_jsonfield.TestQuerying)", "test_shallow_obj_lookup (model_fields.test_jsonfield.TestQuerying)", "test_usage_in_subquery (model_fields.test_jsonfield.TestQuerying)", "test_dict (model_fields.test_jsonfield.TestSaveLoad)", "test_json_null_different_from_sql_null (model_fields.test_jsonfield.TestSaveLoad)", "test_list (model_fields.test_jsonfield.TestSaveLoad)", "test_null (model_fields.test_jsonfield.TestSaveLoad)", "test_primitives (model_fields.test_jsonfield.TestSaveLoad)", "test_realistic_object (model_fields.test_jsonfield.TestSaveLoad)", "test_formfield (model_fields.test_jsonfield.TestFormField)", "test_formfield_custom_encoder_decoder (model_fields.test_jsonfield.TestFormField)", "test_deconstruct (model_fields.test_jsonfield.TestMethods)", "test_deconstruct_custom_encoder_decoder (model_fields.test_jsonfield.TestMethods)", "test_get_transforms (model_fields.test_jsonfield.TestMethods)", "test_key_transform_text_lookup_mixin_non_key_transform (model_fields.test_jsonfield.TestMethods)", "test_dumping (model_fields.test_jsonfield.TestSerialization)", "test_loading (model_fields.test_jsonfield.TestSerialization)", "test_xml_serialization (model_fields.test_jsonfield.TestSerialization)", "test_custom_encoder (model_fields.test_jsonfield.TestValidation)", "test_invalid_decoder (model_fields.test_jsonfield.TestValidation)", "test_invalid_encoder (model_fields.test_jsonfield.TestValidation)", "test_validation_error (model_fields.test_jsonfield.TestValidation)"]}
{"instance_id": "django__django-13768", "tests_passing_in_original_repo": ["test_cached_garbaged_collected (dispatch.tests.DispatcherTests)", "test_cannot_connect_no_kwargs (dispatch.tests.DispatcherTests)", "test_cannot_connect_non_callable (dispatch.tests.DispatcherTests)", "test_disconnection (dispatch.tests.DispatcherTests)", "test_garbage_collected (dispatch.tests.DispatcherTests)", "test_has_listeners (dispatch.tests.DispatcherTests)", "test_multiple_registration (dispatch.tests.DispatcherTests)", "test_send (dispatch.tests.DispatcherTests)", "test_send_connected_no_sender (dispatch.tests.DispatcherTests)", "test_send_different_no_sender (dispatch.tests.DispatcherTests)", "test_send_no_receivers (dispatch.tests.DispatcherTests)", "test_send_robust_fail (dispatch.tests.DispatcherTests)", "test_send_robust_ignored_sender (dispatch.tests.DispatcherTests)", "test_send_robust_no_receivers (dispatch.tests.DispatcherTests)", "test_send_robust_success (dispatch.tests.DispatcherTests)", "test_uid_registration (dispatch.tests.DispatcherTests)", "test_values_returned_by_disconnection (dispatch.tests.DispatcherTests)", "test_receiver_signal_list (dispatch.tests.ReceiverTestCase)", "test_receiver_single_signal (dispatch.tests.ReceiverTestCase)"]}
{"instance_id": "django__django-13925", "tests_passing_in_original_repo": ["test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)", "test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)", "test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)", "test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)", "test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)", "test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)", "test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)", "test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)", "test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)", "test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)", "test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)", "test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)", "test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)", "test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)", "test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)", "test_app_default_auto_field (check_framework.test_model_checks.ModelDefaultAutoFieldTests)", "test_auto_created_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)", "test_default_auto_field_setting (check_framework.test_model_checks.ModelDefaultAutoFieldTests)", "test_explicit_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)"]}
{"instance_id": "django__django-13933", "tests_passing_in_original_repo": ["test_modelchoicefield (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase)", "test_booleanfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_charfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_choicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_datefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_datetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_decimalfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_emailfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_error_messages_escaping (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_filefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_floatfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_generic_ipaddressfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_integerfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_multiplechoicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_regexfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_splitdatetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_subclassing_errorlist (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_timefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)", "test_urlfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)"]}
{"instance_id": "django__django-13964", "tests_passing_in_original_repo": ["test_add (many_to_one.tests.ManyToOneTests)", "test_add_after_prefetch (many_to_one.tests.ManyToOneTests)", "test_add_remove_set_by_pk_raises (many_to_one.tests.ManyToOneTests)", "test_add_then_remove_after_prefetch (many_to_one.tests.ManyToOneTests)", "test_assign (many_to_one.tests.ManyToOneTests)", "test_assign_fk_id_none (many_to_one.tests.ManyToOneTests)", "test_assign_fk_id_value (many_to_one.tests.ManyToOneTests)", "test_cached_foreign_key_with_to_field_not_cleared_by_save (many_to_one.tests.ManyToOneTests)", "Model.save() invalidates stale ForeignKey relations after a primary key", "test_clear_after_prefetch (many_to_one.tests.ManyToOneTests)", "test_create (many_to_one.tests.ManyToOneTests)", "test_create_relation_with_gettext_lazy (many_to_one.tests.ManyToOneTests)", "test_deepcopy_and_circular_references (many_to_one.tests.ManyToOneTests)", "test_delete (many_to_one.tests.ManyToOneTests)", "test_explicit_fk (many_to_one.tests.ManyToOneTests)", "test_fk_assignment_and_related_object_cache (many_to_one.tests.ManyToOneTests)", "test_fk_instantiation_outside_model (many_to_one.tests.ManyToOneTests)", "test_fk_to_bigautofield (many_to_one.tests.ManyToOneTests)", "test_fk_to_smallautofield (many_to_one.tests.ManyToOneTests)", "test_get (many_to_one.tests.ManyToOneTests)", "test_hasattr_related_object (many_to_one.tests.ManyToOneTests)", "test_manager_class_caching (many_to_one.tests.ManyToOneTests)", "test_multiple_foreignkeys (many_to_one.tests.ManyToOneTests)", "test_related_object (many_to_one.tests.ManyToOneTests)", "test_relation_unsaved (many_to_one.tests.ManyToOneTests)", "test_remove_after_prefetch (many_to_one.tests.ManyToOneTests)", "test_reverse_assignment_deprecation (many_to_one.tests.ManyToOneTests)", "test_reverse_foreign_key_instance_to_field_caching (many_to_one.tests.ManyToOneTests)", "test_reverse_selects (many_to_one.tests.ManyToOneTests)", "test_save_nullable_fk_after_parent (many_to_one.tests.ManyToOneTests)", "test_save_nullable_fk_after_parent_with_to_field (many_to_one.tests.ManyToOneTests)", "test_select_related (many_to_one.tests.ManyToOneTests)", "test_selects (many_to_one.tests.ManyToOneTests)", "test_set (many_to_one.tests.ManyToOneTests)", "test_set_after_prefetch (many_to_one.tests.ManyToOneTests)", "test_values_list_exception (many_to_one.tests.ManyToOneTests)"]}
{"instance_id": "django__django-14016", "tests_passing_in_original_repo": ["test_combine_and_both_empty (queries.test_q.QTests)", "test_combine_and_empty (queries.test_q.QTests)", "test_combine_not_q_object (queries.test_q.QTests)", "test_combine_or_both_empty (queries.test_q.QTests)", "test_combine_or_empty (queries.test_q.QTests)", "test_deconstruct (queries.test_q.QTests)", "test_deconstruct_and (queries.test_q.QTests)", "test_deconstruct_multiple_kwargs (queries.test_q.QTests)", "test_deconstruct_negated (queries.test_q.QTests)", "test_deconstruct_nested (queries.test_q.QTests)", "test_deconstruct_or (queries.test_q.QTests)", "test_reconstruct (queries.test_q.QTests)", "test_reconstruct_and (queries.test_q.QTests)", "test_reconstruct_negated (queries.test_q.QTests)", "test_reconstruct_or (queries.test_q.QTests)"]}
{"instance_id": "django__django-14017", "tests_passing_in_original_repo": ["test_aggregate_rawsql_annotation (expressions.tests.BasicExpressionsTests)", "test_aggregate_subquery_annotation (expressions.tests.BasicExpressionsTests)", "test_annotate_values_aggregate (expressions.tests.BasicExpressionsTests)", "test_annotate_values_count (expressions.tests.BasicExpressionsTests)", "test_annotate_values_filter (expressions.tests.BasicExpressionsTests)", "test_annotation_with_nested_outerref (expressions.tests.BasicExpressionsTests)", "test_annotation_with_outerref (expressions.tests.BasicExpressionsTests)", "test_annotations_within_subquery (expressions.tests.BasicExpressionsTests)", "test_arithmetic (expressions.tests.BasicExpressionsTests)", "test_boolean_expression_combined (expressions.tests.BasicExpressionsTests)", "test_case_in_filter_if_boolean_output_field (expressions.tests.BasicExpressionsTests)", "test_exist_single_field_output_field (expressions.tests.BasicExpressionsTests)", "test_exists_in_filter (expressions.tests.BasicExpressionsTests)", "test_explicit_output_field (expressions.tests.BasicExpressionsTests)", "test_filter_inter_attribute (expressions.tests.BasicExpressionsTests)", "test_filter_with_join (expressions.tests.BasicExpressionsTests)", "test_filtering_on_annotate_that_uses_q (expressions.tests.BasicExpressionsTests)", "test_filtering_on_q_that_is_boolean (expressions.tests.BasicExpressionsTests)", "test_filtering_on_rawsql_that_is_boolean (expressions.tests.BasicExpressionsTests)", "test_in_subquery (expressions.tests.BasicExpressionsTests)", "test_incorrect_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_incorrect_joined_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_nested_outerref_with_function (expressions.tests.BasicExpressionsTests)", "test_nested_subquery (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_join_outer_ref (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_2 (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_with_autofield (expressions.tests.BasicExpressionsTests)", "test_new_object_create (expressions.tests.BasicExpressionsTests)", "test_new_object_save (expressions.tests.BasicExpressionsTests)", "test_object_create_with_aggregate (expressions.tests.BasicExpressionsTests)", "test_object_update (expressions.tests.BasicExpressionsTests)", "test_object_update_fk (expressions.tests.BasicExpressionsTests)", "test_object_update_unsaved_objects (expressions.tests.BasicExpressionsTests)", "test_order_by_exists (expressions.tests.BasicExpressionsTests)", "test_order_by_multiline_sql (expressions.tests.BasicExpressionsTests)", "test_order_of_operations (expressions.tests.BasicExpressionsTests)", "test_outerref (expressions.tests.BasicExpressionsTests)", "test_outerref_mixed_case_table_name (expressions.tests.BasicExpressionsTests)", "test_outerref_with_operator (expressions.tests.BasicExpressionsTests)", "test_parenthesis_priority (expressions.tests.BasicExpressionsTests)", "test_pickle_expression (expressions.tests.BasicExpressionsTests)", "test_subquery (expressions.tests.BasicExpressionsTests)", "test_subquery_eq (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_aggregate (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_lazy (expressions.tests.BasicExpressionsTests)", "test_subquery_group_by_outerref_in_filter (expressions.tests.BasicExpressionsTests)", "test_subquery_in_filter (expressions.tests.BasicExpressionsTests)", "test_subquery_references_joined_table_twice (expressions.tests.BasicExpressionsTests)", "test_ticket_11722_iexact_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_16731_startswith_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_chained_filters (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_join_reuse (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering_2 (expressions.tests.BasicExpressionsTests)", "test_update (expressions.tests.BasicExpressionsTests)", "test_update_inherited_field_value (expressions.tests.BasicExpressionsTests)", "test_update_with_fk (expressions.tests.BasicExpressionsTests)", "test_update_with_none (expressions.tests.BasicExpressionsTests)", "test_uuid_pk_subquery (expressions.tests.BasicExpressionsTests)", "test_optimizations (expressions.tests.ExistsTests)", "test_lefthand_addition (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_and (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_left_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_or (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_right_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor_null (expressions.tests.ExpressionOperatorTests)", "test_lefthand_division (expressions.tests.ExpressionOperatorTests)", "test_lefthand_modulo (expressions.tests.ExpressionOperatorTests)", "test_lefthand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_lefthand_power (expressions.tests.ExpressionOperatorTests)", "test_lefthand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_lefthand_transformed_field_bitwise_or (expressions.tests.ExpressionOperatorTests)", "test_right_hand_addition (expressions.tests.ExpressionOperatorTests)", "test_right_hand_division (expressions.tests.ExpressionOperatorTests)", "test_right_hand_modulo (expressions.tests.ExpressionOperatorTests)", "test_right_hand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_right_hand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_righthand_power (expressions.tests.ExpressionOperatorTests)", "Complex expressions of different connection types are possible.", "We can fill a value in all objects with an other value of the", "We can filter for objects, where a value is not equals the value", "We can increment a value of all objects in a query set.", "test_F_reuse (expressions.tests.ExpressionsTests)", "Special characters (e.g. %, _ and \\) stored in database are", "test_date_case_subtraction (expressions.tests.FTimeDeltaTests)", "test_date_comparison (expressions.tests.FTimeDeltaTests)", "test_date_minus_duration (expressions.tests.FTimeDeltaTests)", "test_date_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_date_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction_microseconds (expressions.tests.FTimeDeltaTests)", "test_delta_add (expressions.tests.FTimeDeltaTests)", "test_delta_subtract (expressions.tests.FTimeDeltaTests)", "test_delta_update (expressions.tests.FTimeDeltaTests)", "test_duration_expressions (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime_microseconds (expressions.tests.FTimeDeltaTests)", "test_durationfield_add (expressions.tests.FTimeDeltaTests)", "test_exclude (expressions.tests.FTimeDeltaTests)", "test_invalid_operator (expressions.tests.FTimeDeltaTests)", "test_mixed_comparisons2 (expressions.tests.FTimeDeltaTests)", "test_multiple_query_compilation (expressions.tests.FTimeDeltaTests)", "test_negative_timedelta_update (expressions.tests.FTimeDeltaTests)", "test_query_clone (expressions.tests.FTimeDeltaTests)", "test_time_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_time_subtraction (expressions.tests.FTimeDeltaTests)", "test_month_aggregation (expressions.tests.FieldTransformTests)", "test_multiple_transforms_in_values (expressions.tests.FieldTransformTests)", "test_transform_in_values (expressions.tests.FieldTransformTests)", "This tests that SQL injection isn't possible using compilation of", "test_expressions_in_lookups_join_choice (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_datetimes (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_range_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_range_lookup_namedtuple (expressions.tests.IterableLookupInnerExpressionsTests)", "test_compile_unresolved (expressions.tests.ValueTests)", "test_deconstruct (expressions.tests.ValueTests)", "test_deconstruct_output_field (expressions.tests.ValueTests)", "test_equal (expressions.tests.ValueTests)", "test_equal_output_field (expressions.tests.ValueTests)", "test_hash (expressions.tests.ValueTests)", "test_raise_empty_expressionlist (expressions.tests.ValueTests)", "test_resolve_output_field (expressions.tests.ValueTests)", "test_resolve_output_field_failure (expressions.tests.ValueTests)", "test_update_TimeField_using_Value (expressions.tests.ValueTests)", "test_update_UUIDField_using_Value (expressions.tests.ValueTests)", "test_and (expressions.tests.CombinableTests)", "test_negation (expressions.tests.CombinableTests)", "test_or (expressions.tests.CombinableTests)", "test_reversed_and (expressions.tests.CombinableTests)", "test_reversed_or (expressions.tests.CombinableTests)", "test_resolve_output_field (expressions.tests.CombinedExpressionTests)", "test_empty_group_by (expressions.tests.ExpressionWrapperTests)", "test_non_empty_group_by (expressions.tests.ExpressionWrapperTests)", "test_deconstruct (expressions.tests.FTests)", "test_deepcopy (expressions.tests.FTests)", "test_equal (expressions.tests.FTests)", "test_hash (expressions.tests.FTests)", "test_not_equal_Value (expressions.tests.FTests)", "test_aggregates (expressions.tests.ReprTests)", "test_distinct_aggregates (expressions.tests.ReprTests)", "test_expressions (expressions.tests.ReprTests)", "test_filtered_aggregates (expressions.tests.ReprTests)", "test_functions (expressions.tests.ReprTests)", "test_equal (expressions.tests.SimpleExpressionTests)", "test_hash (expressions.tests.SimpleExpressionTests)"]}
{"instance_id": "django__django-14155", "tests_passing_in_original_repo": ["test_build_absolute_uri (urlpatterns_reverse.tests.ReverseLazyTest)", "test_inserting_reverse_lazy_into_string (urlpatterns_reverse.tests.ReverseLazyTest)", "test_redirect_with_lazy_reverse (urlpatterns_reverse.tests.ReverseLazyTest)", "test_user_permission_with_lazy_reverse (urlpatterns_reverse.tests.ReverseLazyTest)", "If the urls.py doesn't specify handlers, the defaults are used", "test_invalid_regex (urlpatterns_reverse.tests.ErroneousViewTests)", "test_noncallable_view (urlpatterns_reverse.tests.ErroneousViewTests)", "test_callable_handlers (urlpatterns_reverse.tests.ErrorHandlerResolutionTests)", "test_named_handlers (urlpatterns_reverse.tests.ErrorHandlerResolutionTests)", "test_include_2_tuple (urlpatterns_reverse.tests.IncludeTests)", "test_include_2_tuple_namespace (urlpatterns_reverse.tests.IncludeTests)", "test_include_3_tuple (urlpatterns_reverse.tests.IncludeTests)", "test_include_3_tuple_namespace (urlpatterns_reverse.tests.IncludeTests)", "test_include_4_tuple (urlpatterns_reverse.tests.IncludeTests)", "test_include_app_name (urlpatterns_reverse.tests.IncludeTests)", "test_include_app_name_namespace (urlpatterns_reverse.tests.IncludeTests)", "test_include_namespace (urlpatterns_reverse.tests.IncludeTests)", "test_include_urls (urlpatterns_reverse.tests.IncludeTests)", "test_invalid_resolve (urlpatterns_reverse.tests.LookaheadTests)", "test_invalid_reverse (urlpatterns_reverse.tests.LookaheadTests)", "test_valid_resolve (urlpatterns_reverse.tests.LookaheadTests)", "test_valid_reverse (urlpatterns_reverse.tests.LookaheadTests)", "Names deployed via dynamic URL objects that require namespaces can't", "A default application namespace can be used for lookup.", "A default application namespace is sensitive to the current app.", "An application namespace without a default is sensitive to the current", "Namespaces can be applied to include()'d urlpatterns that set an", "Dynamic URL objects can return a (pattern, app_name) 2-tuple, and", "Namespace defaults to app_name when including a (pattern, app_name)", "current_app shouldn't be used unless it matches the whole path.", "Namespaces can be installed anywhere in the URL pattern tree.", "Namespaces can be embedded.", "Dynamic URL objects can be found using a namespace.", "Namespaces can be applied to include()'d urlpatterns.", "Using include() with namespaces when there is a regex variable in front", "Namespace prefixes can capture variables.", "A nested current_app should be split in individual namespaces (#24904).", "Namespaces can be nested.", "Nonexistent namespaces raise errors.", "Normal lookups work as expected.", "Normal lookups work on names included from other patterns.", "test_special_chars_namespace (urlpatterns_reverse.tests.NamespaceTests)", "test_no_handler_exception (urlpatterns_reverse.tests.NoRootUrlConfTests)", "URLResolver should raise an exception when no urlpatterns exist.", "Test reversing an URL from the *overridden* URLconf from inside", "Test reversing an URL from the *default* URLconf from inside", "test_urlconf (urlpatterns_reverse.tests.RequestURLconfTests)", "The URLconf is reset after each request.", "test_urlconf_overridden (urlpatterns_reverse.tests.RequestURLconfTests)", "Overriding request.urlconf with None will fall back to the default", "test_repr (urlpatterns_reverse.tests.ResolverMatchTests)", "test_resolver_match_on_request (urlpatterns_reverse.tests.ResolverMatchTests)", "test_resolver_match_on_request_before_resolution (urlpatterns_reverse.tests.ResolverMatchTests)", "test_urlpattern_resolve (urlpatterns_reverse.tests.ResolverMatchTests)", "The list of URLs that come back from a Resolver404 exception contains", "test_namespaced_view_detail (urlpatterns_reverse.tests.ResolverTests)", "A Resolver404 is raised if resolving doesn't meet the basic", "URLResolver._populate() can be called concurrently, but not more", "Test repr of URLResolver, especially when urlconf_name is a list", "test_resolver_reverse (urlpatterns_reverse.tests.ResolverTests)", "URL pattern name arguments don't need to be unique. The last registered", "Verifies lazy object returned by reverse_lazy is coerced to", "test_view_detail_as_method (urlpatterns_reverse.tests.ResolverTests)", "test_lazy_in_settings (urlpatterns_reverse.tests.ReverseLazySettingsTest)", "test_no_illegal_imports (urlpatterns_reverse.tests.ReverseShortcutTests)", "test_redirect_to_object (urlpatterns_reverse.tests.ReverseShortcutTests)", "test_redirect_to_url (urlpatterns_reverse.tests.ReverseShortcutTests)", "test_redirect_to_view_name (urlpatterns_reverse.tests.ReverseShortcutTests)", "test_redirect_view_object (urlpatterns_reverse.tests.ReverseShortcutTests)", "test_reverse_by_path_nested (urlpatterns_reverse.tests.ReverseShortcutTests)", "test_illegal_args_message (urlpatterns_reverse.tests.URLPatternReverse)", "test_illegal_kwargs_message (urlpatterns_reverse.tests.URLPatternReverse)", "test_mixing_args_and_kwargs (urlpatterns_reverse.tests.URLPatternReverse)", "test_no_args_message (urlpatterns_reverse.tests.URLPatternReverse)", "test_non_urlsafe_prefix_with_args (urlpatterns_reverse.tests.URLPatternReverse)", "test_patterns_reported (urlpatterns_reverse.tests.URLPatternReverse)", "test_prefix_braces (urlpatterns_reverse.tests.URLPatternReverse)", "test_prefix_format_char (urlpatterns_reverse.tests.URLPatternReverse)", "test_prefix_parenthesis (urlpatterns_reverse.tests.URLPatternReverse)", "test_reverse_none (urlpatterns_reverse.tests.URLPatternReverse)", "test_script_name_escaping (urlpatterns_reverse.tests.URLPatternReverse)", "test_urlpattern_reverse (urlpatterns_reverse.tests.URLPatternReverse)", "test_view_not_found_message (urlpatterns_reverse.tests.URLPatternReverse)", "test_attributeerror_not_hidden (urlpatterns_reverse.tests.ViewLoadingTests)", "test_module_does_not_exist (urlpatterns_reverse.tests.ViewLoadingTests)", "test_non_string_value (urlpatterns_reverse.tests.ViewLoadingTests)", "test_not_callable (urlpatterns_reverse.tests.ViewLoadingTests)", "test_parent_module_does_not_exist (urlpatterns_reverse.tests.ViewLoadingTests)", "test_string_without_dot (urlpatterns_reverse.tests.ViewLoadingTests)", "test_view_does_not_exist (urlpatterns_reverse.tests.ViewLoadingTests)", "test_view_loading (urlpatterns_reverse.tests.ViewLoadingTests)"]}
{"instance_id": "django__django-14238", "tests_passing_in_original_repo": ["Backend specific ranges can be saved without corruption.", "Backend specific ranges are enforced at the model validation level", "test_coercing (model_fields.test_autofield.AutoFieldTests)", "Values within the documented safe range pass validation, and can be", "test_invalid_value (model_fields.test_autofield.AutoFieldTests)", "If there are stricter validators than the ones from the database", "test_rel_db_type (model_fields.test_autofield.AutoFieldTests)", "test_types (model_fields.test_autofield.AutoFieldTests)", "test_coercing (model_fields.test_autofield.BigAutoFieldTests)", "test_invalid_value (model_fields.test_autofield.BigAutoFieldTests)", "test_rel_db_type (model_fields.test_autofield.BigAutoFieldTests)", "test_types (model_fields.test_autofield.BigAutoFieldTests)", "test_coercing (model_fields.test_integerfield.BigIntegerFieldTests)", "test_invalid_value (model_fields.test_integerfield.BigIntegerFieldTests)", "test_rel_db_type (model_fields.test_integerfield.BigIntegerFieldTests)", "test_types (model_fields.test_integerfield.BigIntegerFieldTests)", "test_coercing (model_fields.test_integerfield.IntegerFieldTests)", "test_invalid_value (model_fields.test_integerfield.IntegerFieldTests)", "test_rel_db_type (model_fields.test_integerfield.IntegerFieldTests)", "test_types (model_fields.test_integerfield.IntegerFieldTests)", "test_coercing (model_fields.test_autofield.SmallAutoFieldTests)", "test_invalid_value (model_fields.test_autofield.SmallAutoFieldTests)", "test_rel_db_type (model_fields.test_autofield.SmallAutoFieldTests)", "test_types (model_fields.test_autofield.SmallAutoFieldTests)", "test_coercing (model_fields.test_integerfield.SmallIntegerFieldTests)", "test_invalid_value (model_fields.test_integerfield.SmallIntegerFieldTests)", "test_rel_db_type (model_fields.test_integerfield.SmallIntegerFieldTests)", "test_types (model_fields.test_integerfield.SmallIntegerFieldTests)", "test_isinstance_of_autofield (model_fields.test_autofield.AutoFieldInheritanceTests)", "test_issubclass_of_autofield (model_fields.test_autofield.AutoFieldInheritanceTests)", "test_app_default_auto_field (model_options.test_default_pk.TestDefaultPK)", "test_app_default_auto_field_non_auto (model_options.test_default_pk.TestDefaultPK)", "test_app_default_auto_field_none (model_options.test_default_pk.TestDefaultPK)", "test_app_default_auto_field_nonexistent (model_options.test_default_pk.TestDefaultPK)", "test_default_auto_field_setting (model_options.test_default_pk.TestDefaultPK)", "test_default_auto_field_setting_non_auto (model_options.test_default_pk.TestDefaultPK)", "test_default_auto_field_setting_none (model_options.test_default_pk.TestDefaultPK)", "test_default_auto_field_setting_nonexistent (model_options.test_default_pk.TestDefaultPK)", "test_m2m_app_default_auto_field (model_options.test_default_pk.TestDefaultPK)", "test_m2m_default_auto_field_setting (model_options.test_default_pk.TestDefaultPK)"]}
{"instance_id": "django__django-14382", "tests_passing_in_original_repo": ["test_migration_warning_multiple_apps (admin_scripts.tests.ManageRunserverMigrationWarning)", "test_migration_warning_one_app (admin_scripts.tests.ManageRunserverMigrationWarning)", "Options passed before settings are correctly handled.", "Options are correctly handled when they are passed before and after", "Options passed after settings are correctly handled.", "Short options passed after settings are correctly handled.", "Short options passed before settings are correctly handled.", "User AppCommands can execute when a single app name is provided", "User AppCommands raise an error when multiple app names are provided", "User AppCommands raise an error when no app name is provided", "User AppCommands can execute when some of the provided app names are invalid", "User BaseCommands can execute when a label is provided", "User BaseCommands can execute when no labels are provided", "User BaseCommands can execute with options when a label is provided", "User BaseCommands can execute with multiple options when a label is provided", "User BaseCommands outputs command usage when wrong option is specified", "Test run_from_argv properly terminates even with custom execute() (#19665)", "test_color_style (admin_scripts.tests.CommandTypes)", "test_command_color (admin_scripts.tests.CommandTypes)", "--no-color prevent colorization of the output", "test_custom_stderr (admin_scripts.tests.CommandTypes)", "test_custom_stdout (admin_scripts.tests.CommandTypes)", "test_force_color_command_init (admin_scripts.tests.CommandTypes)", "test_force_color_execute (admin_scripts.tests.CommandTypes)", "help is handled as a special case", "--help is equivalent to help", "help --commands shows the list of all available commands", "-h is handled as a short form of --help", "User LabelCommands can execute when a label is provided", "User LabelCommands are executed multiple times if multiple labels are provided", "User LabelCommands raise an error if no label is provided", "test_no_color_force_color_mutually_exclusive_command_init (admin_scripts.tests.CommandTypes)", "test_no_color_force_color_mutually_exclusive_execute (admin_scripts.tests.CommandTypes)", "NoArg Commands can be executed", "NoArg Commands raise an error if an argument is provided", "A command called from the command line should close connections after", "Non-ASCII message of CommandError does not raise any", "--help can be used on a specific command", "version is handled as a special case", "--version is equivalent to version", "The all option also shows settings with the default value.", "Runs without error and emits settings diff.", "The --default option specifies an alternate settings module for", "test_dynamic_settings_configured (admin_scripts.tests.DiffSettings)", "test_settings_configured (admin_scripts.tests.DiffSettings)", "--output=unified emits settings diff in unified mode.", "--output=unified --all emits settings diff in unified mode and includes", "Apps listed first in INSTALLED_APPS have precedence.", "alternate: django-admin builtin commands fail with an error when no settings provided", "alternate: django-admin builtin commands fail if settings file (from environment) doesn't exist", "alternate: django-admin builtin commands fail if settings file (from argument) doesn't exist", "alternate: django-admin builtin commands succeed if settings are provided in the environment", "alternate: django-admin builtin commands succeed if settings are provided as argument", "alternate: django-admin can't execute user commands unless settings are provided", "alternate: django-admin can execute user commands if settings are provided in environment", "alternate: django-admin can execute user commands if settings are provided as argument", "default: django-admin builtin commands fail with an error when no settings provided", "default: django-admin builtin commands fail if settings file (from environment) doesn't exist", "default: django-admin builtin commands fail if settings file (from argument) doesn't exist", "default: django-admin builtin commands succeed if settings are provided in the environment", "default: django-admin builtin commands succeed if settings are provided as argument", "default: django-admin can't execute user commands if it isn't provided settings", "default: django-admin can execute user commands if settings are provided in environment", "default: django-admin can execute user commands if settings are provided as argument", "fulldefault: django-admin builtin commands fail with an error when no settings provided", "fulldefault: django-admin builtin commands fail if settings file (from environment) doesn't exist", "fulldefault: django-admin builtin commands fail if settings file (from argument) doesn't exist", "fulldefault: django-admin builtin commands succeed if the environment contains settings", "fulldefault: django-admin builtin commands succeed if a settings file is provided", "fulldefault: django-admin can't execute user commands unless settings are provided", "fulldefault: django-admin can execute user commands if settings are provided in environment", "fulldefault: django-admin can execute user commands if settings are provided as argument", "minimal: django-admin builtin commands fail with an error when no settings provided", "minimal: django-admin builtin commands fail if settings file (from environment) doesn't exist", "minimal: django-admin builtin commands fail if settings file (from argument) doesn't exist", "minimal: django-admin builtin commands fail if settings are provided in the environment", "minimal: django-admin builtin commands fail if settings are provided as argument", "minimal: django-admin can't execute user commands unless settings are provided", "minimal: django-admin can't execute user commands, even if settings are provided in environment", "minimal: django-admin can't execute user commands, even if settings are provided as argument", "no settings: django-admin builtin commands fail with an error when no settings provided", "no settings: django-admin builtin commands fail if settings file (from environment) doesn't exist", "no settings: django-admin builtin commands fail if settings file (from argument) doesn't exist", "Commands that don't require settings succeed if the settings file", "directory: django-admin builtin commands fail with an error when no settings provided", "directory: django-admin builtin commands fail if settings file (from environment) doesn't exist", "directory: django-admin builtin commands fail if settings file (from argument) doesn't exist", "directory: django-admin builtin commands succeed if settings are provided in the environment", "directory: django-admin builtin commands succeed if settings are provided as argument", "directory: django-admin can't execute user commands unless settings are provided", "directory: startapp creates the correct directory", "directory: startapp creates the correct directory with a custom template", "startapp creates the correct directory with Unicode characters.", "test_no_suggestions (admin_scripts.tests.DjangoAdminSuggestions)", "test_suggestions (admin_scripts.tests.DjangoAdminSuggestions)", "Regression for #20509", "Program name is computed from the execute_from_command_line()'s argv", "test_program_name_in_help (admin_scripts.tests.MainModule)", "alternate: manage.py builtin commands fail with an error when no default settings provided", "alternate: manage.py builtin commands fail if settings file (from environment) doesn't exist", "alternate: manage.py builtin commands fail if settings file (from argument) doesn't exist", "alternate: manage.py builtin commands work if settings are provided in the environment", "alternate: manage.py builtin commands work with settings provided as argument", "alternate: manage.py can't execute user commands without settings", "alternate: manage.py output syntax color can be deactivated with the `--no-color` option", "alternate: manage.py can execute user commands if settings are provided in environment", "alternate: manage.py can execute user commands if settings are provided as argument", "manage.py check does not raise errors when an app imports a base", "manage.py check reports an ImportError if an app's models.py", "manage.py check does not raise an ImportError validating a", "check reports an error on a nonexistent app in INSTALLED_APPS.", "All errors/warnings should be sorted by level and by message.", "When there are only warnings or less serious messages, then Django", "default: manage.py builtin commands succeed when default settings are appropriate", "default: manage.py builtin commands fail if settings file (from environment) doesn't exist", "default: manage.py builtin commands succeed if settings file (from argument) doesn't exist", "default: manage.py builtin commands succeed if settings are provided in the environment", "default: manage.py builtin commands succeed if settings are provided as argument", "default: manage.py can execute user commands when default settings are appropriate", "default: manage.py can execute user commands when settings are provided in environment", "default: manage.py can execute user commands when settings are provided as argument", "fulldefault: manage.py builtin commands succeed when default settings are appropriate", "fulldefault: manage.py builtin commands fail if settings file (from environment) doesn't exist", "fulldefault: manage.py builtin commands succeed if settings file (from argument) doesn't exist", "fulldefault: manage.py builtin commands succeed if settings are provided in the environment", "fulldefault: manage.py builtin commands succeed if settings are provided as argument", "fulldefault: manage.py can execute user commands when default settings are appropriate", "fulldefault: manage.py can execute user commands when settings are provided in environment", "fulldefault: manage.py can execute user commands when settings are provided as argument", "test_non_existent_command_output (admin_scripts.tests.ManageManuallyConfiguredSettings)", "minimal: manage.py builtin commands fail with an error when no settings provided", "minimal: manage.py builtin commands fail if settings file (from environment) doesn't exist", "minimal: manage.py builtin commands fail if settings file (from argument) doesn't exist", "minimal: manage.py builtin commands fail if settings are provided in the environment", "minimal: manage.py builtin commands fail if settings are provided as argument", "minimal: manage.py can't execute user commands without appropriate settings", "minimal: manage.py can't execute user commands, even if settings are provided in environment", "minimal: manage.py can't execute user commands, even if settings are provided as argument", "multiple: manage.py builtin commands fail with an error when no settings provided", "multiple: manage.py builtin commands fail if settings file (from environment) doesn't exist", "multiple: manage.py builtin commands fail if settings file (from argument) doesn't exist", "multiple: manage.py can execute builtin commands if settings are provided in the environment", "multiple: manage.py builtin commands succeed if settings are provided as argument", "multiple: manage.py can't execute user commands using default settings", "multiple: manage.py can execute user commands if settings are provided in environment", "multiple: manage.py can execute user commands if settings are provided as argument", "no settings: manage.py builtin commands fail with an error when no settings provided", "no settings: manage.py builtin commands fail if settings file (from environment) doesn't exist", "no settings: manage.py builtin commands fail if settings file (from argument) doesn't exist", "Ensure runserver.check_migrations doesn't choke on empty DATABASES.", "runserver.check_migrations() doesn't choke when a database is read-only.", "test_runner_addrport_ipv6 (admin_scripts.tests.ManageRunserver)", "test_runner_ambiguous (admin_scripts.tests.ManageRunserver)", "test_runner_custom_defaults (admin_scripts.tests.ManageRunserver)", "test_runner_custom_defaults_ipv6 (admin_scripts.tests.ManageRunserver)", "test_runner_hostname (admin_scripts.tests.ManageRunserver)", "test_runner_hostname_ipv6 (admin_scripts.tests.ManageRunserver)", "test_runserver_addrport (admin_scripts.tests.ManageRunserver)", "test_skip_checks (admin_scripts.tests.ManageRunserver)", "test_empty_allowed_hosts_error (admin_scripts.tests.ManageRunserverEmptyAllowedHosts)", "manage.py builtin commands does not swallow attribute error due to bad", "Test listing available commands output note when only core commands are", "import error: manage.py builtin commands shows useful diagnostic info", "test_key_error (admin_scripts.tests.ManageSettingsWithSettingsErrors)", "test_params_to_runserver (admin_scripts.tests.ManageTestserver)", "test_testserver_handle_params (admin_scripts.tests.ManageTestserver)", "startapp validates that app name doesn't clash with existing Python", "test_importable_target_name (admin_scripts.tests.StartApp)", "startapp validates that app name is a valid Python identifier.", "test_invalid_target_name (admin_scripts.tests.StartApp)", "test_overlaying_app (admin_scripts.tests.StartApp)", "test_template (admin_scripts.tests.StartApp)", "Make sure an exception is raised when the provided", "Make sure the startproject management command is able to use a different project template", "Make sure template context variables are rendered with proper values", "Make sure the startproject management command is able to use a different project template from a tarball", "The startproject management command is able to use a different project", "Startproject can use a project template from a tarball and create it in a specified location", "The startproject management command is able to render templates with", "Make sure the startproject management command is able to render custom files", "startproject validates that project name doesn't clash with existing", "Make sure the startproject management command validates a project name", "Make sure template context variables are not html escaped", "Startproject management command handles project template tar/zip balls from non-canonical urls", "Make sure the startproject management command creates a project", "Make sure the startproject management command creates a project in a specific directory", "Ticket 17475: Template dir passed has a trailing path separator", "Make sure passing the wrong kinds of arguments outputs an error and prints usage"]}
{"instance_id": "django__django-14411", "tests_passing_in_original_repo": ["test_html_autocomplete_attributes (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_missing_passwords (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_non_matching_passwords (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_one_password (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_success (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_custom_login_allowed_policy (auth_tests.test_forms.AuthenticationFormTest)", "test_get_invalid_login_error (auth_tests.test_forms.AuthenticationFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.AuthenticationFormTest)", "test_inactive_user (auth_tests.test_forms.AuthenticationFormTest)", "test_inactive_user_i18n (auth_tests.test_forms.AuthenticationFormTest)", "An invalid login doesn't leak the inactive status of a user.", "test_integer_username (auth_tests.test_forms.AuthenticationFormTest)", "test_invalid_username (auth_tests.test_forms.AuthenticationFormTest)", "test_login_failed (auth_tests.test_forms.AuthenticationFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.AuthenticationFormTest)", "test_success (auth_tests.test_forms.AuthenticationFormTest)", "test_unicode_username (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_autocapitalize_none (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_label (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_label_empty_string (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_label_not_set (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_max_length_defaults_to_254 (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_max_length_matches_user_model (auth_tests.test_forms.AuthenticationFormTest)", "test_field_order (auth_tests.test_forms.PasswordChangeFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.PasswordChangeFormTest)", "test_incorrect_password (auth_tests.test_forms.PasswordChangeFormTest)", "test_password_verification (auth_tests.test_forms.PasswordChangeFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.PasswordChangeFormTest)", "test_success (auth_tests.test_forms.PasswordChangeFormTest)", "test_cleaned_data (auth_tests.test_forms.PasswordResetFormTest)", "test_custom_email_constructor (auth_tests.test_forms.PasswordResetFormTest)", "test_custom_email_field (auth_tests.test_forms.PasswordResetFormTest)", "test_custom_email_subject (auth_tests.test_forms.PasswordResetFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.PasswordResetFormTest)", "Inactive user cannot receive password reset email.", "test_invalid_email (auth_tests.test_forms.PasswordResetFormTest)", "Test nonexistent email address. This should not fail because it would", "Preserve the case of the user name (before the @ in the email address)", "Test the PasswordResetForm.save() method with html_email_template_name", "Test the PasswordResetForm.save() method with no html_email_template_name", "test_unusable_password (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_domain_unicode_collision (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_domain_unicode_collision_nonexistent (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_unicode_collision (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_unicode_collision_nonexistent (auth_tests.test_forms.PasswordResetFormTest)", "test_help_text_translation (auth_tests.test_forms.SetPasswordFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.SetPasswordFormTest)", "test_password_verification (auth_tests.test_forms.SetPasswordFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.SetPasswordFormTest)", "test_success (auth_tests.test_forms.SetPasswordFormTest)", "test_validates_password (auth_tests.test_forms.SetPasswordFormTest)", "test_bug_14242 (auth_tests.test_forms.UserChangeFormTest)", "test_bug_17944_empty_password (auth_tests.test_forms.UserChangeFormTest)", "test_bug_17944_unknown_password_algorithm (auth_tests.test_forms.UserChangeFormTest)", "test_bug_17944_unmanageable_password (auth_tests.test_forms.UserChangeFormTest)", "The change form does not return the password value", "test_bug_19349_bound_password_field (auth_tests.test_forms.UserChangeFormTest)", "test_custom_form (auth_tests.test_forms.UserChangeFormTest)", "test_password_excluded (auth_tests.test_forms.UserChangeFormTest)", "test_unusable_password (auth_tests.test_forms.UserChangeFormTest)", "test_username_field_autocapitalize_none (auth_tests.test_forms.UserChangeFormTest)", "test_username_validity (auth_tests.test_forms.UserChangeFormTest)", "test_both_passwords (auth_tests.test_forms.UserCreationFormTest)", "test_custom_form (auth_tests.test_forms.UserCreationFormTest)", "test_custom_form_hidden_username_field (auth_tests.test_forms.UserCreationFormTest)", "test_custom_form_with_different_username_field (auth_tests.test_forms.UserCreationFormTest)", "To prevent almost identical usernames, visually identical but differing", "test_html_autocomplete_attributes (auth_tests.test_forms.UserCreationFormTest)", "test_invalid_data (auth_tests.test_forms.UserCreationFormTest)", "test_normalize_username (auth_tests.test_forms.UserCreationFormTest)", "test_password_help_text (auth_tests.test_forms.UserCreationFormTest)", "test_password_verification (auth_tests.test_forms.UserCreationFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.UserCreationFormTest)", "test_success (auth_tests.test_forms.UserCreationFormTest)", "test_unicode_username (auth_tests.test_forms.UserCreationFormTest)", "test_user_already_exists (auth_tests.test_forms.UserCreationFormTest)", "UserCreationForm password validation uses all of the form's data.", "test_username_field_autocapitalize_none (auth_tests.test_forms.UserCreationFormTest)", "test_validates_password (auth_tests.test_forms.UserCreationFormTest)", "test_bug_19349_render_with_none_value (auth_tests.test_forms.ReadOnlyPasswordHashTest)", "test_readonly_field_has_changed (auth_tests.test_forms.ReadOnlyPasswordHashTest)", "test_render (auth_tests.test_forms.ReadOnlyPasswordHashTest)"]}
{"instance_id": "django__django-14534", "tests_passing_in_original_repo": ["test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase)", "test_auto_id (forms_tests.tests.test_forms.FormsTestCase)", "test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase)", "test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase)", "test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase)", "BaseForm.__repr__() should contain some basic information about the", "BaseForm.__repr__() shouldn't trigger the form validation.", "test_basic_processing_in_view (forms_tests.tests.test_forms.FormsTestCase)", "BoundField without any choices (subwidgets) evaluates to True.", "test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase)", "If an id is provided in `Widget.attrs`, it overrides the generated ID,", "Multiple calls to BoundField().value() in an unbound form should return", "test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase)", "If a widget has no id, label_tag just returns the text with no", "test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase)", "test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase)", "test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase)", "test_changed_data (forms_tests.tests.test_forms.FormsTestCase)", "test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase)", "test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase)", "test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase)", "test_class_prefix (forms_tests.tests.test_forms.FormsTestCase)", "test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase)", "test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase)", "Form fields can customize what is considered as an empty value", "test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase)", "The cleaned value for a form with a disabled DateTimeField and callable", "Cleaning a form with a disabled DateTimeField and callable initial", "test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase)", "test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase)", "test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase)", "test_empty_dict (forms_tests.tests.test_forms.FormsTestCase)", "test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase)", "test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase)", "test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase)", "test_error_dict (forms_tests.tests.test_forms.FormsTestCase)", "#21962 - adding html escape flag to ErrorDict", "test_error_escaping (forms_tests.tests.test_forms.FormsTestCase)", "test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase)", "test_error_list (forms_tests.tests.test_forms.FormsTestCase)", "test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase)", "test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase)", "test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase)", "test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase)", "test_errorlist_override (forms_tests.tests.test_forms.FormsTestCase)", "test_escaping (forms_tests.tests.test_forms.FormsTestCase)", "test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase)", "test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase)", "test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase)", "#5749 - `field_name` may be used as a key in _html_output().", "BaseForm._html_output() should merge all the hidden input fields and", "test_field_named_data (forms_tests.tests.test_forms.FormsTestCase)", "test_field_order (forms_tests.tests.test_forms.FormsTestCase)", "`css_classes` may be used as a key in _html_output() (class comes", "`css_classes` may be used as a key in _html_output() (empty classes).", "test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase)", "test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase)", "test_form (forms_tests.tests.test_forms.FormsTestCase)", "test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase)", "test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase)", "test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase)", "test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase)", "test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase)", "test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase)", "test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase)", "test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase)", "test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase)", "test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase)", "test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase)", "test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase)", "test_has_error (forms_tests.tests.test_forms.FormsTestCase)", "test_help_text (forms_tests.tests.test_forms.FormsTestCase)", "test_hidden_data (forms_tests.tests.test_forms.FormsTestCase)", "test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase)", "test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase)", "test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase)", "test_html_safe (forms_tests.tests.test_forms.FormsTestCase)", "test_id_on_field (forms_tests.tests.test_forms.FormsTestCase)", "test_initial_data (forms_tests.tests.test_forms.FormsTestCase)", "test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase)", "test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase)", "#17922 - required_css_class is added to the label_tag() of required fields.", "test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase)", "test_label_suffix (forms_tests.tests.test_forms.FormsTestCase)", "BoundField label_suffix (if provided) overrides Form label_suffix", "test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase)", "test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase)", "test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase)", "test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase)", "#19298 -- MultiValueField needs to override the default as it needs", "test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase)", "#23674 -- invalid initial data should not break form.changed_data()", "test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase)", "test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase)", "test_optional_data (forms_tests.tests.test_forms.FormsTestCase)", "test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase)", "test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase)", "test_templates_with_forms (forms_tests.tests.test_forms.FormsTestCase)", "test_unbound_form (forms_tests.tests.test_forms.FormsTestCase)", "test_unicode_values (forms_tests.tests.test_forms.FormsTestCase)", "test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase)", "test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase)", "test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase)", "test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase)", "The list of form field validators can be modified without polluting", "test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase)", "test_widget_output (forms_tests.tests.test_forms.FormsTestCase)", "test_attribute_class (forms_tests.tests.test_forms.RendererTests)", "test_attribute_instance (forms_tests.tests.test_forms.RendererTests)", "test_attribute_override (forms_tests.tests.test_forms.RendererTests)", "test_default (forms_tests.tests.test_forms.RendererTests)", "test_kwarg_class (forms_tests.tests.test_forms.RendererTests)", "test_kwarg_instance (forms_tests.tests.test_forms.RendererTests)"]}
{"instance_id": "django__django-14580", "tests_passing_in_original_repo": ["test_args_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_args_signature (migrations.test_writer.OperationWriterTests)", "test_empty_signature (migrations.test_writer.OperationWriterTests)", "test_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_multiline_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_operation_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_custom_operation (migrations.test_writer.WriterTests)", "test_deconstruct_class_arguments (migrations.test_writer.WriterTests)", "Test comments at top of file.", "test_migration_path (migrations.test_writer.WriterTests)", "django.db.models shouldn't be imported if unused.", "test_register_non_serializer (migrations.test_writer.WriterTests)", "test_register_serializer (migrations.test_writer.WriterTests)", "test_serialize_builtin_types (migrations.test_writer.WriterTests)", "test_serialize_builtins (migrations.test_writer.WriterTests)", "test_serialize_choices (migrations.test_writer.WriterTests)", "Ticket #22943: Test serialization of class-based validators, including", "test_serialize_collections (migrations.test_writer.WriterTests)", "Make sure compiled regex can be serialized.", "test_serialize_constants (migrations.test_writer.WriterTests)", "test_serialize_datetime (migrations.test_writer.WriterTests)", "Ticket #22679: makemigrations generates invalid code for (an empty", "test_serialize_enums (migrations.test_writer.WriterTests)", "test_serialize_fields (migrations.test_writer.WriterTests)", "test_serialize_frozensets (migrations.test_writer.WriterTests)", "test_serialize_functions (migrations.test_writer.WriterTests)", "test_serialize_functools_partial (migrations.test_writer.WriterTests)", "test_serialize_functools_partialmethod (migrations.test_writer.WriterTests)", "test_serialize_iterators (migrations.test_writer.WriterTests)", "test_serialize_lazy_objects (migrations.test_writer.WriterTests)", "A reference in a local scope can't be serialized.", "test_serialize_managers (migrations.test_writer.WriterTests)", "test_serialize_multiline_strings (migrations.test_writer.WriterTests)", "test_serialize_nested_class (migrations.test_writer.WriterTests)", "test_serialize_numbers (migrations.test_writer.WriterTests)", "test_serialize_path_like (migrations.test_writer.WriterTests)", "test_serialize_pathlib (migrations.test_writer.WriterTests)", "test_serialize_range (migrations.test_writer.WriterTests)", "test_serialize_set (migrations.test_writer.WriterTests)", "test_serialize_settings (migrations.test_writer.WriterTests)", "test_serialize_strings (migrations.test_writer.WriterTests)", "test_serialize_timedelta (migrations.test_writer.WriterTests)", "test_serialize_type_none (migrations.test_writer.WriterTests)", "An unbound method used within a class body can be serialized.", "test_serialize_uuid (migrations.test_writer.WriterTests)", "Tests serializing a simple migration.", "#24155 - Tests ordering of imports."]}
{"instance_id": "django__django-14608", "tests_passing_in_original_repo": ["test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)", "test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)", "test_change_view (admin_views.tests.AdminCustomQuerysetTest)", "test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)", "test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)", "test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)", "test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)", "Custom querysets are considered for the admin history view.", "test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)", "test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)", "test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)", "test_change_password_template (admin_views.tests.AdminCustomTemplateTests)", "test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)", "The admin/change_list.html' template uses block.super", "The admin/change_form.html template uses block.super in the", "The admin/delete_confirmation.html template uses", "The admin/delete_selected_confirmation.html template uses", "The admin/index.html template uses block.super in the bodyclass block.", "The admin/login.html template uses block.super in the", "A custom template can be used to render an admin filter.", "test_filters (admin_views.tests.AdminDocsTest)", "test_tags (admin_views.tests.AdminDocsTest)", "Inline models which inherit from a common parent are correctly handled.", "test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)", "Inline file uploads correctly display prior data (#10002).", "A model with a character PK can be saved as inlines. Regression for #10992", "A model with an explicit autofield primary key can be saved as inlines. Regression for #8093", "An inherited model can be saved as inlines. Regression for #11042", "A model with an integer PK can be saved as inlines. Regression for #10992", "An inline with an editable ordering fields is updated correctly.", "A simple model can be saved as inlines", "The minified versions of the JS files are only used when DEBUG is False.", "test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_add_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_change_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_beginning_matches (admin_views.tests.AdminSearchTest)", "test_exact_matches (admin_views.tests.AdminSearchTest)", "#8408 -- \"Show all\" should be displayed instead of the total count if", "test_pluggable_search (admin_views.tests.AdminSearchTest)", "Test presence of reset link in search bar (\"1 result (_x total_)\").", "A search that mentions sibling models", "test_search_with_spaces (admin_views.tests.AdminSearchTest)", "The to_field GET parameter is preserved when a search is performed.", "test_known_url_missing_slash_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_known_url_missing_slash_redirects_with_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_known_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_known_url_redirects_login_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_false (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_false_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_force_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_non_staff_user (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_unknown_url (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_unknown_url_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_non_admin_url_404_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_non_admin_url_shares_url_prefix (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_non_admin_url_shares_url_prefix_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_single_model_no_append_slash (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_404_if_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_404_if_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_404_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unkown_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unkown_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_message_debug (admin_views.tests.AdminUserMessageTest)", "test_message_error (admin_views.tests.AdminUserMessageTest)", "test_message_extra_tags (admin_views.tests.AdminUserMessageTest)", "test_message_info (admin_views.tests.AdminUserMessageTest)", "test_message_success (admin_views.tests.AdminUserMessageTest)", "test_message_warning (admin_views.tests.AdminUserMessageTest)", "Check if L10N is deactivated, the JavaScript i18n view doesn't", "test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)", "#13749 - Admin should display link to front-end site 'View site'", "Regressions test for ticket 15103 - filtering on fields defined in a", "AttributeErrors are allowed to bubble when raised inside a change list", "test_app_index_context (admin_views.tests.AdminViewBasicTest)", "A smoke test to ensure GET on the add_view works.", "A smoke test to ensure POST on add_view works.", "A smoke test to ensure GET on the change_view works.", "The change URL changed in Django 1.9, but the old one still redirects.", "GET on the change_view (when passing a string as the PK argument for a", "A smoke test to ensure POST on edit_view works.", "GET on the change_view (for inherited models) redirects to the index", "test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)", "test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)", "Ensure we can sort on a list_display field that is a callable", "Query expressions may be used for admin_order_field.", "test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)", "Ensure we can sort on a list_display field that is a Model method", "Ensure we can sort on a list_display field that is a ModelAdmin method", "Ensure we can sort on a list_display field that is a ModelAdmin", "test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)", "test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)", "test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)", "If no ordering is defined in `ModelAdmin.ordering` or in the query", "Sort on a list_display field that is a property (column 10 is", "Changes to ManyToManyFields are included in the object's history.", "test_change_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)", "The 'show_delete' context variable in the admin's change view controls", "ModelAdmin.changelist_view shouldn't result in a NoReverseMatch if url", "test_date_hierarchy_empty_queryset (admin_views.tests.AdminViewBasicTest)", "test_date_hierarchy_local_date_differ_from_utc (admin_views.tests.AdminViewBasicTest)", "test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)", "test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)", "test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)", "test_display_decorator_with_boolean_and_empty_value (admin_views.tests.AdminViewBasicTest)", "Test \"save as\".", "Should be able to \"Save as new\" while also deleting an inline.", "test_formset_kwargs_can_be_overridden (admin_views.tests.AdminViewBasicTest)", "test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)", "test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)", "Joins shouldn't be performed for <FK>_id fields in list display.", "Joins shouldn't be performed for <O2O>_id fields in list display.", "Tests if the \"change password\" link in the admin is hidden if the User", "Check if the JavaScript i18n view returns an empty language catalog", "Makes sure that the fallback language is still working properly", "Ensure incorrect lookup parameters are handled gracefully.", "#21056 -- URL reversing shouldn't work for nonexistent apps.", "Ensure is_null is handled correctly.", "test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)", "Ensure admin changelist filters do not contain objects excluded via limit_choices_to.", "test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)", "test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)", "Ensures the admin changelist shows correct values in the relevant column", "Ensures the filter UI shows correctly when at least one named group has", "Ensure http response from a popup is properly escaped.", "Regression test for ticket 20664 - ensure the pk is properly quoted.", "test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)", "test_render_views_no_subtitle (admin_views.tests.AdminViewBasicTest)", "test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)", "The admin shows default sort indicators for all kinds of 'ordering'", "test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)", "test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)", "If you leave off the trailing slash, app should redirect and add it.", "test_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)", "Cyclic relationships should still cause each object to only be", "The delete view uses ModelAdmin.get_deleted_objects().", "If a deleted object has GenericForeignKeys pointing to it,", "If a deleted object has GenericForeignKey with", "In the case of an inherited model, if either the child or", "If a deleted object has two relationships pointing to it from", "If a deleted object has two relationships from another model,", "Objects should be nested to display the relationships that", "test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)", "test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)", "A POST request to delete protected objects should display the page", "test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)", "test_protected (admin_views.tests.AdminViewDeletedObjectsTest)", "test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)", "change_view has form_url in response.context", "The behavior for setting initial form data can be overridden in the", "test_changelist_input_html (admin_views.tests.AdminViewListEditable)", "test_custom_pk (admin_views.tests.AdminViewListEditable)", "test_inheritance (admin_views.tests.AdminViewListEditable)", "test_inheritance_2 (admin_views.tests.AdminViewListEditable)", "test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)", "test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)", "test_list_editable_ordering (admin_views.tests.AdminViewListEditable)", "Pagination works for list_editable items.", "Fields should not be list-editable in popups.", "Non-field errors are displayed for each of the forms in the", "test_non_form_errors (admin_views.tests.AdminViewListEditable)", "test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)", "hidden pk fields aren't displayed in the table body and their", "Similarly as test_pk_hidden_fields, but when the hidden pk fields are", "test_post_messages (admin_views.tests.AdminViewListEditable)", "test_post_submission (admin_views.tests.AdminViewListEditable)", "test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)", "test_logout (admin_views.tests.AdminViewLogoutTests)", "Issue #20522", "The right link is displayed if view_on_site is a callable", "The view_on_site value is either a boolean or a callable", "The 'View on site' button is not displayed if view_on_site is False", "None is returned if model doesn't have get_absolute_url", "The default behavior is followed if view_on_site is True", "Test add view restricts access and actually adds items.", "User with add permission to a section but view-only for inlines.", "If a user has no module perms, the app list returns a 404.", "Change view should restrict access and allow users to edit items.", "'Save as new' should raise PermissionDenied for users without the 'add'", "User has view and add permissions on the inline model.", "User has view and delete permissions on the inline model.", "User with change permission to a section but view-only for inlines.", "The object should be read-only if the user has permission to view it", "The foreign key widget should only show the \"add related\" button if the", "The foreign key widget should only show the \"change related\" button if", "The foreign key widget should only show the \"delete related\" button if", "Delete view should restrict access and actually delete items.", "test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)", "The delete view allows users to delete collected objects without a", "test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)", "test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)", "Regression test for #19327", "has_module_permission() returns True for all users who", "History view should restrict access.", "test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)", "Make sure only staff members can log in.", "test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)", "A logged-in non-staff user trying to access the admin index should be", "Login redirect should be to the admin index page when going directly to", "test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)", "If has_module_permission() always returns False, the module shouldn't", "Post-save message shouldn't contain a link to the change form if the", "Only admin users should be able to use the admin shortcut view.", "test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)", "test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)", "test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)", "test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)", "Object history button link should work and contain the pk value quoted.", "Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072", "The link from the delete confirmation page referring back to the changeform of the object should be quoted", "Retrieving the object using urlencoded form of primary key should work", "Retrieving the history for an object using urlencoded form of primary", "The link from the recent actions list referring to the changeform of the object should be quoted", "As soon as an object is added using \"Save and continue editing\"", "'View on site should' work properly with char fields", "A model with a primary key that ends with add or is `add` should be visible", "A model with a primary key that ends with delete should be visible", "A model with a primary key that ends with history should be visible", "The delete_view handles non-ASCII characters", "A test to ensure that POST on edit_view handles non-ASCII characters.", "Admin index views don't break when user's ModelAdmin removes standard urls", "Ensure app and model tag are correctly read by app_index template", "Ensure app and model tag are correctly read by delete_confirmation", "Ensure app and model tag are correctly read by", "Ensure app and model tag are correctly read by change_form template", "Ensure app and model tag are correctly read by change_list template", "Cells of the change list table should contain the field name in their class attribute", "Fields have a CSS class name with a 'field-' prefix.", "CSS class names are used for each app and model on the admin index", "test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)", "test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)", "No date hierarchy links display with empty changelist.", "year-level links appear for year-spanning changelist.", "test_related_field (admin_views.tests.DateHierarchyTests)", "Single day-level date hierarchy appears for single object.", "day-level links appear for changelist within single month.", "month-level links appear for changelist within single year.", "test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)", "test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)", "test_group_permission_performance (admin_views.tests.GroupAdminTest)", "test_save_button (admin_views.tests.GroupAdminTest)", "The 'View on site' button is displayed if view_on_site is True", "Test for ticket 2445 changes to admin.", "test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_add_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_change_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "Check the never-cache status of the JavaScript i18n view", "Check the never-cache status of the main index", "Check the never-cache status of an application index", "Check the never-cache status of login views", "Check the never-cache status of logout view", "Check the never-cache status of a model add page", "Check the never-cache status of a model delete page", "Check the never-cache status of a model history page", "Check the never-cache status of a model index", "Check the never-cache status of a model edit page", "Check the never-cache status of the password change view", "Check the never-cache status of the password change done view", "Regression test for #15938: if USE_THOUSAND_SEPARATOR is set, make sure", "test_prepopulated_off (admin_views.tests.PrePopulatedTest)", "test_prepopulated_on (admin_views.tests.PrePopulatedTest)", "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'", "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'. That", "Regression test for 14880", "Regression test for 20182", "Should be able to use a ModelAdmin method in list_display that has the", "Regression test for #17911.", "Make sure that non-field readonly elements are properly autoescaped (#24461)", "test_label_suffix_translated (admin_views.tests.ReadonlyTest)", "Regression test for #22087 - ModelForm Meta overrides are ignored by", "ForeignKey readonly fields render as links if the target model is", "test_readonly_get (admin_views.tests.ReadonlyTest)", "Regression test for #13004", "Regression test for #16433 - backwards references for related objects", "test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)", "Can reference a reverse OneToOneField in ModelAdmin.readonly_fields.", "test_readonly_post (admin_views.tests.ReadonlyTest)", "test_readonly_text_field (admin_views.tests.ReadonlyTest)", "test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)", "Saving a new object using \"Save as new\" redirects to the changelist", "'save as' creates a new person", "test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)", "When you click \"Save as new\" and have a validation error,", "test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)", "test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)", "Staff_member_required decorator works with an argument", "Validate that a custom ChangeList class can be used (#9749)", "test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)", "InlineModelAdmin broken?", "test_all_fields_hidden (admin_views.tests.TestLabelVisibility)", "test_all_fields_visible (admin_views.tests.TestLabelVisibility)", "test_mixin (admin_views.tests.TestLabelVisibility)", "test_form_url_present_in_context (admin_views.tests.UserAdminTest)", "test_password_mismatch (admin_views.tests.UserAdminTest)", "test_save_add_another_button (admin_views.tests.UserAdminTest)", "test_save_button (admin_views.tests.UserAdminTest)", "test_save_continue_editing_button (admin_views.tests.UserAdminTest)", "User addition through a FK popup should return the appropriate JavaScript response.", "User change through a FK popup should return the appropriate JavaScript response.", "User deletion through a FK popup should return the appropriate JavaScript response.", "test_user_permission_performance (admin_views.tests.UserAdminTest)", "test_lang_name_present (admin_views.tests.ValidXHTMLTests)", "all_valid() validates all forms, even when some are invalid.", "test_valid (forms_tests.tests.test_formsets.AllValidTests)", "test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A FormSet constructor takes the same arguments as Form. Create a", "A form that's displayed as blank may be submitted as blank.", "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "FormSets have a clean() hook for doing extra validation that isn't tied", "test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Deleting prefilled data is an error. Removing data from form fields", "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "More than 1 empty form can be displayed using formset_factory's", "Ordering fields are allowed to be left blank. If they are left blank,", "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Custom kwargs set on the formset instance are passed to the", "Form kwargs can be passed dynamically in a formset.", "Formsets call is_valid() on each form.", "Formset's forms use the formset's error_class.", "FormSet.has_changed() is True if any data is passed to its forms, even", "A FormSet can be prefilled with existing data by providing a list of", "Formset instances are iterable.", "A formsets without any forms evaluates as True.", "Formset works with SplitDateTimeField(initial=datetime.datetime.now).", "A valid formset should have 0 total errors.", "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If validate_max is set and max_num is less than TOTAL_FORMS in the", "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If validate_min is set and min_num is more than TOTAL_FORMS in the", "min_num validation doesn't consider unchanged forms with initial data", "test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A formset's ManagementForm is validated once per FormSet.is_valid()", "formset_factory's can_delete argument adds a boolean \"delete\" field to", "deleted_forms works on a valid formset even if a deleted form would", "If a form is filled with something and can_delete is also checked, that", "FormSets with ordering + deletion.", "test_formsets_with_order_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "formset_factory's can_order argument adds an integer field to each", "A formset has a hard limit on the number of forms instantiated.", "test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Can increase the built-in forms limit via a higher max_num.", "Can get ordered_forms from a valid formset even if a deleted form", "test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "max_num has no effect when extra is less than max_num.", "Limiting the maximum number of forms with max_num.", "The management form has the correct prefix.", "test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If max_num is 0 then no form is rendered at all, regardless of extra,", "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "More than 1 empty form can also be displayed using formset_factory's", "More than 1 empty form can be displayed using min_num.", "The extra argument works when the formset is pre-filled with initial", "One form from initial and extra=3 with max_num=2 results in the one", "More initial forms than max_num results in all initial forms being", "test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If non_form_errors() is called without calling is_valid() first,", "Ordering works with blank fieldsets.", "If at least one field is filled out on a blank form, it will be", "A partially completed form is invalid.", "Just one form may be completed.", "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)", "is_multipart() works with an empty formset.", "An empty formset still calls clean()", "Media is available on empty formset.", "test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)"]}
{"instance_id": "django__django-14667", "tests_passing_in_original_repo": ["test_defer_baseclass_when_subclass_has_added_field (defer.tests.BigChildDeferTests)", "test_defer_subclass (defer.tests.BigChildDeferTests)", "test_defer_subclass_both (defer.tests.BigChildDeferTests)", "test_only_baseclass_when_subclass_has_added_field (defer.tests.BigChildDeferTests)", "test_only_subclass (defer.tests.BigChildDeferTests)", "test_defer (defer.tests.DeferTests)", "test_defer_baseclass_when_subclass_has_no_added_fields (defer.tests.DeferTests)", "test_defer_extra (defer.tests.DeferTests)", "test_defer_foreign_keys_are_deferred_and_not_traversed (defer.tests.DeferTests)", "test_defer_none_to_clear_deferred_set (defer.tests.DeferTests)", "test_defer_of_overridden_scalar (defer.tests.DeferTests)", "test_defer_on_an_already_deferred_field (defer.tests.DeferTests)", "test_defer_only_chaining (defer.tests.DeferTests)", "test_defer_select_related_raises_invalid_query (defer.tests.DeferTests)", "test_defer_values_does_not_defer (defer.tests.DeferTests)", "test_defer_with_select_related (defer.tests.DeferTests)", "test_get (defer.tests.DeferTests)", "test_only (defer.tests.DeferTests)", "test_only_baseclass_when_subclass_has_no_added_fields (defer.tests.DeferTests)", "test_only_none_raises_error (defer.tests.DeferTests)", "test_only_select_related_raises_invalid_query (defer.tests.DeferTests)", "test_only_values_does_not_defer (defer.tests.DeferTests)", "test_only_with_select_related (defer.tests.DeferTests)", "test_saving_object_with_deferred_field (defer.tests.DeferTests)", "test_custom_refresh_on_deferred_loading (defer.tests.TestDefer2)", "When an inherited model is fetched from the DB, its PK is also fetched.", "Ensure select_related together with only on a proxy model behaves", "test_eq (defer.tests.TestDefer2)", "test_refresh_not_loading_deferred_fields (defer.tests.TestDefer2)"]}
{"instance_id": "django__django-14672", "tests_passing_in_original_repo": ["test_check_constraint_pointing_to_fk (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_joined_fields (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_joined_fields_complex_check (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_m2m_field (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_missing_field (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_non_local_field (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_pk (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_reverse_fk (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraint_pointing_to_reverse_o2o (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraints (invalid_models_tests.test_models.ConstraintsTests)", "test_check_constraints_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_deferrable_unique_constraint (invalid_models_tests.test_models.ConstraintsTests)", "test_deferrable_unique_constraint_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_expression_custom_lookup (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_pointing_to_fk (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_pointing_to_m2m_field (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_pointing_to_missing_field (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_pointing_to_missing_field_nested (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_pointing_to_non_local_field (invalid_models_tests.test_models.ConstraintsTests)", "test_func_unique_constraint_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_condition_pointing_to_joined_fields (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_condition_pointing_to_missing_field (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_pointing_to_fk (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_pointing_to_m2m_field (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_pointing_to_missing_field (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_pointing_to_non_local_field (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_pointing_to_reverse_o2o (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_with_condition (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_with_condition_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_with_include (invalid_models_tests.test_models.ConstraintsTests)", "test_unique_constraint_with_include_required_db_features (invalid_models_tests.test_models.ConstraintsTests)", "test_db_column_clash (invalid_models_tests.test_models.FieldNamesTests)", "test_ending_with_underscore (invalid_models_tests.test_models.FieldNamesTests)", "test_including_separator (invalid_models_tests.test_models.FieldNamesTests)", "test_pk (invalid_models_tests.test_models.FieldNamesTests)", "test_func_index (invalid_models_tests.test_models.IndexesTests)", "test_func_index_complex_expression_custom_lookup (invalid_models_tests.test_models.IndexesTests)", "test_func_index_pointing_to_fk (invalid_models_tests.test_models.IndexesTests)", "test_func_index_pointing_to_m2m_field (invalid_models_tests.test_models.IndexesTests)", "test_func_index_pointing_to_missing_field (invalid_models_tests.test_models.IndexesTests)", "test_func_index_pointing_to_missing_field_nested (invalid_models_tests.test_models.IndexesTests)", "test_func_index_pointing_to_non_local_field (invalid_models_tests.test_models.IndexesTests)", "test_func_index_required_db_features (invalid_models_tests.test_models.IndexesTests)", "test_index_with_condition (invalid_models_tests.test_models.IndexesTests)", "test_index_with_condition_required_db_features (invalid_models_tests.test_models.IndexesTests)", "test_index_with_include (invalid_models_tests.test_models.IndexesTests)", "test_index_with_include_required_db_features (invalid_models_tests.test_models.IndexesTests)", "test_max_name_length (invalid_models_tests.test_models.IndexesTests)", "test_name_constraints (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_fk (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_m2m_field (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_missing_field (invalid_models_tests.test_models.IndexesTests)", "test_pointing_to_non_local_field (invalid_models_tests.test_models.IndexesTests)", "test_check_jsonfield (invalid_models_tests.test_models.JSONFieldTests)", "test_check_jsonfield_required_db_features (invalid_models_tests.test_models.JSONFieldTests)", "test_ordering_pointing_to_json_field_value (invalid_models_tests.test_models.JSONFieldTests)", "test_multiple_autofields (invalid_models_tests.test_models.MultipleAutoFieldsTests)", "test_add_on_symmetrical_m2m_with_intermediate_model (m2m_through.tests.M2mThroughReferentialTests)", "test_self_referential_empty_qs (m2m_through.tests.M2mThroughReferentialTests)", "test_self_referential_non_symmetrical_both (m2m_through.tests.M2mThroughReferentialTests)", "test_self_referential_non_symmetrical_clear_first_side (m2m_through.tests.M2mThroughReferentialTests)", "test_self_referential_non_symmetrical_first_side (m2m_through.tests.M2mThroughReferentialTests)", "test_self_referential_non_symmetrical_second_side (m2m_through.tests.M2mThroughReferentialTests)", "test_self_referential_symmetrical (m2m_through.tests.M2mThroughReferentialTests)", "test_set_on_symmetrical_m2m_with_intermediate_model (m2m_through.tests.M2mThroughReferentialTests)", "test_through_fields_self_referential (m2m_through.tests.M2mThroughReferentialTests)", "test_add_on_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_add_on_m2m_with_intermediate_model_callable_through_default (m2m_through.tests.M2mThroughTests)", "test_add_on_m2m_with_intermediate_model_value_required (m2m_through.tests.M2mThroughTests)", "test_add_on_m2m_with_intermediate_model_value_required_fails (m2m_through.tests.M2mThroughTests)", "test_add_on_reverse_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_clear_on_reverse_removes_all_the_m2m_relationships (m2m_through.tests.M2mThroughTests)", "test_clear_removes_all_the_m2m_relationships (m2m_through.tests.M2mThroughTests)", "test_create_on_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_create_on_m2m_with_intermediate_model_callable_through_default (m2m_through.tests.M2mThroughTests)", "test_create_on_m2m_with_intermediate_model_value_required (m2m_through.tests.M2mThroughTests)", "test_create_on_m2m_with_intermediate_model_value_required_fails (m2m_through.tests.M2mThroughTests)", "test_create_on_reverse_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_custom_related_name_doesnt_conflict_with_fky_related_name (m2m_through.tests.M2mThroughTests)", "test_custom_related_name_forward_empty_qs (m2m_through.tests.M2mThroughTests)", "test_custom_related_name_forward_non_empty_qs (m2m_through.tests.M2mThroughTests)", "test_custom_related_name_reverse_empty_qs (m2m_through.tests.M2mThroughTests)", "test_custom_related_name_reverse_non_empty_qs (m2m_through.tests.M2mThroughTests)", "test_filter_on_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_get_on_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_get_or_create_on_m2m_with_intermediate_model_value_required (m2m_through.tests.M2mThroughTests)", "test_get_or_create_on_m2m_with_intermediate_model_value_required_fails (m2m_through.tests.M2mThroughTests)", "test_order_by_relational_field_through_model (m2m_through.tests.M2mThroughTests)", "test_query_first_model_by_intermediate_model_attribute (m2m_through.tests.M2mThroughTests)", "test_query_model_by_attribute_name_of_related_model (m2m_through.tests.M2mThroughTests)", "test_query_model_by_custom_related_name (m2m_through.tests.M2mThroughTests)", "test_query_model_by_intermediate_can_return_non_unique_queryset (m2m_through.tests.M2mThroughTests)", "test_query_model_by_related_model_name (m2m_through.tests.M2mThroughTests)", "test_query_second_model_by_intermediate_model_attribute (m2m_through.tests.M2mThroughTests)", "test_remove_on_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_remove_on_m2m_with_intermediate_model_multiple (m2m_through.tests.M2mThroughTests)", "test_remove_on_reverse_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_retrieve_intermediate_items (m2m_through.tests.M2mThroughTests)", "test_retrieve_reverse_intermediate_items (m2m_through.tests.M2mThroughTests)", "test_set_on_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "test_set_on_m2m_with_intermediate_model_callable_through_default (m2m_through.tests.M2mThroughTests)", "test_set_on_m2m_with_intermediate_model_value_required (m2m_through.tests.M2mThroughTests)", "test_set_on_m2m_with_intermediate_model_value_required_fails (m2m_through.tests.M2mThroughTests)", "test_set_on_reverse_m2m_with_intermediate_model (m2m_through.tests.M2mThroughTests)", "Relations with intermediary tables with multiple FKs", "test_update_or_create_on_m2m_with_intermediate_model_value_required (m2m_through.tests.M2mThroughTests)", "test_update_or_create_on_m2m_with_intermediate_model_value_required_fails (m2m_through.tests.M2mThroughTests)", "test_choices (m2m_through.tests.M2mThroughToFieldsTests)", "test_retrieval (m2m_through.tests.M2mThroughToFieldsTests)", "test_list_containing_non_iterable (invalid_models_tests.test_models.IndexTogetherTests)", "test_non_iterable (invalid_models_tests.test_models.IndexTogetherTests)", "test_non_list (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_fk (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_m2m_field (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_missing_field (invalid_models_tests.test_models.IndexTogetherTests)", "test_pointing_to_non_local_field (invalid_models_tests.test_models.IndexTogetherTests)", "test_just_order_with_respect_to_no_errors (invalid_models_tests.test_models.OtherModelTests)", "test_just_ordering_no_errors (invalid_models_tests.test_models.OtherModelTests)", "test_lazy_reference_checks (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_autogenerated_table_name_clash (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_autogenerated_table_name_clash_database_routers_installed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_field_table_name_clash (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_field_table_name_clash_database_routers_installed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_table_name_clash (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_table_name_clash_database_routers_installed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_to_concrete_and_proxy_allowed (invalid_models_tests.test_models.OtherModelTests)", "test_m2m_unmanaged_shadow_models_not_checked (invalid_models_tests.test_models.OtherModelTests)", "test_name_beginning_with_underscore (invalid_models_tests.test_models.OtherModelTests)", "test_name_contains_double_underscores (invalid_models_tests.test_models.OtherModelTests)", "test_name_ending_with_underscore (invalid_models_tests.test_models.OtherModelTests)", "test_non_valid (invalid_models_tests.test_models.OtherModelTests)", "test_onetoone_with_explicit_parent_link_parent_model (invalid_models_tests.test_models.OtherModelTests)", "test_onetoone_with_parent_model (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_allows_registered_lookups (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_non_iterable (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_multiple_times_to_model_fields (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_foreignkey_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_lookup_not_transform (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_foreignkey_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_related_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_missing_related_model_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_non_related_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_related_model_pk (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_pointing_to_two_related_model_field (invalid_models_tests.test_models.OtherModelTests)", "test_ordering_with_order_with_respect_to (invalid_models_tests.test_models.OtherModelTests)", "test_property_and_related_field_accessor_clash (invalid_models_tests.test_models.OtherModelTests)", "test_single_primary_key (invalid_models_tests.test_models.OtherModelTests)", "test_swappable_missing_app (invalid_models_tests.test_models.OtherModelTests)", "test_swappable_missing_app_name (invalid_models_tests.test_models.OtherModelTests)", "test_two_m2m_through_same_model_with_different_through_fields (invalid_models_tests.test_models.OtherModelTests)", "test_two_m2m_through_same_relationship (invalid_models_tests.test_models.OtherModelTests)", "test_unique_primary_key (invalid_models_tests.test_models.OtherModelTests)", "test_field_name_clash_with_child_accessor (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_id_clash (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_inheritance_clash (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_multigeneration_inheritance (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_multiinheritance_clash (invalid_models_tests.test_models.ShadowingFieldsTests)", "test_list_containing_non_iterable (invalid_models_tests.test_models.UniqueTogetherTests)", "test_non_iterable (invalid_models_tests.test_models.UniqueTogetherTests)", "test_non_list (invalid_models_tests.test_models.UniqueTogetherTests)", "test_pointing_to_fk (invalid_models_tests.test_models.UniqueTogetherTests)", "test_pointing_to_m2m (invalid_models_tests.test_models.UniqueTogetherTests)", "test_pointing_to_missing_field (invalid_models_tests.test_models.UniqueTogetherTests)", "test_valid_model (invalid_models_tests.test_models.UniqueTogetherTests)"]}
{"instance_id": "django__django-14730", "tests_passing_in_original_repo": ["test_auto_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_big_integer_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_binary_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_boolean_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_char_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_char_field_choices (field_deconstruction.tests.FieldDeconstructionTests)", "test_csi_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_date_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_datetime_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_db_tablespace (field_deconstruction.tests.FieldDeconstructionTests)", "test_decimal_field (field_deconstruction.tests.FieldDeconstructionTests)", "A DecimalField with decimal_places=0 should work (#22272).", "test_email_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_file_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_file_path_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_float_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_foreign_key (field_deconstruction.tests.FieldDeconstructionTests)", "test_foreign_key_swapped (field_deconstruction.tests.FieldDeconstructionTests)", "test_generic_ip_address_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_image_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_integer_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_ip_address_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_many_to_many_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_many_to_many_field_related_name (field_deconstruction.tests.FieldDeconstructionTests)", "test_many_to_many_field_swapped (field_deconstruction.tests.FieldDeconstructionTests)", "Tests the outputting of the correct name if assigned one.", "test_one_to_one (field_deconstruction.tests.FieldDeconstructionTests)", "test_positive_big_integer_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_positive_integer_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_positive_small_integer_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_slug_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_small_integer_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_text_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_time_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_url_field (field_deconstruction.tests.FieldDeconstructionTests)", "test_clash_between_accessors (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.AccessorClashTests)", "Ref #22047.", "test_no_clash_for_hidden_related_name (invalid_models_tests.test_relative_fields.AccessorClashTests)", "test_clash_parent_link (invalid_models_tests.test_relative_fields.ComplexClashTests)", "test_complex_clash (invalid_models_tests.test_relative_fields.ComplexClashTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_hidden_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)", "If ``through_fields`` kwarg is given, it must specify both", "test_intersection_foreign_object (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "Providing invalid field names to ManyToManyField.through_fields", "Mixing up the order of link fields to ManyToManyField.through_fields", "ManyToManyField accepts the ``through_fields`` kwarg", "test_superset_foreign_object (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)", "test_ambiguous_relationship_model_from (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_ambiguous_relationship_model_to (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_abstract_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "#25723 - Referenced model registration lookup should be run against the", "test_foreign_key_to_missing_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_non_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_non_unique_field_under_explicit_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_partially_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_key_to_unique_field_with_meta_constraint (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_object_to_non_unique_fields (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_object_to_partially_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_foreign_object_to_unique_field_with_meta_constraint (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_invalid_related_query_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_m2m_to_abstract_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "#25723 - Through model registration lookup should be run against the", "test_many_to_many_to_missing_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_with_limit_choices_auto_created_no_warning (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_many_to_many_with_useless_options (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_missing_relationship_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_missing_relationship_model_on_model_check (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_not_swapped_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_nullable_primary_key (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_on_delete_set_default_without_default_value (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_on_delete_set_null_on_non_nullable_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_referencing_to_swapped_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_related_field_has_invalid_related_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_related_field_has_valid_related_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_relationship_model_missing_foreign_key (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_relationship_model_with_foreign_key_to_wrong_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_to_fields_exist (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_to_fields_not_checked_if_related_model_doesnt_exist (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_too_many_foreign_keys_in_self_referential_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_unique_m2m (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_valid_foreign_key_without_accessor (invalid_models_tests.test_relative_fields.RelativeFieldTests)", "test_fk_to_fk (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_fk_to_integer (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_fk_to_m2m (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_m2m_to_fk (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_m2m_to_integer (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_no_clash_across_apps_without_accessor (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)", "test_accessor_clash (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)", "test_clash_under_explicit_related_name (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)", "test_reverse_query_name_clash (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)", "test_accessor_clash (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_clash_between_accessors (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_clash_under_explicit_related_name (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_reverse_query_name_clash (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)", "test_valid_model (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)"]}
{"instance_id": "django__django-14752", "tests_passing_in_original_repo": ["test_custom_to_field (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_custom_to_field_custom_pk (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_custom_to_field_permission_denied (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_field_does_not_allowed (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_field_does_not_exist (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_field_no_related_field (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "Search results are paginated.", "Users require the change permission for the related model to the", "test_limit_choices_to (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_missing_search_fields (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_must_be_logged_in (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "Searching across model relations use QuerySet.distinct() to avoid", "test_success (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "test_to_field_resolution_with_fk_pk (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)", "to_field resolution should correctly resolve for target models using"]}
{"instance_id": "django__django-14787", "tests_passing_in_original_repo": ["test_cache_control_decorator_http_request (decorators.tests.CacheControlDecoratorTest)", "test_argumented (decorators.tests.MethodDecoratorTests)", "test_bad_iterable (decorators.tests.MethodDecoratorTests)", "@method_decorator can be used to decorate a class and its methods.", "test_descriptors (decorators.tests.MethodDecoratorTests)", "@method_decorator on a nonexistent method raises an error.", "@method_decorator on a non-callable attribute raises an error.", "A decorator that sets a new attribute on the method.", "test_preserve_attributes (decorators.tests.MethodDecoratorTests)", "test_preserve_signature (decorators.tests.MethodDecoratorTests)", "@method_decorator can accept a tuple of decorators.", "test_never_cache_decorator (decorators.tests.NeverCacheDecoratorTest)", "test_never_cache_decorator_http_request (decorators.tests.NeverCacheDecoratorTest)", "Built-in decorators set certain attributes of the wrapped function.", "test_cache_page (decorators.tests.DecoratorsTest)", "Test for the require_safe decorator.", "The user_passes_test decorator can be applied multiple times (#9474).", "Ensures @xframe_options_deny properly sets the X-Frame-Options header.", "Ensures @xframe_options_exempt properly instructs the", "Ensures @xframe_options_sameorigin properly sets the X-Frame-Options"]}
{"instance_id": "django__django-14855", "tests_passing_in_original_repo": ["test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)", "test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)", "test_change_view (admin_views.tests.AdminCustomQuerysetTest)", "test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)", "test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)", "test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)", "test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)", "Custom querysets are considered for the admin history view.", "test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)", "test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)", "test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)", "test_change_password_template (admin_views.tests.AdminCustomTemplateTests)", "test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)", "The admin/change_list.html' template uses block.super", "The admin/change_form.html template uses block.super in the", "The admin/delete_confirmation.html template uses", "The admin/delete_selected_confirmation.html template uses", "The admin/index.html template uses block.super in the bodyclass block.", "The admin/login.html template uses block.super in the", "A custom template can be used to render an admin filter.", "test_filters (admin_views.tests.AdminDocsTest)", "test_tags (admin_views.tests.AdminDocsTest)", "Inline models which inherit from a common parent are correctly handled.", "test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)", "Inline file uploads correctly display prior data (#10002).", "A model with a character PK can be saved as inlines. Regression for #10992", "A model with an explicit autofield primary key can be saved as inlines. Regression for #8093", "An inherited model can be saved as inlines. Regression for #11042", "A model with an integer PK can be saved as inlines. Regression for #10992", "An inline with an editable ordering fields is updated correctly.", "A simple model can be saved as inlines", "The minified versions of the JS files are only used when DEBUG is False.", "test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_add_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_change_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)", "test_beginning_matches (admin_views.tests.AdminSearchTest)", "test_exact_matches (admin_views.tests.AdminSearchTest)", "#8408 -- \"Show all\" should be displayed instead of the total count if", "test_pluggable_search (admin_views.tests.AdminSearchTest)", "Test presence of reset link in search bar (\"1 result (_x total_)\").", "A search that mentions sibling models", "test_search_with_spaces (admin_views.tests.AdminSearchTest)", "The to_field GET parameter is preserved when a search is performed.", "test_known_url_missing_slash_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_known_url_missing_slash_redirects_with_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_known_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_known_url_redirects_login_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_false (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_false_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_force_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_non_staff_user (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_unknown_url (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_unknown_url_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_missing_slash_append_slash_true_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_non_admin_url_404_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_non_admin_url_shares_url_prefix (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_non_admin_url_shares_url_prefix_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_single_model_no_append_slash (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_404_if_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_404_if_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_404_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unknown_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unkown_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_unkown_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)", "test_message_debug (admin_views.tests.AdminUserMessageTest)", "test_message_error (admin_views.tests.AdminUserMessageTest)", "test_message_extra_tags (admin_views.tests.AdminUserMessageTest)", "test_message_info (admin_views.tests.AdminUserMessageTest)", "test_message_success (admin_views.tests.AdminUserMessageTest)", "test_message_warning (admin_views.tests.AdminUserMessageTest)", "test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)", "#13749 - Admin should display link to front-end site 'View site'", "Regressions test for ticket 15103 - filtering on fields defined in a", "AttributeErrors are allowed to bubble when raised inside a change list", "test_app_index_context (admin_views.tests.AdminViewBasicTest)", "A smoke test to ensure GET on the add_view works.", "A smoke test to ensure POST on add_view works.", "A smoke test to ensure GET on the change_view works.", "The change URL changed in Django 1.9, but the old one still redirects.", "GET on the change_view (when passing a string as the PK argument for a", "A smoke test to ensure POST on edit_view works.", "GET on the change_view (for inherited models) redirects to the index", "test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)", "test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)", "Ensure we can sort on a list_display field that is a callable", "Query expressions may be used for admin_order_field.", "test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)", "Ensure we can sort on a list_display field that is a Model method", "Ensure we can sort on a list_display field that is a ModelAdmin method", "Ensure we can sort on a list_display field that is a ModelAdmin", "test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)", "test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)", "test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)", "If no ordering is defined in `ModelAdmin.ordering` or in the query", "Sort on a list_display field that is a property (column 10 is", "Changes to ManyToManyFields are included in the object's history.", "test_change_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)", "The 'show_delete' context variable in the admin's change view controls", "ModelAdmin.changelist_view shouldn't result in a NoReverseMatch if url", "test_date_hierarchy_empty_queryset (admin_views.tests.AdminViewBasicTest)", "test_date_hierarchy_local_date_differ_from_utc (admin_views.tests.AdminViewBasicTest)", "test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)", "test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)", "test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)", "test_display_decorator_with_boolean_and_empty_value (admin_views.tests.AdminViewBasicTest)", "Test \"save as\".", "Should be able to \"Save as new\" while also deleting an inline.", "test_formset_kwargs_can_be_overridden (admin_views.tests.AdminViewBasicTest)", "test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)", "test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)", "Joins shouldn't be performed for <FK>_id fields in list display.", "Joins shouldn't be performed for <O2O>_id fields in list display.", "Tests if the \"change password\" link in the admin is hidden if the User", "Check if the JavaScript i18n view returns an empty language catalog", "Makes sure that the fallback language is still working properly", "Ensure incorrect lookup parameters are handled gracefully.", "#21056 -- URL reversing shouldn't work for nonexistent apps.", "Ensure is_null is handled correctly.", "The JavaScript i18n view doesn't return localized date/time formats", "test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)", "Ensure admin changelist filters do not contain objects excluded via limit_choices_to.", "test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)", "test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)", "Ensures the admin changelist shows correct values in the relevant column", "Ensures the filter UI shows correctly when at least one named group has", "Ensure http response from a popup is properly escaped.", "Regression test for ticket 20664 - ensure the pk is properly quoted.", "test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)", "test_render_views_no_subtitle (admin_views.tests.AdminViewBasicTest)", "test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)", "The admin shows default sort indicators for all kinds of 'ordering'", "test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)", "test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)", "If you leave off the trailing slash, app should redirect and add it.", "test_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)", "Cyclic relationships should still cause each object to only be", "The delete view uses ModelAdmin.get_deleted_objects().", "If a deleted object has GenericForeignKeys pointing to it,", "If a deleted object has GenericForeignKey with", "In the case of an inherited model, if either the child or", "If a deleted object has two relationships pointing to it from", "If a deleted object has two relationships from another model,", "Objects should be nested to display the relationships that", "test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)", "test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)", "A POST request to delete protected objects should display the page", "test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)", "test_protected (admin_views.tests.AdminViewDeletedObjectsTest)", "test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)", "change_view has form_url in response.context", "The behavior for setting initial form data can be overridden in the", "test_changelist_input_html (admin_views.tests.AdminViewListEditable)", "test_custom_pk (admin_views.tests.AdminViewListEditable)", "test_inheritance (admin_views.tests.AdminViewListEditable)", "test_inheritance_2 (admin_views.tests.AdminViewListEditable)", "test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)", "test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)", "test_list_editable_ordering (admin_views.tests.AdminViewListEditable)", "Pagination works for list_editable items.", "Fields should not be list-editable in popups.", "Non-field errors are displayed for each of the forms in the", "test_non_form_errors (admin_views.tests.AdminViewListEditable)", "test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)", "hidden pk fields aren't displayed in the table body and their", "Similarly as test_pk_hidden_fields, but when the hidden pk fields are", "test_post_messages (admin_views.tests.AdminViewListEditable)", "test_post_submission (admin_views.tests.AdminViewListEditable)", "test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)", "test_logout (admin_views.tests.AdminViewLogoutTests)", "Issue #20522", "The right link is displayed if view_on_site is a callable", "The view_on_site value is either a boolean or a callable", "The 'View on site' button is not displayed if view_on_site is False", "None is returned if model doesn't have get_absolute_url", "The default behavior is followed if view_on_site is True", "Test add view restricts access and actually adds items.", "User with add permission to a section but view-only for inlines.", "If a user has no module perms, the app list returns a 404.", "Change view should restrict access and allow users to edit items.", "'Save as new' should raise PermissionDenied for users without the 'add'", "User has view and add permissions on the inline model.", "User has view and delete permissions on the inline model.", "User with change permission to a section but view-only for inlines.", "The object should be read-only if the user has permission to view it", "The foreign key widget should only show the \"add related\" button if the", "The foreign key widget should only show the \"change related\" button if", "The foreign key widget should only show the \"delete related\" button if", "Delete view should restrict access and actually delete items.", "test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)", "The delete view allows users to delete collected objects without a", "test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)", "test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)", "Regression test for #19327", "has_module_permission() returns True for all users who", "History view should restrict access.", "test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)", "Make sure only staff members can log in.", "test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)", "A logged-in non-staff user trying to access the admin index should be", "Login redirect should be to the admin index page when going directly to", "test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)", "If has_module_permission() always returns False, the module shouldn't", "Post-save message shouldn't contain a link to the change form if the", "Only admin users should be able to use the admin shortcut view.", "test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)", "test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)", "test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)", "test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)", "Object history button link should work and contain the pk value quoted.", "Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072", "The link from the delete confirmation page referring back to the changeform of the object should be quoted", "Retrieving the object using urlencoded form of primary key should work", "Retrieving the history for an object using urlencoded form of primary", "The link from the recent actions list referring to the changeform of the object should be quoted", "As soon as an object is added using \"Save and continue editing\"", "'View on site should' work properly with char fields", "A model with a primary key that ends with add or is `add` should be visible", "A model with a primary key that ends with delete should be visible", "A model with a primary key that ends with history should be visible", "The delete_view handles non-ASCII characters", "A test to ensure that POST on edit_view handles non-ASCII characters.", "Admin index views don't break when user's ModelAdmin removes standard urls", "Ensure app and model tag are correctly read by app_index template", "Ensure app and model tag are correctly read by delete_confirmation", "Ensure app and model tag are correctly read by", "Ensure app and model tag are correctly read by change_form template", "Ensure app and model tag are correctly read by change_list template", "Cells of the change list table should contain the field name in their class attribute", "Fields have a CSS class name with a 'field-' prefix.", "CSS class names are used for each app and model on the admin index", "test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)", "test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)", "test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)", "No date hierarchy links display with empty changelist.", "year-level links appear for year-spanning changelist.", "test_related_field (admin_views.tests.DateHierarchyTests)", "Single day-level date hierarchy appears for single object.", "day-level links appear for changelist within single month.", "month-level links appear for changelist within single year.", "test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)", "test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)", "test_group_permission_performance (admin_views.tests.GroupAdminTest)", "test_save_button (admin_views.tests.GroupAdminTest)", "The 'View on site' button is displayed if view_on_site is True", "Test for ticket 2445 changes to admin.", "test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_add_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_change_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)", "Check the never-cache status of the JavaScript i18n view", "Check the never-cache status of the main index", "Check the never-cache status of an application index", "Check the never-cache status of login views", "Check the never-cache status of logout view", "Check the never-cache status of a model add page", "Check the never-cache status of a model delete page", "Check the never-cache status of a model history page", "Check the never-cache status of a model index", "Check the never-cache status of a model edit page", "Check the never-cache status of the password change view", "Check the never-cache status of the password change done view", "Regression test for #15938: if USE_THOUSAND_SEPARATOR is set, make sure", "test_prepopulated_off (admin_views.tests.PrePopulatedTest)", "test_prepopulated_on (admin_views.tests.PrePopulatedTest)", "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'", "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'. That", "Regression test for 14880", "Regression test for 20182", "Should be able to use a ModelAdmin method in list_display that has the", "Regression test for #17911.", "Make sure that non-field readonly elements are properly autoescaped (#24461)", "test_label_suffix_translated (admin_views.tests.ReadonlyTest)", "Regression test for #22087 - ModelForm Meta overrides are ignored by", "ForeignKey readonly fields render as links if the target model is", "test_readonly_get (admin_views.tests.ReadonlyTest)", "Regression test for #13004", "Regression test for #16433 - backwards references for related objects", "test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)", "Can reference a reverse OneToOneField in ModelAdmin.readonly_fields.", "test_readonly_post (admin_views.tests.ReadonlyTest)", "test_readonly_text_field (admin_views.tests.ReadonlyTest)", "test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)", "Saving a new object using \"Save as new\" redirects to the changelist", "'save as' creates a new person", "test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)", "When you click \"Save as new\" and have a validation error,", "test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)", "test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)", "Staff_member_required decorator works with an argument", "Validate that a custom ChangeList class can be used (#9749)", "test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)", "InlineModelAdmin broken?", "test_all_fields_hidden (admin_views.tests.TestLabelVisibility)", "test_all_fields_visible (admin_views.tests.TestLabelVisibility)", "test_mixin (admin_views.tests.TestLabelVisibility)", "test_form_url_present_in_context (admin_views.tests.UserAdminTest)", "test_password_mismatch (admin_views.tests.UserAdminTest)", "test_save_add_another_button (admin_views.tests.UserAdminTest)", "test_save_button (admin_views.tests.UserAdminTest)", "test_save_continue_editing_button (admin_views.tests.UserAdminTest)", "User addition through a FK popup should return the appropriate JavaScript response.", "User change through a FK popup should return the appropriate JavaScript response.", "User deletion through a FK popup should return the appropriate JavaScript response.", "test_user_permission_performance (admin_views.tests.UserAdminTest)", "test_lang_name_present (admin_views.tests.ValidXHTMLTests)"]}
{"instance_id": "django__django-14915", "tests_passing_in_original_repo": ["test_basics (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choice_iterator_passes_model_to_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choices (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choices_bool (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choices_bool_empty_label (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choices_freshness (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choices_not_fetched_when_not_rendering (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_choices_radio_blank (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_clean_model_instance (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_clean_to_field_name (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_custom_choice_iterator_passes_model_to_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_deepcopies_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_disabled_modelchoicefield (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_disabled_modelchoicefield_has_changed (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_disabled_modelchoicefield_initial_model_instance (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_disabled_modelmultiplechoicefield_has_changed (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_disabled_multiplemodelchoicefield (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "ModelChoiceField with RadioSelect widget doesn't produce unnecessary", "Widgets that render multiple subwidgets shouldn't make more than one", "Iterator defaults to ModelChoiceIterator and can be overridden with", "test_queryset_manager (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_queryset_none (model_forms.test_modelchoicefield.ModelChoiceFieldTests)", "test_result_cache_not_shared (model_forms.test_modelchoicefield.ModelChoiceFieldTests)"]}
{"instance_id": "django__django-14997", "tests_passing_in_original_repo": ["test_references_column (backends.test_ddl_references.ColumnsTests)", "test_references_table (backends.test_ddl_references.ColumnsTests)", "test_rename_column_references (backends.test_ddl_references.ColumnsTests)", "test_rename_table_references (backends.test_ddl_references.ColumnsTests)", "test_repr (backends.test_ddl_references.ColumnsTests)", "test_str (backends.test_ddl_references.ColumnsTests)", "test_references_column (backends.test_ddl_references.ExpressionsTests)", "test_references_table (backends.test_ddl_references.ExpressionsTests)", "test_rename_column_references (backends.test_ddl_references.ExpressionsTests)", "test_rename_table_references (backends.test_ddl_references.ExpressionsTests)", "test_str (backends.test_ddl_references.ExpressionsTests)", "test_references_column (backends.test_ddl_references.ForeignKeyNameTests)", "test_references_table (backends.test_ddl_references.ForeignKeyNameTests)", "test_rename_column_references (backends.test_ddl_references.ForeignKeyNameTests)", "test_rename_table_references (backends.test_ddl_references.ForeignKeyNameTests)", "test_repr (backends.test_ddl_references.ForeignKeyNameTests)", "test_str (backends.test_ddl_references.ForeignKeyNameTests)", "test_references_column (backends.test_ddl_references.IndexNameTests)", "test_references_table (backends.test_ddl_references.IndexNameTests)", "test_rename_column_references (backends.test_ddl_references.IndexNameTests)", "test_rename_table_references (backends.test_ddl_references.IndexNameTests)", "test_repr (backends.test_ddl_references.IndexNameTests)", "test_str (backends.test_ddl_references.IndexNameTests)", "test_references_column (backends.test_ddl_references.StatementTests)", "test_references_table (backends.test_ddl_references.StatementTests)", "test_rename_column_references (backends.test_ddl_references.StatementTests)", "test_rename_table_references (backends.test_ddl_references.StatementTests)", "test_repr (backends.test_ddl_references.StatementTests)", "test_str (backends.test_ddl_references.StatementTests)", "test_references_table (backends.test_ddl_references.TableTests)", "test_rename_table_references (backends.test_ddl_references.TableTests)", "test_repr (backends.test_ddl_references.TableTests)", "test_str (backends.test_ddl_references.TableTests)", "test_reference_field_by_through_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_from_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_name (migrations.test_operations.FieldOperationTests)", "test_references_field_by_remote_field_model (migrations.test_operations.FieldOperationTests)", "test_references_field_by_through (migrations.test_operations.FieldOperationTests)", "test_references_field_by_to_fields (migrations.test_operations.FieldOperationTests)", "test_references_model (migrations.test_operations.FieldOperationTests)", "Tests the AddField operation on TextField/BinaryField.", "Tests the AddField operation on TextField.", "test_add_constraint (migrations.test_operations.OperationTests)", "test_add_constraint_combinable (migrations.test_operations.OperationTests)", "test_add_constraint_percent_escaping (migrations.test_operations.OperationTests)", "test_add_covering_unique_constraint (migrations.test_operations.OperationTests)", "test_add_deferred_unique_constraint (migrations.test_operations.OperationTests)", "Tests the AddField operation.", "Tests the AddField operation with a ManyToManyField.", "Tests the AddField operation's state alteration", "test_add_func_index (migrations.test_operations.OperationTests)", "test_add_func_unique_constraint (migrations.test_operations.OperationTests)", "Test the AddIndex operation.", "test_add_index_state_forwards (migrations.test_operations.OperationTests)", "test_add_or_constraint (migrations.test_operations.OperationTests)", "test_add_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the AlterField operation.", "AlterField operation is a noop when adding only a db_column and the", "test_alter_field_m2m (migrations.test_operations.OperationTests)", "Tests the AlterField operation on primary keys (for things like PostgreSQL's SERIAL weirdness)", "Tests the AlterField operation on primary keys changes any FKs pointing to it.", "test_alter_field_pk_mti_fk (migrations.test_operations.OperationTests)", "If AlterField doesn't reload state appropriately, the second AlterField", "test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_on_fk_with_to_field_target_type_change (migrations.test_operations.OperationTests)", "Test AlterField operation with an index to ensure indexes created via", "Creating and then altering an FK works correctly", "Altering an FK to a non-FK works (#23244)", "Tests the AlterIndexTogether operation.", "test_alter_index_together_remove (migrations.test_operations.OperationTests)", "test_alter_index_together_remove_with_unique_together (migrations.test_operations.OperationTests)", "The managers on a model are set.", "Tests the AlterModelOptions operation.", "The AlterModelOptions operation removes keys from the dict (#23121)", "Tests the AlterModelTable operation.", "AlterModelTable should rename auto-generated M2M tables.", "Tests the AlterModelTable operation if the table name is set to None.", "Tests the AlterModelTable operation if the table name is not changed.", "Tests the AlterOrderWithRespectTo operation.", "Tests the AlterUniqueTogether operation.", "test_alter_unique_together_remove (migrations.test_operations.OperationTests)", "A field may be migrated from AutoField to BigAutoField.", "Column names that are SQL keywords shouldn't cause problems when used", "Tests the CreateModel operation.", "Tests the CreateModel operation on a multi-table inheritance setup.", "Test the creation of a model with a ManyToMany field and the", "test_create_model_with_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_deferred_unique_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_base (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_field_name (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_manager_name (migrations.test_operations.OperationTests)", "test_create_model_with_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the CreateModel operation directly followed by an", "CreateModel ignores proxy models.", "CreateModel ignores unmanaged models.", "Tests the DeleteModel operation.", "test_delete_mti_model (migrations.test_operations.OperationTests)", "Tests the DeleteModel operation ignores proxy models.", "A model with BigAutoField can be created.", "test_remove_constraint (migrations.test_operations.OperationTests)", "test_remove_covering_unique_constraint (migrations.test_operations.OperationTests)", "test_remove_deferred_unique_constraint (migrations.test_operations.OperationTests)", "Tests the RemoveField operation.", "test_remove_field_m2m (migrations.test_operations.OperationTests)", "test_remove_field_m2m_with_through (migrations.test_operations.OperationTests)", "Tests the RemoveField operation on a foreign key.", "test_remove_func_index (migrations.test_operations.OperationTests)", "test_remove_func_unique_constraint (migrations.test_operations.OperationTests)", "Test the RemoveIndex operation.", "test_remove_index_state_forwards (migrations.test_operations.OperationTests)", "test_remove_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the RenameField operation.", "test_rename_field_case (migrations.test_operations.OperationTests)", "If RenameField doesn't reload state appropriately, the AlterField", "test_rename_field_with_db_column (migrations.test_operations.OperationTests)", "RenameModel renames a many-to-many column after a RenameField.", "test_rename_m2m_target_model (migrations.test_operations.OperationTests)", "test_rename_m2m_through_model (migrations.test_operations.OperationTests)", "test_rename_missing_field (migrations.test_operations.OperationTests)", "Tests the RenameModel operation.", "RenameModel operations shouldn't trigger the caching of rendered apps", "test_rename_model_with_m2m (migrations.test_operations.OperationTests)", "Tests the RenameModel operation on model with self referential FK.", "test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)", "Tests the RenameModel operation on a model which has a superclass that", "test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests)", "test_repoint_field_m2m (migrations.test_operations.OperationTests)", "Tests the RunPython operation", "Tests the RunPython operation correctly handles the \"atomic\" keyword", "#24098 - Tests no-op RunPython operations.", "#24282 - Model changes to a FK reverse side update the model", "Tests the RunSQL operation.", "test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests)", "#24098 - Tests no-op RunSQL operations.", "#23426 - RunSQL should accept parameters.", "#23426 - RunSQL should fail when a list of statements with an incorrect", "Tests the SeparateDatabaseAndState operation.", "A complex SeparateDatabaseAndState operation: Multiple operations both", "A field may be migrated from SmallAutoField to AutoField.", "A field may be migrated from SmallAutoField to BigAutoField.", "The CreateTable operation ignores swapped models.", "Tests the DeleteModel operation ignores swapped models.", "Add/RemoveIndex operations ignore swapped models.", "test_references_model_mixin (migrations.test_operations.TestCreateModel)"]}
{"instance_id": "django__django-14999", "tests_passing_in_original_repo": ["test_reference_field_by_through_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_from_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_name (migrations.test_operations.FieldOperationTests)", "test_references_field_by_remote_field_model (migrations.test_operations.FieldOperationTests)", "test_references_field_by_through (migrations.test_operations.FieldOperationTests)", "test_references_field_by_to_fields (migrations.test_operations.FieldOperationTests)", "test_references_model (migrations.test_operations.FieldOperationTests)", "Tests the AddField operation on TextField/BinaryField.", "Tests the AddField operation on TextField.", "test_add_constraint (migrations.test_operations.OperationTests)", "test_add_constraint_combinable (migrations.test_operations.OperationTests)", "test_add_constraint_percent_escaping (migrations.test_operations.OperationTests)", "test_add_covering_unique_constraint (migrations.test_operations.OperationTests)", "test_add_deferred_unique_constraint (migrations.test_operations.OperationTests)", "Tests the AddField operation.", "Tests the AddField operation with a ManyToManyField.", "Tests the AddField operation's state alteration", "test_add_func_index (migrations.test_operations.OperationTests)", "test_add_func_unique_constraint (migrations.test_operations.OperationTests)", "Test the AddIndex operation.", "test_add_index_state_forwards (migrations.test_operations.OperationTests)", "test_add_or_constraint (migrations.test_operations.OperationTests)", "test_add_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the AlterField operation.", "AlterField operation is a noop when adding only a db_column and the", "test_alter_field_m2m (migrations.test_operations.OperationTests)", "Tests the AlterField operation on primary keys (for things like PostgreSQL's SERIAL weirdness)", "Tests the AlterField operation on primary keys changes any FKs pointing to it.", "test_alter_field_pk_mti_fk (migrations.test_operations.OperationTests)", "If AlterField doesn't reload state appropriately, the second AlterField", "test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_on_fk_with_to_field_target_type_change (migrations.test_operations.OperationTests)", "test_alter_field_with_func_index (migrations.test_operations.OperationTests)", "test_alter_field_with_func_unique_constraint (migrations.test_operations.OperationTests)", "Test AlterField operation with an index to ensure indexes created via", "Creating and then altering an FK works correctly", "Altering an FK to a non-FK works (#23244)", "Tests the AlterIndexTogether operation.", "test_alter_index_together_remove (migrations.test_operations.OperationTests)", "test_alter_index_together_remove_with_unique_together (migrations.test_operations.OperationTests)", "The managers on a model are set.", "Tests the AlterModelOptions operation.", "The AlterModelOptions operation removes keys from the dict (#23121)", "Tests the AlterModelTable operation.", "AlterModelTable should rename auto-generated M2M tables.", "Tests the AlterModelTable operation if the table name is set to None.", "Tests the AlterModelTable operation if the table name is not changed.", "Tests the AlterOrderWithRespectTo operation.", "Tests the AlterUniqueTogether operation.", "test_alter_unique_together_remove (migrations.test_operations.OperationTests)", "A field may be migrated from AutoField to BigAutoField.", "Column names that are SQL keywords shouldn't cause problems when used", "Tests the CreateModel operation.", "Tests the CreateModel operation on a multi-table inheritance setup.", "Test the creation of a model with a ManyToMany field and the", "test_create_model_with_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_deferred_unique_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_base (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_field_name (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_manager_name (migrations.test_operations.OperationTests)", "test_create_model_with_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the CreateModel operation directly followed by an", "CreateModel ignores proxy models.", "CreateModel ignores unmanaged models.", "Tests the DeleteModel operation.", "test_delete_mti_model (migrations.test_operations.OperationTests)", "Tests the DeleteModel operation ignores proxy models.", "A model with BigAutoField can be created.", "test_remove_constraint (migrations.test_operations.OperationTests)", "test_remove_covering_unique_constraint (migrations.test_operations.OperationTests)", "test_remove_deferred_unique_constraint (migrations.test_operations.OperationTests)", "Tests the RemoveField operation.", "test_remove_field_m2m (migrations.test_operations.OperationTests)", "test_remove_field_m2m_with_through (migrations.test_operations.OperationTests)", "Tests the RemoveField operation on a foreign key.", "test_remove_func_index (migrations.test_operations.OperationTests)", "test_remove_func_unique_constraint (migrations.test_operations.OperationTests)", "Test the RemoveIndex operation.", "test_remove_index_state_forwards (migrations.test_operations.OperationTests)", "test_remove_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the RenameField operation.", "test_rename_field_case (migrations.test_operations.OperationTests)", "If RenameField doesn't reload state appropriately, the AlterField", "test_rename_field_with_db_column (migrations.test_operations.OperationTests)", "RenameModel renames a many-to-many column after a RenameField.", "test_rename_m2m_target_model (migrations.test_operations.OperationTests)", "test_rename_m2m_through_model (migrations.test_operations.OperationTests)", "test_rename_missing_field (migrations.test_operations.OperationTests)", "Tests the RenameModel operation.", "RenameModel operations shouldn't trigger the caching of rendered apps", "test_rename_model_with_m2m (migrations.test_operations.OperationTests)", "Tests the RenameModel operation on model with self referential FK.", "test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)", "Tests the RenameModel operation on a model which has a superclass that", "test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests)", "test_repoint_field_m2m (migrations.test_operations.OperationTests)", "Tests the RunPython operation", "Tests the RunPython operation correctly handles the \"atomic\" keyword", "#24098 - Tests no-op RunPython operations.", "#24282 - Model changes to a FK reverse side update the model", "Tests the RunSQL operation.", "test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests)", "#24098 - Tests no-op RunSQL operations.", "#23426 - RunSQL should accept parameters.", "#23426 - RunSQL should fail when a list of statements with an incorrect", "Tests the SeparateDatabaseAndState operation.", "A complex SeparateDatabaseAndState operation: Multiple operations both", "A field may be migrated from SmallAutoField to AutoField.", "A field may be migrated from SmallAutoField to BigAutoField.", "The CreateTable operation ignores swapped models.", "Tests the DeleteModel operation ignores swapped models.", "Add/RemoveIndex operations ignore swapped models.", "test_references_model_mixin (migrations.test_operations.TestCreateModel)"]}
{"instance_id": "django__django-15061", "tests_passing_in_original_repo": ["test_bad_choice (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_disabled_has_changed (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_form_as_table (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_form_as_table_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "Test when the first widget's data has changed.", "Test when the last widget's data has changed. This ensures that it is", "test_has_changed_no_initial (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_has_changed_same (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "If insufficient data is provided, None is substituted.", "test_render_required_attributes (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)", "test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)", "test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)", "test_splitdatetimefield_changed (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)"]}
{"instance_id": "django__django-15202", "tests_passing_in_original_repo": ["test_urlfield_clean (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_clean_invalid (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_clean_not_required (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_clean_required (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_strip_on_none_value (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_unable_to_set_strip_kwarg (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_widget (forms_tests.field_tests.test_urlfield.URLFieldTest)", "test_urlfield_widget_max_min_length (forms_tests.field_tests.test_urlfield.URLFieldTest)"]}
{"instance_id": "django__django-15213", "tests_passing_in_original_repo": ["test_aggregate_alias (annotations.tests.AliasTests)", "test_alias_after_annotation (annotations.tests.AliasTests)", "test_alias_annotate_with_aggregation (annotations.tests.AliasTests)", "test_alias_annotation_expression (annotations.tests.AliasTests)", "test_alias_default_alias_expression (annotations.tests.AliasTests)", "test_basic_alias (annotations.tests.AliasTests)", "test_basic_alias_annotation (annotations.tests.AliasTests)", "test_basic_alias_f_annotation (annotations.tests.AliasTests)", "test_basic_alias_f_transform_annotation (annotations.tests.AliasTests)", "test_dates_alias (annotations.tests.AliasTests)", "test_datetimes_alias (annotations.tests.AliasTests)", "test_defer_only_alias (annotations.tests.AliasTests)", "test_filter_alias_agg_with_double_f (annotations.tests.AliasTests)", "test_filter_alias_with_double_f (annotations.tests.AliasTests)", "test_filter_alias_with_f (annotations.tests.AliasTests)", "test_joined_alias_annotation (annotations.tests.AliasTests)", "test_order_by_alias (annotations.tests.AliasTests)", "test_order_by_alias_aggregate (annotations.tests.AliasTests)", "test_overwrite_alias_with_annotation (annotations.tests.AliasTests)", "test_overwrite_annotation_with_alias (annotations.tests.AliasTests)", "test_update_with_alias (annotations.tests.AliasTests)", "test_values_alias (annotations.tests.AliasTests)", "test_aggregate_over_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotate_exists (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotate_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_aggregate_with_m2o (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_exists_aggregate_values_chaining (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_filter_with_subquery (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_in_f_grouped_by_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_reverse_m2m (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_subquery_and_aggregate_values_chaining (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_subquery_outerref_transform (annotations.tests.NonAggregateAnnotationTestCase)", "test_annotation_with_m2m (annotations.tests.NonAggregateAnnotationTestCase)", "test_arguments_must_be_expressions (annotations.tests.NonAggregateAnnotationTestCase)", "test_basic_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_basic_f_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_boolean_value_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_chaining_annotation_filter_with_m2m (annotations.tests.NonAggregateAnnotationTestCase)", "test_chaining_transforms (annotations.tests.NonAggregateAnnotationTestCase)", "Columns are aligned in the correct order for resolve_columns. This test", "test_column_field_ordering_with_deferred (annotations.tests.NonAggregateAnnotationTestCase)", "test_combined_annotation_commutative (annotations.tests.NonAggregateAnnotationTestCase)", "test_combined_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase)", "test_combined_f_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase)", "test_custom_functions (annotations.tests.NonAggregateAnnotationTestCase)", "test_custom_functions_can_ref_other_functions (annotations.tests.NonAggregateAnnotationTestCase)", "test_custom_transform_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_decimal_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "Deferred attributes can be referenced by an annotation,", "test_empty_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_empty_queryset_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_filter_agg_with_double_f (annotations.tests.NonAggregateAnnotationTestCase)", "test_filter_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_filter_annotation_with_double_f (annotations.tests.NonAggregateAnnotationTestCase)", "test_filter_annotation_with_f (annotations.tests.NonAggregateAnnotationTestCase)", "test_filter_decimal_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_filter_wrong_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_grouping_by_q_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_joined_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_joined_transformed_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_mixed_type_annotation_date_interval (annotations.tests.NonAggregateAnnotationTestCase)", "test_mixed_type_annotation_numbers (annotations.tests.NonAggregateAnnotationTestCase)", "Fields on an inherited model can be referenced by an", "Annotating None onto a model round-trips", "test_order_by_aggregate (annotations.tests.NonAggregateAnnotationTestCase)", "test_order_by_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "test_q_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase)", "test_raw_sql_with_inherited_field (annotations.tests.NonAggregateAnnotationTestCase)", "test_update_with_annotation (annotations.tests.NonAggregateAnnotationTestCase)", "Annotations can reference fields in a values clause,", "test_values_with_pk_annotation (annotations.tests.NonAggregateAnnotationTestCase)"]}
{"instance_id": "django__django-15252", "tests_passing_in_original_repo": ["mark_expected_failures_and_skips() isn't called unless", "test_migrate_test_setting_false (backends.base.test_creation.TestDbCreationTests)", "test_migrate_test_setting_true (backends.base.test_creation.TestDbCreationTests)", "test_custom_test_name (backends.base.test_creation.TestDbSignatureTests)", "test_custom_test_name_with_test_prefix (backends.base.test_creation.TestDbSignatureTests)", "test_default_name (backends.base.test_creation.TestDbSignatureTests)", "test_circular_reference (backends.base.test_creation.TestDeserializeDbFromString)", "test_circular_reference_with_natural_key (backends.base.test_creation.TestDeserializeDbFromString)", "test_self_reference (backends.base.test_creation.TestDeserializeDbFromString)", "test_serialize_db_to_string_base_manager (backends.base.test_creation.TestDeserializeDbFromString)", "test_mark_expected_failures_and_skips (backends.base.test_creation.TestMarkTests)", "test_alter_id_type_with_fk (migrations.test_executor.ExecutorTests)", "Applying all replaced migrations marks replacement as applied (#24628).", "An atomic operation is properly rolled back inside a non-atomic", "Regression test for #22325 - references to a custom user model defined in the", "executor.detect_soft_applied() detects ManyToManyField tables from an", "Re-planning a full migration of a fully-migrated set doesn't", "test_migrate_backward_to_squashed_migration (migrations.test_executor.ExecutorTests)", "A new squash migration will be marked as applied even if all its", "test_migrate_marks_replacement_unapplied (migrations.test_executor.ExecutorTests)", "Migrations are applied and recorded atomically.", "Migrations are not recorded if deferred SQL application fails.", "Although the MigrationExecutor interfaces allows for mixed migration", "Applying a non-atomic migration works as expected.", "#24129 - Tests callback process", "Tests running a simple set of migrations.", "Tests running a squashed migration from zero (should ignore what it replaces)", "Tests detection of initial migrations already having been applied.", "#26647 - Unrelated applied migrations should be part of the final", "#24123 - All models of apps being unapplied which are", "#24123 - All models of apps already applied which are", "If the current state satisfies the given target, do nothing.", "Minimize unnecessary rollbacks in connected apps.", "Minimize rollbacks when target has multiple in-app children."]}
{"instance_id": "django__django-15320", "tests_passing_in_original_repo": ["test_aggregate_rawsql_annotation (expressions.tests.BasicExpressionsTests)", "test_aggregate_subquery_annotation (expressions.tests.BasicExpressionsTests)", "test_annotate_values_aggregate (expressions.tests.BasicExpressionsTests)", "test_annotate_values_count (expressions.tests.BasicExpressionsTests)", "test_annotate_values_filter (expressions.tests.BasicExpressionsTests)", "test_annotation_with_nested_outerref (expressions.tests.BasicExpressionsTests)", "test_annotation_with_outerref (expressions.tests.BasicExpressionsTests)", "test_annotations_within_subquery (expressions.tests.BasicExpressionsTests)", "test_arithmetic (expressions.tests.BasicExpressionsTests)", "test_boolean_expression_combined (expressions.tests.BasicExpressionsTests)", "test_boolean_expression_combined_with_empty_Q (expressions.tests.BasicExpressionsTests)", "test_boolean_expression_in_Q (expressions.tests.BasicExpressionsTests)", "test_case_in_filter_if_boolean_output_field (expressions.tests.BasicExpressionsTests)", "test_exist_single_field_output_field (expressions.tests.BasicExpressionsTests)", "test_exists_in_filter (expressions.tests.BasicExpressionsTests)", "test_explicit_output_field (expressions.tests.BasicExpressionsTests)", "test_filter_inter_attribute (expressions.tests.BasicExpressionsTests)", "test_filter_with_join (expressions.tests.BasicExpressionsTests)", "test_filtering_on_annotate_that_uses_q (expressions.tests.BasicExpressionsTests)", "test_filtering_on_q_that_is_boolean (expressions.tests.BasicExpressionsTests)", "test_filtering_on_rawsql_that_is_boolean (expressions.tests.BasicExpressionsTests)", "test_in_subquery (expressions.tests.BasicExpressionsTests)", "test_incorrect_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_incorrect_joined_field_in_F_expression (expressions.tests.BasicExpressionsTests)", "test_nested_outerref_with_function (expressions.tests.BasicExpressionsTests)", "test_nested_subquery (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_join_outer_ref (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_2 (expressions.tests.BasicExpressionsTests)", "test_nested_subquery_outer_ref_with_autofield (expressions.tests.BasicExpressionsTests)", "test_new_object_create (expressions.tests.BasicExpressionsTests)", "test_new_object_save (expressions.tests.BasicExpressionsTests)", "test_object_create_with_aggregate (expressions.tests.BasicExpressionsTests)", "test_object_update (expressions.tests.BasicExpressionsTests)", "test_object_update_fk (expressions.tests.BasicExpressionsTests)", "test_object_update_unsaved_objects (expressions.tests.BasicExpressionsTests)", "test_order_by_exists (expressions.tests.BasicExpressionsTests)", "test_order_by_multiline_sql (expressions.tests.BasicExpressionsTests)", "test_order_of_operations (expressions.tests.BasicExpressionsTests)", "test_outerref (expressions.tests.BasicExpressionsTests)", "test_outerref_mixed_case_table_name (expressions.tests.BasicExpressionsTests)", "test_outerref_with_operator (expressions.tests.BasicExpressionsTests)", "test_parenthesis_priority (expressions.tests.BasicExpressionsTests)", "test_pickle_expression (expressions.tests.BasicExpressionsTests)", "test_subquery (expressions.tests.BasicExpressionsTests)", "test_subquery_eq (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_aggregate (expressions.tests.BasicExpressionsTests)", "test_subquery_filter_by_lazy (expressions.tests.BasicExpressionsTests)", "test_subquery_group_by_outerref_in_filter (expressions.tests.BasicExpressionsTests)", "test_subquery_in_filter (expressions.tests.BasicExpressionsTests)", "test_subquery_references_joined_table_twice (expressions.tests.BasicExpressionsTests)", "test_ticket_11722_iexact_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_16731_startswith_lookup (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_chained_filters (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_join_reuse (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering (expressions.tests.BasicExpressionsTests)", "test_ticket_18375_kwarg_ordering_2 (expressions.tests.BasicExpressionsTests)", "test_update (expressions.tests.BasicExpressionsTests)", "test_update_inherited_field_value (expressions.tests.BasicExpressionsTests)", "test_update_with_fk (expressions.tests.BasicExpressionsTests)", "test_update_with_none (expressions.tests.BasicExpressionsTests)", "test_uuid_pk_subquery (expressions.tests.BasicExpressionsTests)", "test_optimizations (expressions.tests.ExistsTests)", "test_lefthand_addition (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_and (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_left_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_or (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_right_shift_operator (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor_null (expressions.tests.ExpressionOperatorTests)", "test_lefthand_bitwise_xor_right_null (expressions.tests.ExpressionOperatorTests)", "test_lefthand_division (expressions.tests.ExpressionOperatorTests)", "test_lefthand_modulo (expressions.tests.ExpressionOperatorTests)", "test_lefthand_modulo_null (expressions.tests.ExpressionOperatorTests)", "test_lefthand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_lefthand_power (expressions.tests.ExpressionOperatorTests)", "test_lefthand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_lefthand_transformed_field_bitwise_or (expressions.tests.ExpressionOperatorTests)", "test_right_hand_addition (expressions.tests.ExpressionOperatorTests)", "test_right_hand_division (expressions.tests.ExpressionOperatorTests)", "test_right_hand_modulo (expressions.tests.ExpressionOperatorTests)", "test_right_hand_multiplication (expressions.tests.ExpressionOperatorTests)", "test_right_hand_subtraction (expressions.tests.ExpressionOperatorTests)", "test_righthand_power (expressions.tests.ExpressionOperatorTests)", "Complex expressions of different connection types are possible.", "test_decimal_expression (expressions.tests.ExpressionsNumericTests)", "We can fill a value in all objects with an other value of the", "test_filter_decimal_expression (expressions.tests.ExpressionsNumericTests)", "We can filter for objects, where a value is not equals the value", "We can increment a value of all objects in a query set.", "test_F_reuse (expressions.tests.ExpressionsTests)", "Special characters (e.g. %, _ and \\) stored in database are", "test_date_case_subtraction (expressions.tests.FTimeDeltaTests)", "test_date_comparison (expressions.tests.FTimeDeltaTests)", "test_date_minus_duration (expressions.tests.FTimeDeltaTests)", "test_date_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_date_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction (expressions.tests.FTimeDeltaTests)", "test_datetime_subtraction_microseconds (expressions.tests.FTimeDeltaTests)", "test_delta_add (expressions.tests.FTimeDeltaTests)", "test_delta_subtract (expressions.tests.FTimeDeltaTests)", "test_delta_update (expressions.tests.FTimeDeltaTests)", "test_duration_expressions (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime (expressions.tests.FTimeDeltaTests)", "test_duration_with_datetime_microseconds (expressions.tests.FTimeDeltaTests)", "test_durationfield_add (expressions.tests.FTimeDeltaTests)", "test_durationfield_multiply_divide (expressions.tests.FTimeDeltaTests)", "test_exclude (expressions.tests.FTimeDeltaTests)", "test_invalid_operator (expressions.tests.FTimeDeltaTests)", "test_mixed_comparisons2 (expressions.tests.FTimeDeltaTests)", "test_multiple_query_compilation (expressions.tests.FTimeDeltaTests)", "test_negative_timedelta_update (expressions.tests.FTimeDeltaTests)", "test_query_clone (expressions.tests.FTimeDeltaTests)", "test_time_subquery_subtraction (expressions.tests.FTimeDeltaTests)", "test_time_subtraction (expressions.tests.FTimeDeltaTests)", "test_month_aggregation (expressions.tests.FieldTransformTests)", "test_multiple_transforms_in_values (expressions.tests.FieldTransformTests)", "test_transform_in_values (expressions.tests.FieldTransformTests)", "This tests that SQL injection isn't possible using compilation of", "test_expressions_in_lookups_join_choice (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_datetimes (expressions.tests.IterableLookupInnerExpressionsTests)", "test_in_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_range_lookup_allows_F_expressions_and_expressions_for_integers (expressions.tests.IterableLookupInnerExpressionsTests)", "test_range_lookup_namedtuple (expressions.tests.IterableLookupInnerExpressionsTests)", "test_compile_unresolved (expressions.tests.ValueTests)", "test_deconstruct (expressions.tests.ValueTests)", "test_deconstruct_output_field (expressions.tests.ValueTests)", "test_equal (expressions.tests.ValueTests)", "test_equal_output_field (expressions.tests.ValueTests)", "test_hash (expressions.tests.ValueTests)", "test_output_field_decimalfield (expressions.tests.ValueTests)", "The output field for a given Value doesn't get cleaned & validated,", "test_raise_empty_expressionlist (expressions.tests.ValueTests)", "test_repr (expressions.tests.ValueTests)", "test_resolve_output_field (expressions.tests.ValueTests)", "test_resolve_output_field_failure (expressions.tests.ValueTests)", "test_update_TimeField_using_Value (expressions.tests.ValueTests)", "test_update_UUIDField_using_Value (expressions.tests.ValueTests)", "test_and (expressions.tests.CombinableTests)", "test_negation (expressions.tests.CombinableTests)", "test_or (expressions.tests.CombinableTests)", "test_reversed_and (expressions.tests.CombinableTests)", "test_reversed_or (expressions.tests.CombinableTests)", "test_resolve_output_field (expressions.tests.CombinedExpressionTests)", "test_empty_group_by (expressions.tests.ExpressionWrapperTests)", "test_non_empty_group_by (expressions.tests.ExpressionWrapperTests)", "test_deconstruct (expressions.tests.FTests)", "test_deepcopy (expressions.tests.FTests)", "test_equal (expressions.tests.FTests)", "test_hash (expressions.tests.FTests)", "test_not_equal_Value (expressions.tests.FTests)", "test_equal (expressions.tests.OrderByTests)", "test_hash (expressions.tests.OrderByTests)", "test_aggregates (expressions.tests.ReprTests)", "test_distinct_aggregates (expressions.tests.ReprTests)", "test_expressions (expressions.tests.ReprTests)", "test_filtered_aggregates (expressions.tests.ReprTests)", "test_functions (expressions.tests.ReprTests)", "test_equal (expressions.tests.SimpleExpressionTests)", "test_hash (expressions.tests.SimpleExpressionTests)"]}
{"instance_id": "django__django-15347", "tests_passing_in_original_repo": ["test_add (messages_tests.test_cookie.CookieTests)", "test_add_lazy_translation (messages_tests.test_cookie.CookieTests)", "test_add_update (messages_tests.test_cookie.CookieTests)", "test_context_processor_message_levels (messages_tests.test_cookie.CookieTests)", "CookieStorage honors SESSION_COOKIE_DOMAIN, SESSION_COOKIE_SECURE, and", "test_custom_tags (messages_tests.test_cookie.CookieTests)", "test_default_level (messages_tests.test_cookie.CookieTests)", "test_existing_add (messages_tests.test_cookie.CookieTests)", "test_existing_add_read_update (messages_tests.test_cookie.CookieTests)", "Reading the existing storage doesn't cause the data to be lost.", "test_existing_read_add_update (messages_tests.test_cookie.CookieTests)", "With the message middleware enabled, messages are properly stored and", "test_get (messages_tests.test_cookie.CookieTests)", "test_get_bad_cookie (messages_tests.test_cookie.CookieTests)", "test_high_level (messages_tests.test_cookie.CookieTests)", "A complex nested data structure containing Message", "test_level_tag (messages_tests.test_cookie.CookieTests)", "test_low_level (messages_tests.test_cookie.CookieTests)", "If the data exceeds what is allowed in a cookie, older messages are", "test_message_rfc6265 (messages_tests.test_cookie.CookieTests)", "When the middleware is disabled, an exception is raised when one", "When the middleware is disabled, an exception is not raised", "Messages persist properly when multiple POSTs are made before a GET.", "test_no_update (messages_tests.test_cookie.CookieTests)", "test_repr (messages_tests.test_cookie.CookieTests)", "A message containing SafeData is keeping its safe status when", "test_settings_level (messages_tests.test_cookie.CookieTests)", "test_tags (messages_tests.test_cookie.CookieTests)", "test_with_template_response (messages_tests.test_cookie.CookieTests)"]}
{"instance_id": "django__django-15388", "tests_passing_in_original_repo": ["test_get_template_directories (template_tests.test_autoreloader.Jinja2TemplateReloadTests)", "test_reset_all_loaders (template_tests.test_autoreloader.Jinja2TemplateReloadTests)", "test_watch_for_template_changes (template_tests.test_autoreloader.Jinja2TemplateReloadTests)", "test_get_template_directories (template_tests.test_autoreloader.TemplateReloadTests)", "test_non_template_changed (template_tests.test_autoreloader.TemplateReloadTests)", "test_reset_all_loaders (template_tests.test_autoreloader.TemplateReloadTests)", "test_template_changed (template_tests.test_autoreloader.TemplateReloadTests)", "test_template_dirs_normalized_to_paths (template_tests.test_autoreloader.TemplateReloadTests)", "test_watch_for_template_changes (template_tests.test_autoreloader.TemplateReloadTests)"]}
{"instance_id": "django__django-15400", "tests_passing_in_original_repo": ["test_bool (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_bytes (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_class (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_cmp (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_contains (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_copy_class (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_copy_class_no_evaluation (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_copy_list (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_copy_list_no_evaluation (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_deepcopy_class (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_deepcopy_class_no_evaluation (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_deepcopy_list (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_deepcopy_list_no_evaluation (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_delattr (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_delitem (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_dir (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_getattr (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_getitem (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_gt (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_hash (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_iter (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_len (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_lt (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_pickle (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_setattr (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_setattr2 (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_setitem (utils_tests.test_lazyobject.LazyObjectTestCase)", "test_text (utils_tests.test_lazyobject.LazyObjectTestCase)", "Test in a fairly synthetic setting.", "test_bool (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_bytes (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_class (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_cmp (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_contains (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_copy_class (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_copy_class_no_evaluation (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_copy_list (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_copy_list_no_evaluation (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_deepcopy_class (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_deepcopy_class_no_evaluation (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_deepcopy_list (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_deepcopy_list_no_evaluation (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_delattr (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_delitem (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_dict (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_dir (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_getattr (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_getitem (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_gt (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_hash (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_iter (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_len (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_list_set (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_lt (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_none (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_pickle (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_repr (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_setattr (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_setattr2 (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_setitem (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_text (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)", "test_trace (utils_tests.test_lazyobject.SimpleLazyObjectTestCase)"]}
{"instance_id": "django__django-15498", "tests_passing_in_original_repo": ["test_404 (view_tests.tests.test_static.StaticHelperTest)", "The static view should stream files in chunks to avoid large memory usage", "test_copes_with_empty_path_component (view_tests.tests.test_static.StaticHelperTest)", "No URLs are served if DEBUG=False.", "test_empty_prefix (view_tests.tests.test_static.StaticHelperTest)", "test_index (view_tests.tests.test_static.StaticHelperTest)", "test_index_custom_template (view_tests.tests.test_static.StaticHelperTest)", "test_index_subdir (view_tests.tests.test_static.StaticHelperTest)", "Handle bogus If-Modified-Since values gracefully", "Handle even more bogus If-Modified-Since values gracefully", "test_is_modified_since (view_tests.tests.test_static.StaticHelperTest)", "test_not_modified_since (view_tests.tests.test_static.StaticHelperTest)", "test_prefix (view_tests.tests.test_static.StaticHelperTest)", "The static view can serve static media", "No URLs are served if prefix contains a netloc part.", "test_unknown_mime_type (view_tests.tests.test_static.StaticHelperTest)", "test_404 (view_tests.tests.test_static.StaticTests)", "test_copes_with_empty_path_component (view_tests.tests.test_static.StaticTests)", "test_index (view_tests.tests.test_static.StaticTests)", "test_index_custom_template (view_tests.tests.test_static.StaticTests)", "test_index_subdir (view_tests.tests.test_static.StaticTests)", "test_is_modified_since (view_tests.tests.test_static.StaticTests)", "test_not_modified_since (view_tests.tests.test_static.StaticTests)", "test_unknown_mime_type (view_tests.tests.test_static.StaticTests)", "A floating point mtime does not disturb was_modified_since (#18675)."]}
{"instance_id": "django__django-15695", "tests_passing_in_original_repo": ["test_reference_field_by_through_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_from_fields (migrations.test_operations.FieldOperationTests)", "test_references_field_by_name (migrations.test_operations.FieldOperationTests)", "test_references_field_by_remote_field_model (migrations.test_operations.FieldOperationTests)", "test_references_field_by_through (migrations.test_operations.FieldOperationTests)", "test_references_field_by_to_fields (migrations.test_operations.FieldOperationTests)", "test_references_model (migrations.test_operations.FieldOperationTests)", "Tests the AddField operation on TextField/BinaryField.", "Tests the AddField operation on TextField.", "test_add_constraint (migrations.test_operations.OperationTests)", "test_add_constraint_combinable (migrations.test_operations.OperationTests)", "test_add_constraint_percent_escaping (migrations.test_operations.OperationTests)", "test_add_covering_unique_constraint (migrations.test_operations.OperationTests)", "test_add_deferred_unique_constraint (migrations.test_operations.OperationTests)", "Tests the AddField operation.", "Tests the AddField operation with a ManyToManyField.", "Tests the AddField operation's state alteration", "test_add_func_index (migrations.test_operations.OperationTests)", "test_add_func_unique_constraint (migrations.test_operations.OperationTests)", "Test the AddIndex operation.", "test_add_index_state_forwards (migrations.test_operations.OperationTests)", "test_add_or_constraint (migrations.test_operations.OperationTests)", "test_add_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the AlterField operation.", "AlterField operation is a noop when adding only a db_column and the", "test_alter_field_m2m (migrations.test_operations.OperationTests)", "The AlterField operation on primary keys (things like PostgreSQL's", "Tests the AlterField operation on primary keys changes any FKs pointing to it.", "AlterField operation of db_collation on primary keys changes any FKs", "test_alter_field_pk_mti_and_fk_to_base (migrations.test_operations.OperationTests)", "test_alter_field_pk_mti_fk (migrations.test_operations.OperationTests)", "test_alter_field_reloads_state_fk_with_to_field_related_name_target_type_change (migrations.test_operations.OperationTests)", "If AlterField doesn't reload state appropriately, the second AlterField", "test_alter_field_reloads_state_on_fk_with_to_field_target_type_change (migrations.test_operations.OperationTests)", "test_alter_field_with_func_index (migrations.test_operations.OperationTests)", "test_alter_field_with_func_unique_constraint (migrations.test_operations.OperationTests)", "Test AlterField operation with an index to ensure indexes created via", "Creating and then altering an FK works correctly", "Altering an FK to a non-FK works (#23244)", "Tests the AlterIndexTogether operation.", "test_alter_index_together_remove (migrations.test_operations.OperationTests)", "test_alter_index_together_remove_with_unique_together (migrations.test_operations.OperationTests)", "The managers on a model are set.", "Tests the AlterModelOptions operation.", "The AlterModelOptions operation removes keys from the dict (#23121)", "Tests the AlterModelTable operation.", "AlterModelTable should rename auto-generated M2M tables.", "Tests the AlterModelTable operation if the table name is set to None.", "Tests the AlterModelTable operation if the table name is not changed.", "Tests the AlterOrderWithRespectTo operation.", "Tests the AlterUniqueTogether operation.", "test_alter_unique_together_remove (migrations.test_operations.OperationTests)", "A field may be migrated from AutoField to BigAutoField.", "Column names that are SQL keywords shouldn't cause problems when used", "Creation of models with a FK to a PK with db_collation.", "Tests the CreateModel operation.", "Tests the CreateModel operation on a multi-table inheritance setup.", "Test the creation of a model with a ManyToMany field and the", "test_create_model_with_boolean_expression_in_check_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_deferred_unique_constraint (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_base (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_field_name (migrations.test_operations.OperationTests)", "test_create_model_with_duplicate_manager_name (migrations.test_operations.OperationTests)", "test_create_model_with_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the CreateModel operation directly followed by an", "CreateModel ignores proxy models.", "CreateModel ignores unmanaged models.", "Tests the DeleteModel operation.", "test_delete_mti_model (migrations.test_operations.OperationTests)", "Tests the DeleteModel operation ignores proxy models.", "A model with BigAutoField can be created.", "test_remove_constraint (migrations.test_operations.OperationTests)", "test_remove_covering_unique_constraint (migrations.test_operations.OperationTests)", "test_remove_deferred_unique_constraint (migrations.test_operations.OperationTests)", "Tests the RemoveField operation.", "test_remove_field_m2m (migrations.test_operations.OperationTests)", "test_remove_field_m2m_with_through (migrations.test_operations.OperationTests)", "Tests the RemoveField operation on a foreign key.", "test_remove_func_index (migrations.test_operations.OperationTests)", "test_remove_func_unique_constraint (migrations.test_operations.OperationTests)", "Test the RemoveIndex operation.", "test_remove_index_state_forwards (migrations.test_operations.OperationTests)", "test_remove_partial_unique_constraint (migrations.test_operations.OperationTests)", "Tests the RenameField operation.", "test_rename_field_case (migrations.test_operations.OperationTests)", "If RenameField doesn't reload state appropriately, the AlterField", "test_rename_field_with_db_column (migrations.test_operations.OperationTests)", "test_rename_index (migrations.test_operations.OperationTests)", "test_rename_index_arguments (migrations.test_operations.OperationTests)", "test_rename_index_state_forwards (migrations.test_operations.OperationTests)", "test_rename_index_state_forwards_unnamed_index (migrations.test_operations.OperationTests)", "test_rename_index_unknown_unnamed_index (migrations.test_operations.OperationTests)", "test_rename_index_unnamed_index (migrations.test_operations.OperationTests)", "RenameModel renames a many-to-many column after a RenameField.", "test_rename_m2m_target_model (migrations.test_operations.OperationTests)", "test_rename_m2m_through_model (migrations.test_operations.OperationTests)", "test_rename_missing_field (migrations.test_operations.OperationTests)", "Tests the RenameModel operation.", "RenameModel operations shouldn't trigger the caching of rendered apps", "test_rename_model_with_db_table_noop (migrations.test_operations.OperationTests)", "test_rename_model_with_m2m (migrations.test_operations.OperationTests)", "Tests the RenameModel operation on model with self referential FK.", "test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)", "Tests the RenameModel operation on a model which has a superclass that", "test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests)", "test_repoint_field_m2m (migrations.test_operations.OperationTests)", "Tests the RunPython operation", "Tests the RunPython operation correctly handles the \"atomic\" keyword", "#24098 - Tests no-op RunPython operations.", "#24282 - Model changes to a FK reverse side update the model", "Tests the RunSQL operation.", "test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests)", "#24098 - Tests no-op RunSQL operations.", "#23426 - RunSQL should accept parameters.", "#23426 - RunSQL should fail when a list of statements with an incorrect", "Tests the SeparateDatabaseAndState operation.", "A complex SeparateDatabaseAndState operation: Multiple operations both", "A field may be migrated from SmallAutoField to AutoField.", "A field may be migrated from SmallAutoField to BigAutoField.", "The CreateTable operation ignores swapped models.", "Tests the DeleteModel operation ignores swapped models.", "Add/RemoveIndex operations ignore swapped models.", "test_references_model_mixin (migrations.test_operations.TestCreateModel)"]}
{"instance_id": "django__django-15738", "tests_passing_in_original_repo": ["Setting order_with_respect_to when adding the FK too does", "#23405 - Adding a NOT NULL and blank `CharField` or `TextField`", "Test change detection of new constraints.", "test_add_custom_fk_with_hardcoded_to (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_add_asking_for_default (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_add_not_asking_for_null_addition (migrations.test_autodetector.AutodetectorTests)", "test_add_date_fields_with_auto_now_not_asking_for_default (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of new fields.", "Added fields will be created before using them in index/unique_together.", "#22030 - Adding a field with a default should work.", "Tests index/unique_together detection.", "Test change detection of new indexes.", "#22435 - Adding a ManyToManyField should not prompt for a default.", "Setting order_with_respect_to when adding the whole model", "test_add_model_order_with_respect_to_index_constraint (migrations.test_autodetector.AutodetectorTests)", "test_add_model_order_with_respect_to_index_foo_together (migrations.test_autodetector.AutodetectorTests)", "Removing a base field takes place before adding a new inherited model", "#23405 - Adding a NOT NULL and non-blank `CharField` or `TextField`", "Tests detection for adding db_table in model's options.", "Tests detection for changing db_table in model's options'.", "Alter_db_table doesn't generate a migration if no changes have been made.", "Tests detection for removing db_table in model's options.", "Tests when model and db_table changes, autodetector must create two", "Fields are altered after deleting some index/unique_together.", "test_alter_field_to_fk_dependency_other_app (migrations.test_autodetector.AutodetectorTests)", "#23609 - Tests autodetection of nullable to non-nullable alterations.", "ForeignKeys are altered _before_ the model they used to", "test_alter_many_to_many (migrations.test_autodetector.AutodetectorTests)", "Changing the model managers adds a new operation.", "Changing a model's options should make a change.", "Changing a proxy model's options should also make a change.", "test_alter_regex_string_to_compiled_regex (migrations.test_autodetector.AutodetectorTests)", "Tests auto-naming of migrations for graph matching.", "test_arrange_for_graph_with_multiple_initial (migrations.test_autodetector.AutodetectorTests)", "Bases of other models come first.", "test_bases_first_mixed_case_app_label (migrations.test_autodetector.AutodetectorTests)", "#23315 - The dependency resolver knows to put all CreateModel", "#23322 - The dependency resolver knows to explicitly resolve", "Having a circular ForeignKey dependency automatically", "#23938 - Changing a concrete field into a ManyToManyField", "test_create_model_and_unique_together (migrations.test_autodetector.AutodetectorTests)", "Test creation of new model with constraints already defined.", "Test creation of new model with indexes already defined.", "Adding a m2m with a through model and the models that use it should be", "Two instances which deconstruct to the same value aren't considered a", "Tests custom naming of migrations for graph matching.", "Field instances are handled correctly by nested deconstruction.", "#22951 -- Uninstantiated classes with deconstruct are correctly returned", "Nested deconstruction descends into dict values.", "Nested deconstruction descends into lists.", "Nested deconstruction descends into tuples.", "test_default_related_name_option (migrations.test_autodetector.AutodetectorTests)", "test_different_regex_does_alter (migrations.test_autodetector.AutodetectorTests)", "#23452 - Empty unique/index_together shouldn't generate a migration.", "A dependency to an app with no migrations uses __first__.", "Having a ForeignKey automatically adds a dependency.", "#23100 - ForeignKeys correctly depend on other apps' models.", "index/unique_together doesn't generate a migration if no", "index/unique_together also triggers on ordering changes.", "Tests unique_together and field removal detection & ordering", "Removing an FK and the model it targets in the same change must remove", "test_identical_regex_doesnt_alter (migrations.test_autodetector.AutodetectorTests)", "Tests when model changes but db_table stays as-is, autodetector must not", "A dependency to an app with existing migrations uses the", "A model with a m2m field that specifies a \"through\" model cannot be", "test_managed_to_unmanaged (migrations.test_autodetector.AutodetectorTests)", "#23938 - Changing a ManyToManyField into a concrete field", "Removing a ManyToManyField and the \"through\" model in the same change", "Removing a model that contains a ManyToManyField and the \"through\" model", "test_mti_inheritance_model_removal (migrations.test_autodetector.AutodetectorTests)", "Inheriting models doesn't move *_ptr fields into AddField operations.", "Nested deconstruction is applied recursively to the args/kwargs of", "Tests autodetection of new models.", "If two models with a ForeignKey from one to the other are removed at the", "Tests deletion of old models.", "Test change detection of reordering of fields in indexes.", "test_parse_number (migrations.test_autodetector.AutodetectorTests)", "test_partly_alter_foo_together (migrations.test_autodetector.AutodetectorTests)", "A relation used as the primary key is kept as part of CreateModel.", "The autodetector correctly deals with proxy models.", "Bases of proxies come first.", "#23415 - The autodetector must correctly deal with custom FK on proxy", "FK dependencies still work on proxy models.", "test_proxy_non_model_parent (migrations.test_autodetector.AutodetectorTests)", "test_proxy_to_mti_with_fk_to_proxy (migrations.test_autodetector.AutodetectorTests)", "test_proxy_to_mti_with_fk_to_proxy_proxy (migrations.test_autodetector.AutodetectorTests)", "Removing order_with_respect_to when removing the FK too does", "Test change detection of removed constraints.", "Tests autodetection of removed fields.", "Removed fields will be removed after updating index/unique_together.", "Test change detection of removed indexes.", "Tests autodetection of renamed fields.", "Fields are renamed before updating index/unique_together.", "test_rename_field_foreign_key_to_field (migrations.test_autodetector.AutodetectorTests)", "RenameField is used if a field is renamed and db_column equal to the", "test_rename_field_with_renamed_model (migrations.test_autodetector.AutodetectorTests)", "test_rename_foreign_object_fields (migrations.test_autodetector.AutodetectorTests)", "test_rename_index_together_to_index (migrations.test_autodetector.AutodetectorTests)", "test_rename_index_together_to_index_extra_options (migrations.test_autodetector.AutodetectorTests)", "test_rename_index_together_to_index_order_fields (migrations.test_autodetector.AutodetectorTests)", "test_rename_indexes (migrations.test_autodetector.AutodetectorTests)", "Tests autodetection of renamed models that are used in M2M relations as", "Tests autodetection of renamed models.", "Model name is case-insensitive. Changing case doesn't lead to any", "The migration to rename a model pointed to by a foreign key in another", "#24537 - The order of fields in a model does not influence", "Tests autodetection of renamed models while simultaneously renaming one", "test_rename_referenced_primary_key (migrations.test_autodetector.AutodetectorTests)", "test_rename_related_field_preserved_db_column (migrations.test_autodetector.AutodetectorTests)", "test_renamed_referenced_m2m_model_case (migrations.test_autodetector.AutodetectorTests)", "#22300 - Adding an FK in the same \"spot\" as a deleted CharField should", "A migration with a FK between two models of the same app does", "#22275 - A migration with circular FK dependency does not try", "A migration with a FK between two models of the same app", "Setting order_with_respect_to adds a field.", "test_set_alter_order_with_respect_to_index_constraint_foo_together (migrations.test_autodetector.AutodetectorTests)", "test_supports_functools_partial (migrations.test_autodetector.AutodetectorTests)", "test_swappable (migrations.test_autodetector.AutodetectorTests)", "test_swappable_changed (migrations.test_autodetector.AutodetectorTests)", "test_swappable_circular_multi_mti (migrations.test_autodetector.AutodetectorTests)", "Swappable models get their CreateModel first.", "test_swappable_lowercase (migrations.test_autodetector.AutodetectorTests)", "test_swappable_many_to_many_model_case (migrations.test_autodetector.AutodetectorTests)", "Trim does not remove dependencies but does remove unwanted apps.", "The autodetector correctly deals with managed models.", "#23415 - The autodetector must correctly deal with custom FK on", "test_unmanaged_delete (migrations.test_autodetector.AutodetectorTests)", "test_unmanaged_to_managed (migrations.test_autodetector.AutodetectorTests)", "test_auto (migrations.test_autodetector.MigrationSuggestNameTests)", "test_many_operations_suffix (migrations.test_autodetector.MigrationSuggestNameTests)", "test_no_operations (migrations.test_autodetector.MigrationSuggestNameTests)", "test_no_operations_initial (migrations.test_autodetector.MigrationSuggestNameTests)", "test_none_name (migrations.test_autodetector.MigrationSuggestNameTests)", "test_none_name_with_initial_true (migrations.test_autodetector.MigrationSuggestNameTests)", "test_operation_with_no_suggested_name (migrations.test_autodetector.MigrationSuggestNameTests)", "test_single_operation (migrations.test_autodetector.MigrationSuggestNameTests)", "test_single_operation_long_name (migrations.test_autodetector.MigrationSuggestNameTests)", "test_two_create_models (migrations.test_autodetector.MigrationSuggestNameTests)", "test_two_create_models_with_initial_true (migrations.test_autodetector.MigrationSuggestNameTests)", "test_two_operations (migrations.test_autodetector.MigrationSuggestNameTests)"]}
{"instance_id": "django__django-15781", "tests_passing_in_original_repo": ["To avoid conflicts with custom options, commands don't allow", "test_script_prefix_set_in_commands (user_commands.tests.CommandRunTests)", "test_skip_checks (user_commands.tests.CommandRunTests)", "By default, call_command should not trigger the check framework, unless", "When passing the long option name to call_command, the available option", "It should be possible to pass non-string arguments to call_command.", "test_call_command_unrecognized_option (user_commands.tests.CommandTests)", "test_call_command_with_required_parameters_in_mixed_options (user_commands.tests.CommandTests)", "test_call_command_with_required_parameters_in_options (user_commands.tests.CommandTests)", "test_calling_a_command_with_no_app_labels_and_parameters_raise_command_error (user_commands.tests.CommandTests)", "test_calling_a_command_with_only_empty_parameter_should_ends_gracefully (user_commands.tests.CommandTests)", "test_calling_command_with_app_labels_and_parameters_should_be_ok (user_commands.tests.CommandTests)", "test_calling_command_with_parameters_and_app_labels_at_the_end_should_be_ok (user_commands.tests.CommandTests)", "test_check_migrations (user_commands.tests.CommandTests)", "test_command (user_commands.tests.CommandTests)", "test_command_add_arguments_after_common_arguments (user_commands.tests.CommandTests)", "test_command_style (user_commands.tests.CommandTests)", "BaseCommand.create_parser() passes kwargs to CommandParser.", "Management commands can also be loaded from Python eggs.", "An unknown command raises CommandError", "find_command should still work when the PATH environment variable", "test_language_preserved (user_commands.tests.CommandTests)", "test_mutually_exclusive_group_required_const_options (user_commands.tests.CommandTests)", "test_mutually_exclusive_group_required_options (user_commands.tests.CommandTests)", "test_mutually_exclusive_group_required_with_same_dest_args (user_commands.tests.CommandTests)", "test_mutually_exclusive_group_required_with_same_dest_options (user_commands.tests.CommandTests)", "When the Command handle method is decorated with @no_translations,", "test_output_transaction (user_commands.tests.CommandTests)", "test_outputwrapper_flush (user_commands.tests.CommandTests)", "test_required_const_options (user_commands.tests.CommandTests)", "test_required_list_option (user_commands.tests.CommandTests)", "test_requires_system_checks_empty (user_commands.tests.CommandTests)", "test_requires_system_checks_invalid (user_commands.tests.CommandTests)", "test_requires_system_checks_specific (user_commands.tests.CommandTests)", "test_subparser (user_commands.tests.CommandTests)", "test_subparser_dest_args (user_commands.tests.CommandTests)", "test_subparser_dest_required_args (user_commands.tests.CommandTests)", "test_subparser_invalid_option (user_commands.tests.CommandTests)", "Exception raised in a command should raise CommandError with", "test_get_random_secret_key (user_commands.tests.UtilsTests)", "test_is_ignored_path_false (user_commands.tests.UtilsTests)", "test_is_ignored_path_true (user_commands.tests.UtilsTests)", "test_no_existent_external_program (user_commands.tests.UtilsTests)", "test_normalize_path_patterns_truncates_wildcard_base (user_commands.tests.UtilsTests)"]}
{"instance_id": "django__django-15789", "tests_passing_in_original_repo": ["test_conditional_escape (utils_tests.test_html.TestUtilsHtml)", "test_escape (utils_tests.test_html.TestUtilsHtml)", "test_escapejs (utils_tests.test_html.TestUtilsHtml)", "test_format_html (utils_tests.test_html.TestUtilsHtml)", "test_html_safe (utils_tests.test_html.TestUtilsHtml)", "test_html_safe_defines_html_error (utils_tests.test_html.TestUtilsHtml)", "test_html_safe_doesnt_define_str (utils_tests.test_html.TestUtilsHtml)", "test_html_safe_subclass (utils_tests.test_html.TestUtilsHtml)", "test_json_script (utils_tests.test_html.TestUtilsHtml)", "test_json_script_without_id (utils_tests.test_html.TestUtilsHtml)", "test_linebreaks (utils_tests.test_html.TestUtilsHtml)", "test_smart_urlquote (utils_tests.test_html.TestUtilsHtml)", "test_strip_spaces_between_tags (utils_tests.test_html.TestUtilsHtml)", "test_strip_tags (utils_tests.test_html.TestUtilsHtml)", "test_strip_tags_files (utils_tests.test_html.TestUtilsHtml)", "test_urlize (utils_tests.test_html.TestUtilsHtml)", "test_urlize_unchanged_inputs (utils_tests.test_html.TestUtilsHtml)"]}
{"instance_id": "django__django-15790", "tests_passing_in_original_repo": ["Error if template loaders are specified and APP_DIRS is True.", "test_app_dirs_removed (check_framework.test_templates.CheckTemplateSettingsAppDirsTest)", "test_loaders_removed (check_framework.test_templates.CheckTemplateSettingsAppDirsTest)", "test_string_if_invalid_both_are_strings (check_framework.test_templates.CheckTemplateStringIfInvalidTest)", "test_string_if_invalid_first_is_string (check_framework.test_templates.CheckTemplateStringIfInvalidTest)", "test_string_if_invalid_not_specified (check_framework.test_templates.CheckTemplateStringIfInvalidTest)", "test_string_if_invalid_not_string (check_framework.test_templates.CheckTemplateStringIfInvalidTest)", "test_template_tags_with_different_library_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)", "test_template_tags_with_different_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)", "test_template_tags_with_same_library_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)", "test_template_tags_with_same_library_name_and_module_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)", "test_template_tags_with_same_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)"]}
{"instance_id": "django__django-15814", "tests_passing_in_original_repo": ["Test if admin gives warning about cascade deleting models referenced", "Test if the admin delete page shows the correct string representation", "test_abstract_base_with_model_fields (proxy_models.tests.ProxyModelTests)", "Creating a Person makes them accessible through the MyPerson proxy.", "A new MyPerson also shows up as a standard Person.", "test_concrete_model (proxy_models.tests.ProxyModelTests)", "test_content_type (proxy_models.tests.ProxyModelTests)", "Correct type when querying a proxy of proxy", "test_eq (proxy_models.tests.ProxyModelTests)", "test_filter_proxy_relation_reverse (proxy_models.tests.ProxyModelTests)", "The StatusPerson models should have its own table (it's using ORM-level", "test_myperson_manager (proxy_models.tests.ProxyModelTests)", "test_new_fields (proxy_models.tests.ProxyModelTests)", "test_no_base_classes (proxy_models.tests.ProxyModelTests)", "Person is not proxied by StatusPerson subclass.", "test_otherperson_manager (proxy_models.tests.ProxyModelTests)", "test_permissions_created (proxy_models.tests.ProxyModelTests)", "test_proxy_bug (proxy_models.tests.ProxyModelTests)", "Proxy objects can be deleted", "test_proxy_for_model (proxy_models.tests.ProxyModelTests)", "Proxy models are included in the ancestors for a model's DoesNotExist", "test_proxy_load_from_fixture (proxy_models.tests.ProxyModelTests)", "Test save signals for proxy models", "test_proxy_update (proxy_models.tests.ProxyModelTests)", "The MyPerson model should be generating the same database queries as", "We can still use `select_related()` to include related models in our", "test_swappable (proxy_models.tests.ProxyModelTests)", "test_too_many_concrete_classes (proxy_models.tests.ProxyModelTests)", "test_user_proxy_models (proxy_models.tests.ProxyModelTests)"]}
{"instance_id": "django__django-15819", "tests_passing_in_original_repo": ["test_attribute_name_not_python_keyword (inspectdb.tests.InspectDBTestCase)", "test_char_field_db_collation (inspectdb.tests.InspectDBTestCase)", "Introspection of columns with a custom field (#21090)", "Introspection of column names consist/start with digits (#16536/#17676)", "Test introspection of various Django field types", "test_foreign_key_to_field (inspectdb.tests.InspectDBTestCase)", "Introspection errors should not crash the command, and the error should", "test_json_field (inspectdb.tests.InspectDBTestCase)", "By default the command generates models with `Meta.managed = False`.", "Introspection of column names containing special characters,", "test_stealth_table_name_filter_option (inspectdb.tests.InspectDBTestCase)", "Introspection of table names containing special characters,", "inspectdb can inspect a subset of tables by passing the table names as", "test_table_with_func_unique_constraint (inspectdb.tests.InspectDBTestCase)", "test_text_field_db_collation (inspectdb.tests.InspectDBTestCase)", "test_unique_together_meta (inspectdb.tests.InspectDBTestCase)", "test_composite_primary_key (inspectdb.tests.InspectDBTransactionalTests)", "inspectdb --include-views creates models for database views."]}
{"instance_id": "django__django-15851", "tests_passing_in_original_repo": ["test_accent (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_basic (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_column (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_crash_password_does_not_leak (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_nopass (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_parameters (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_passfile (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_service (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)", "test_ssl_certificate (dbshell.test_postgresql.PostgreSqlDbshellCommandTestCase)"]}
{"instance_id": "django__django-15902", "tests_passing_in_original_repo": ["all_valid() validates all forms, even when some are invalid.", "test_valid (forms_tests.tests.test_formsets.AllValidTests)", "test_warning (forms_tests.tests.test_formsets.DeprecationTests)", "test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A FormSet constructor takes the same arguments as Form. Create a", "A form that's displayed as blank may be submitted as blank.", "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "FormSets have a clean() hook for doing extra validation that isn't tied", "A custom renderer passed to a formset_factory() is passed to all forms", "test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Deleting prefilled data is an error. Removing data from form fields", "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "More than 1 empty form can be displayed using formset_factory's", "Ordering fields are allowed to be left blank. If they are left blank,", "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Custom kwargs set on the formset instance are passed to the", "Form kwargs can be passed dynamically in a formset.", "Formsets call is_valid() on each form.", "Formset's forms use the formset's error_class.", "FormSet.has_changed() is True if any data is passed to its forms, even", "A FormSet can be prefilled with existing data by providing a list of", "Formset instances are iterable.", "A formsets without any forms evaluates as True.", "Formset works with SplitDateTimeField(initial=datetime.datetime.now).", "A valid formset should have 0 total errors.", "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If validate_max is set and max_num is less than TOTAL_FORMS in the", "test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If validate_min is set and min_num is more than TOTAL_FORMS in the", "test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "min_num validation doesn't consider unchanged forms with initial data", "test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A formset's ManagementForm is validated once per FormSet.is_valid()", "formset_factory's can_delete argument adds a boolean \"delete\" field to", "test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "deleted_forms works on a valid formset even if a deleted form would", "If a form is filled with something and can_delete is also checked, that", "FormSets with ordering + deletion.", "formset_factory's can_order argument adds an integer field to each", "test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A formset has a hard limit on the number of forms instantiated.", "test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Can increase the built-in forms limit via a higher max_num.", "Can get ordered_forms from a valid formset even if a deleted form", "test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "max_num has no effect when extra is less than max_num.", "Limiting the maximum number of forms with max_num.", "The management form class has field names matching the constants.", "The management form has the correct prefix.", "test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If max_num is 0 then no form is rendered at all, regardless of extra,", "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "More than 1 empty form can also be displayed using formset_factory's", "More than 1 empty form can be displayed using min_num.", "The extra argument works when the formset is pre-filled with initial", "One form from initial and extra=3 with max_num=2 results in the one", "More initial forms than max_num results in all initial forms being", "test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If non_form_errors() is called without calling is_valid() first,", "Ordering works with blank fieldsets.", "test_repr (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If at least one field is filled out on a blank form, it will be", "A partially completed form is invalid.", "Just one form may be completed.", "test_template_name_can_be_overridden (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_as_div (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_absolute_max_invalid (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_default_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_html_safe (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_limited_max_forms_two (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_max_num_with_initial_data (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_repr (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_template_name_can_be_overridden (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_as_div (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "test_as_p (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "test_as_table (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "test_as_ul (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "is_multipart() works with an empty formset.", "An empty formset still calls clean()", "Media is available on empty formset.", "test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)"]}
{"instance_id": "django__django-15996", "tests_passing_in_original_repo": ["test_args_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_args_signature (migrations.test_writer.OperationWriterTests)", "test_empty_signature (migrations.test_writer.OperationWriterTests)", "test_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_kwargs_signature (migrations.test_writer.OperationWriterTests)", "test_multiline_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_args_signature (migrations.test_writer.OperationWriterTests)", "test_nested_operation_expand_args_signature (migrations.test_writer.OperationWriterTests)", "test_custom_operation (migrations.test_writer.WriterTests)", "test_deconstruct_class_arguments (migrations.test_writer.WriterTests)", "Test comments at top of file.", "test_migration_path (migrations.test_writer.WriterTests)", "django.db.models shouldn't be imported if unused.", "test_register_non_serializer (migrations.test_writer.WriterTests)", "test_register_serializer (migrations.test_writer.WriterTests)", "test_serialize_builtin_types (migrations.test_writer.WriterTests)", "test_serialize_builtins (migrations.test_writer.WriterTests)", "test_serialize_choices (migrations.test_writer.WriterTests)", "Ticket #22943: Test serialization of class-based validators, including", "test_serialize_collections (migrations.test_writer.WriterTests)", "Make sure compiled regex can be serialized.", "test_serialize_complex_func_index (migrations.test_writer.WriterTests)", "test_serialize_constants (migrations.test_writer.WriterTests)", "test_serialize_datetime (migrations.test_writer.WriterTests)", "Ticket #22679: makemigrations generates invalid code for (an empty", "test_serialize_enum_flags (migrations.test_writer.WriterTests)", "test_serialize_enums (migrations.test_writer.WriterTests)", "test_serialize_fields (migrations.test_writer.WriterTests)", "test_serialize_frozensets (migrations.test_writer.WriterTests)", "test_serialize_functions (migrations.test_writer.WriterTests)", "test_serialize_functools_partial (migrations.test_writer.WriterTests)", "test_serialize_functools_partialmethod (migrations.test_writer.WriterTests)", "test_serialize_iterators (migrations.test_writer.WriterTests)", "test_serialize_lazy_objects (migrations.test_writer.WriterTests)", "A reference in a local scope can't be serialized.", "test_serialize_managers (migrations.test_writer.WriterTests)", "test_serialize_multiline_strings (migrations.test_writer.WriterTests)", "test_serialize_nested_class (migrations.test_writer.WriterTests)", "test_serialize_numbers (migrations.test_writer.WriterTests)", "test_serialize_path_like (migrations.test_writer.WriterTests)", "test_serialize_pathlib (migrations.test_writer.WriterTests)", "test_serialize_range (migrations.test_writer.WriterTests)", "test_serialize_set (migrations.test_writer.WriterTests)", "test_serialize_settings (migrations.test_writer.WriterTests)", "test_serialize_strings (migrations.test_writer.WriterTests)", "test_serialize_timedelta (migrations.test_writer.WriterTests)", "test_serialize_type_model (migrations.test_writer.WriterTests)", "test_serialize_type_none (migrations.test_writer.WriterTests)", "An unbound method used within a class body can be serialized.", "test_serialize_uuid (migrations.test_writer.WriterTests)", "Tests serializing a simple migration.", "#24155 - Tests ordering of imports."]}
{"instance_id": "django__django-16041", "tests_passing_in_original_repo": ["all_valid() validates all forms, even when some are invalid.", "test_valid (forms_tests.tests.test_formsets.AllValidTests)", "Management forms are already rendered with the new div template.", "test_warning (forms_tests.tests.test_formsets.DeprecationTests)", "test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A FormSet constructor takes the same arguments as Form. Create a", "A form that's displayed as blank may be submitted as blank.", "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "FormSets have a clean() hook for doing extra validation that isn't tied", "A custom renderer passed to a formset_factory() is passed to all forms", "test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Deleting prefilled data is an error. Removing data from form fields", "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "More than 1 empty form can be displayed using formset_factory's", "Ordering fields are allowed to be left blank. If they are left blank,", "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Custom kwargs set on the formset instance are passed to the", "Form kwargs can be passed dynamically in a formset.", "Formsets call is_valid() on each form.", "Formset's forms use the formset's error_class.", "FormSet.has_changed() is True if any data is passed to its forms, even", "A FormSet can be prefilled with existing data by providing a list of", "Formset instances are iterable.", "A formsets without any forms evaluates as True.", "Formset works with SplitDateTimeField(initial=datetime.datetime.now).", "A valid formset should have 0 total errors.", "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If validate_max is set and max_num is less than TOTAL_FORMS in the", "test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If validate_min is set and min_num is more than TOTAL_FORMS in the", "test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "min_num validation doesn't consider unchanged forms with initial data", "test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A formset's ManagementForm is validated once per FormSet.is_valid()", "formset_factory's can_delete argument adds a boolean \"delete\" field to", "test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "deleted_forms works on a valid formset even if a deleted form would", "If a form is filled with something and can_delete is also checked, that", "FormSets with ordering + deletion.", "formset_factory's can_order argument adds an integer field to each", "test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "A formset has a hard limit on the number of forms instantiated.", "test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "Can increase the built-in forms limit via a higher max_num.", "Can get ordered_forms from a valid formset even if a deleted form", "test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "max_num has no effect when extra is less than max_num.", "Limiting the maximum number of forms with max_num.", "The management form class has field names matching the constants.", "The management form has the correct prefix.", "test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If max_num is 0 then no form is rendered at all, regardless of extra,", "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "More than 1 empty form can also be displayed using formset_factory's", "More than 1 empty form can be displayed using min_num.", "The extra argument works when the formset is pre-filled with initial", "One form from initial and extra=3 with max_num=2 results in the one", "More initial forms than max_num results in all initial forms being", "test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If non_form_errors() is called without calling is_valid() first,", "Ordering works with blank fieldsets.", "test_repr (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "If at least one field is filled out on a blank form, it will be", "A partially completed form is invalid.", "Just one form may be completed.", "test_template_name_can_be_overridden (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)", "test_as_div (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)", "test_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_absolute_max_invalid (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_default_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_html_safe (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_limited_max_forms_two (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_max_num_with_initial_data (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_repr (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_template_name_can_be_overridden (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)", "test_as_div (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "test_as_p (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "test_as_table (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "test_as_ul (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)", "is_multipart() works with an empty formset.", "An empty formset still calls clean()", "Media is available on empty formset.", "test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)", "test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)"]}
{"instance_id": "django__django-16046", "tests_passing_in_original_repo": ["test_decimal_numbers (utils_tests.test_numberformat.TestNumberFormat)", "test_decimal_subclass (utils_tests.test_numberformat.TestNumberFormat)", "test_float_numbers (utils_tests.test_numberformat.TestNumberFormat)", "test_format_number (utils_tests.test_numberformat.TestNumberFormat)", "test_format_string (utils_tests.test_numberformat.TestNumberFormat)", "test_large_number (utils_tests.test_numberformat.TestNumberFormat)"]}
{"instance_id": "django__django-16139", "tests_passing_in_original_repo": ["test_html_autocomplete_attributes (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_missing_passwords (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_non_matching_passwords (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_one_password (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_success (auth_tests.test_forms.AdminPasswordChangeFormTest)", "test_custom_login_allowed_policy (auth_tests.test_forms.AuthenticationFormTest)", "test_get_invalid_login_error (auth_tests.test_forms.AuthenticationFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.AuthenticationFormTest)", "test_inactive_user (auth_tests.test_forms.AuthenticationFormTest)", "test_inactive_user_i18n (auth_tests.test_forms.AuthenticationFormTest)", "An invalid login doesn't leak the inactive status of a user.", "test_integer_username (auth_tests.test_forms.AuthenticationFormTest)", "test_invalid_username (auth_tests.test_forms.AuthenticationFormTest)", "test_login_failed (auth_tests.test_forms.AuthenticationFormTest)", "test_no_password (auth_tests.test_forms.AuthenticationFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.AuthenticationFormTest)", "test_success (auth_tests.test_forms.AuthenticationFormTest)", "test_unicode_username (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_autocapitalize_none (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_label (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_label_empty_string (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_label_not_set (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_max_length_defaults_to_254 (auth_tests.test_forms.AuthenticationFormTest)", "test_username_field_max_length_matches_user_model (auth_tests.test_forms.AuthenticationFormTest)", "test_field_order (auth_tests.test_forms.PasswordChangeFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.PasswordChangeFormTest)", "test_incorrect_password (auth_tests.test_forms.PasswordChangeFormTest)", "test_password_verification (auth_tests.test_forms.PasswordChangeFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.PasswordChangeFormTest)", "test_success (auth_tests.test_forms.PasswordChangeFormTest)", "test_cleaned_data (auth_tests.test_forms.PasswordResetFormTest)", "test_custom_email_constructor (auth_tests.test_forms.PasswordResetFormTest)", "test_custom_email_field (auth_tests.test_forms.PasswordResetFormTest)", "test_custom_email_subject (auth_tests.test_forms.PasswordResetFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.PasswordResetFormTest)", "Inactive user cannot receive password reset email.", "test_invalid_email (auth_tests.test_forms.PasswordResetFormTest)", "Test nonexistent email address. This should not fail because it would", "Preserve the case of the user name (before the @ in the email address)", "Test the PasswordResetForm.save() method with html_email_template_name", "Test the PasswordResetForm.save() method with no html_email_template_name", "test_unusable_password (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_domain_unicode_collision (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_domain_unicode_collision_nonexistent (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_unicode_collision (auth_tests.test_forms.PasswordResetFormTest)", "test_user_email_unicode_collision_nonexistent (auth_tests.test_forms.PasswordResetFormTest)", "test_help_text_translation (auth_tests.test_forms.SetPasswordFormTest)", "test_html_autocomplete_attributes (auth_tests.test_forms.SetPasswordFormTest)", "test_no_password (auth_tests.test_forms.SetPasswordFormTest)", "test_password_verification (auth_tests.test_forms.SetPasswordFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.SetPasswordFormTest)", "test_success (auth_tests.test_forms.SetPasswordFormTest)", "test_validates_password (auth_tests.test_forms.SetPasswordFormTest)", "test_bug_14242 (auth_tests.test_forms.UserChangeFormTest)", "test_bug_17944_empty_password (auth_tests.test_forms.UserChangeFormTest)", "test_bug_17944_unknown_password_algorithm (auth_tests.test_forms.UserChangeFormTest)", "test_bug_17944_unmanageable_password (auth_tests.test_forms.UserChangeFormTest)", "The change form does not return the password value", "test_bug_19349_bound_password_field (auth_tests.test_forms.UserChangeFormTest)", "test_custom_form (auth_tests.test_forms.UserChangeFormTest)", "test_password_excluded (auth_tests.test_forms.UserChangeFormTest)", "test_unusable_password (auth_tests.test_forms.UserChangeFormTest)", "test_username_field_autocapitalize_none (auth_tests.test_forms.UserChangeFormTest)", "test_username_validity (auth_tests.test_forms.UserChangeFormTest)", "test_both_passwords (auth_tests.test_forms.UserCreationFormTest)", "test_custom_form (auth_tests.test_forms.UserCreationFormTest)", "test_custom_form_hidden_username_field (auth_tests.test_forms.UserCreationFormTest)", "test_custom_form_with_different_username_field (auth_tests.test_forms.UserCreationFormTest)", "To prevent almost identical usernames, visually identical but differing", "test_html_autocomplete_attributes (auth_tests.test_forms.UserCreationFormTest)", "test_invalid_data (auth_tests.test_forms.UserCreationFormTest)", "test_normalize_username (auth_tests.test_forms.UserCreationFormTest)", "test_password_help_text (auth_tests.test_forms.UserCreationFormTest)", "test_password_verification (auth_tests.test_forms.UserCreationFormTest)", "test_password_whitespace_not_stripped (auth_tests.test_forms.UserCreationFormTest)", "test_success (auth_tests.test_forms.UserCreationFormTest)", "test_unicode_username (auth_tests.test_forms.UserCreationFormTest)", "test_user_already_exists (auth_tests.test_forms.UserCreationFormTest)", "UserCreationForm password validation uses all of the form's data.", "test_username_field_autocapitalize_none (auth_tests.test_forms.UserCreationFormTest)", "test_validates_password (auth_tests.test_forms.UserCreationFormTest)", "test_bug_19349_render_with_none_value (auth_tests.test_forms.ReadOnlyPasswordHashTest)", "ReadOnlyPasswordHashWidget doesn't contain a for attribute in the", "test_readonly_field_has_changed (auth_tests.test_forms.ReadOnlyPasswordHashTest)", "test_render (auth_tests.test_forms.ReadOnlyPasswordHashTest)"]}
{"instance_id": "django__django-16229", "tests_passing_in_original_repo": ["test_empty_field_char (forms_tests.tests.tests.EmptyLabelTestCase)", "test_empty_field_char_none (forms_tests.tests.tests.EmptyLabelTestCase)", "test_empty_field_integer (forms_tests.tests.tests.EmptyLabelTestCase)", "test_get_display_value_on_none (forms_tests.tests.tests.EmptyLabelTestCase)", "test_html_rendering_of_prepopulated_models (forms_tests.tests.tests.EmptyLabelTestCase)", "test_save_empty_label_forms (forms_tests.tests.tests.EmptyLabelTestCase)", "test_boundary_conditions (forms_tests.tests.tests.FormsModelTestCase)", "test_formfield_initial (forms_tests.tests.tests.FormsModelTestCase)", "test_unicode_filename (forms_tests.tests.tests.FormsModelTestCase)", "test_empty_field_char (forms_tests.tests.tests.Jinja2EmptyLabelTestCase)", "test_empty_field_char_none (forms_tests.tests.tests.Jinja2EmptyLabelTestCase)", "test_empty_field_integer (forms_tests.tests.tests.Jinja2EmptyLabelTestCase)", "test_get_display_value_on_none (forms_tests.tests.tests.Jinja2EmptyLabelTestCase)", "test_html_rendering_of_prepopulated_models (forms_tests.tests.tests.Jinja2EmptyLabelTestCase)", "test_save_empty_label_forms (forms_tests.tests.tests.Jinja2EmptyLabelTestCase)", "test_m2m_field_exclusion (forms_tests.tests.tests.ManyToManyExclusionTestCase)", "The initial value for a callable default returning a queryset is the", "Initial instances for model fields may also be instances (refs #7287)", "If a model's ForeignKey has blank=False and a default, no empty option", "If a model's ManyToManyField has blank=True and is saved with no data,", "Test for issue 10405"]}
{"instance_id": "django__django-16255", "tests_passing_in_original_repo": ["A simple sitemap index can be rendered with a custom template", "test_simple_sitemap_custom_index_warning (sitemaps_tests.test_http.DeprecatedTests)", "A i18n sitemap with alternate/hreflang links can be rendered.", "A i18n sitemap index with limited languages can be rendered.", "A i18n sitemap index with x-default can be rendered.", "A cached sitemap index can be rendered (#2713).", "All items in the sitemap have `lastmod`. The `Last-Modified` header", "Not all items have `lastmod`. Therefore the `Last-Modified` header", "test_empty_page (sitemaps_tests.test_http.HTTPSitemapTests)", "test_empty_sitemap (sitemaps_tests.test_http.HTTPSitemapTests)", "The priority value should not be localized.", "test_no_section (sitemaps_tests.test_http.HTTPSitemapTests)", "test_page_not_int (sitemaps_tests.test_http.HTTPSitemapTests)", "A sitemap may have multiple pages.", "test_requestsite_sitemap (sitemaps_tests.test_http.HTTPSitemapTests)", "A simple sitemap can be rendered with a custom template", "A simple i18n sitemap index can be rendered, without logging variable", "A simple sitemap can be rendered", "A simple sitemap index can be rendered", "A simple sitemap section can be rendered", "sitemapindex.lastmod is included when Sitemap.lastmod is", "sitemapindex.lastmod is omitted when Sitemap.lastmod is", "Check we get ImproperlyConfigured if we don't pass a site object to", "Check we get ImproperlyConfigured when we don't pass a site object to", "Check to make sure that the raw item is included with each", "Last-Modified header is set correctly", "The Last-Modified header should be support dates (without time).", "Last-Modified header is missing when sitemap has no lastmod", "Last-Modified header is omitted when lastmod not on all items", "The Last-Modified header should be converted from timezone aware dates", "lastmod datestamp shows timezones if Sitemap.get_latest_lastmod", "A sitemap may not be callable.", "test_sitemap_without_entries (sitemaps_tests.test_http.HTTPSitemapTests)", "The Last-Modified header is set to the most recent sitemap lastmod.", "The Last-Modified header is omitted when lastmod isn't found in all", "test_x_robots_sitemap (sitemaps_tests.test_http.HTTPSitemapTests)"]}
{"instance_id": "django__django-16379", "tests_passing_in_original_repo": ["test_createcachetable_observes_database_router (cache.tests.CreateCacheTableForDBCacheTests)", "test_add (cache.tests.FileBasedCachePathLibTests)", "test_add_fail_on_pickleerror (cache.tests.FileBasedCachePathLibTests)", "test_binary_string (cache.tests.FileBasedCachePathLibTests)", "test_cache_dir_permissions (cache.tests.FileBasedCachePathLibTests)", "test_cache_read_for_model_instance (cache.tests.FileBasedCachePathLibTests)", "test_cache_read_for_model_instance_with_deferred (cache.tests.FileBasedCachePathLibTests)", "test_cache_versioning_add (cache.tests.FileBasedCachePathLibTests)", "test_cache_versioning_delete (cache.tests.FileBasedCachePathLibTests)", "test_cache_versioning_get_set (cache.tests.FileBasedCachePathLibTests)", "test_cache_versioning_get_set_many (cache.tests.FileBasedCachePathLibTests)", "test_cache_versioning_has_key (cache.tests.FileBasedCachePathLibTests)", "test_cache_versioning_incr_decr (cache.tests.FileBasedCachePathLibTests)", "test_cache_write_for_model_instance_with_deferred (cache.tests.FileBasedCachePathLibTests)", "test_cache_write_unpicklable_object (cache.tests.FileBasedCachePathLibTests)", "test_clear (cache.tests.FileBasedCachePathLibTests)", "test_clear_does_not_remove_cache_dir (cache.tests.FileBasedCachePathLibTests)", "test_close (cache.tests.FileBasedCachePathLibTests)", "test_creates_cache_dir_if_nonexistent (cache.tests.FileBasedCachePathLibTests)", "test_cull (cache.tests.FileBasedCachePathLibTests)", "test_cull_delete_when_store_empty (cache.tests.FileBasedCachePathLibTests)", "test_custom_key_func (cache.tests.FileBasedCachePathLibTests)", "test_data_types (cache.tests.FileBasedCachePathLibTests)", "test_decr (cache.tests.FileBasedCachePathLibTests)", "test_decr_version (cache.tests.FileBasedCachePathLibTests)", "If None is cached, get() returns it instead of the default.", "test_delete (cache.tests.FileBasedCachePathLibTests)", "test_delete_many (cache.tests.FileBasedCachePathLibTests)", "test_delete_many_no_keys (cache.tests.FileBasedCachePathLibTests)", "test_delete_nonexistent (cache.tests.FileBasedCachePathLibTests)", "test_empty_cache_file_considered_expired (cache.tests.FileBasedCachePathLibTests)", "test_expiration (cache.tests.FileBasedCachePathLibTests)", "test_float_timeout (cache.tests.FileBasedCachePathLibTests)", "Passing in None into timeout results in a value that is cached forever", "test_get_does_not_ignore_non_filenotfound_exceptions (cache.tests.FileBasedCachePathLibTests)", "test_get_ignores_enoent (cache.tests.FileBasedCachePathLibTests)", "test_get_many (cache.tests.FileBasedCachePathLibTests)", "test_get_or_set (cache.tests.FileBasedCachePathLibTests)", "test_get_or_set_callable (cache.tests.FileBasedCachePathLibTests)", "test_get_or_set_racing (cache.tests.FileBasedCachePathLibTests)", "test_get_or_set_version (cache.tests.FileBasedCachePathLibTests)", "test_has_key (cache.tests.FileBasedCachePathLibTests)", "test_ignores_non_cache_files (cache.tests.FileBasedCachePathLibTests)", "test_in (cache.tests.FileBasedCachePathLibTests)", "test_incr (cache.tests.FileBasedCachePathLibTests)", "test_incr_version (cache.tests.FileBasedCachePathLibTests)", "test_invalid_key_characters (cache.tests.FileBasedCachePathLibTests)", "test_invalid_key_length (cache.tests.FileBasedCachePathLibTests)", "test_invalid_with_version_key_length (cache.tests.FileBasedCachePathLibTests)", "Follow memcached's convention where a timeout greater than 30 days is", "Nonexistent cache keys return as None/default.", "test_prefix (cache.tests.FileBasedCachePathLibTests)", "test_set_fail_on_pickleerror (cache.tests.FileBasedCachePathLibTests)", "test_set_many (cache.tests.FileBasedCachePathLibTests)", "test_set_many_empty_data (cache.tests.FileBasedCachePathLibTests)", "test_set_many_expiration (cache.tests.FileBasedCachePathLibTests)", "set_many() returns an empty list when all keys are inserted.", "test_simple (cache.tests.FileBasedCachePathLibTests)", "test_touch (cache.tests.FileBasedCachePathLibTests)", "test_unicode (cache.tests.FileBasedCachePathLibTests)", "test_zero_cull (cache.tests.FileBasedCachePathLibTests)", "Passing in zero into timeout results in a value that is not cached", "test_add (cache.tests.FileBasedCacheTests)", "test_add_fail_on_pickleerror (cache.tests.FileBasedCacheTests)", "test_binary_string (cache.tests.FileBasedCacheTests)", "test_cache_dir_permissions (cache.tests.FileBasedCacheTests)", "test_cache_read_for_model_instance (cache.tests.FileBasedCacheTests)", "test_cache_read_for_model_instance_with_deferred (cache.tests.FileBasedCacheTests)", "test_cache_versioning_add (cache.tests.FileBasedCacheTests)", "test_cache_versioning_delete (cache.tests.FileBasedCacheTests)", "test_cache_versioning_get_set (cache.tests.FileBasedCacheTests)", "test_cache_versioning_get_set_many (cache.tests.FileBasedCacheTests)", "test_cache_versioning_has_key (cache.tests.FileBasedCacheTests)", "test_cache_versioning_incr_decr (cache.tests.FileBasedCacheTests)", "test_cache_write_for_model_instance_with_deferred (cache.tests.FileBasedCacheTests)", "test_cache_write_unpicklable_object (cache.tests.FileBasedCacheTests)", "test_clear (cache.tests.FileBasedCacheTests)", "test_clear_does_not_remove_cache_dir (cache.tests.FileBasedCacheTests)", "test_close (cache.tests.FileBasedCacheTests)", "test_creates_cache_dir_if_nonexistent (cache.tests.FileBasedCacheTests)", "test_cull (cache.tests.FileBasedCacheTests)", "test_cull_delete_when_store_empty (cache.tests.FileBasedCacheTests)", "test_custom_key_func (cache.tests.FileBasedCacheTests)", "test_data_types (cache.tests.FileBasedCacheTests)", "test_decr (cache.tests.FileBasedCacheTests)", "test_decr_version (cache.tests.FileBasedCacheTests)", "test_delete (cache.tests.FileBasedCacheTests)", "test_delete_many (cache.tests.FileBasedCacheTests)", "test_delete_many_no_keys (cache.tests.FileBasedCacheTests)", "test_delete_nonexistent (cache.tests.FileBasedCacheTests)", "test_empty_cache_file_considered_expired (cache.tests.FileBasedCacheTests)", "test_expiration (cache.tests.FileBasedCacheTests)", "test_float_timeout (cache.tests.FileBasedCacheTests)", "test_get_does_not_ignore_non_filenotfound_exceptions (cache.tests.FileBasedCacheTests)", "test_get_ignores_enoent (cache.tests.FileBasedCacheTests)", "test_get_many (cache.tests.FileBasedCacheTests)", "test_get_or_set (cache.tests.FileBasedCacheTests)", "test_get_or_set_callable (cache.tests.FileBasedCacheTests)", "test_get_or_set_racing (cache.tests.FileBasedCacheTests)", "test_get_or_set_version (cache.tests.FileBasedCacheTests)", "test_has_key (cache.tests.FileBasedCacheTests)", "test_ignores_non_cache_files (cache.tests.FileBasedCacheTests)", "test_in (cache.tests.FileBasedCacheTests)", "test_incr (cache.tests.FileBasedCacheTests)", "test_incr_version (cache.tests.FileBasedCacheTests)", "test_invalid_key_characters (cache.tests.FileBasedCacheTests)", "test_invalid_key_length (cache.tests.FileBasedCacheTests)", "test_invalid_with_version_key_length (cache.tests.FileBasedCacheTests)", "test_prefix (cache.tests.FileBasedCacheTests)", "test_set_fail_on_pickleerror (cache.tests.FileBasedCacheTests)", "test_set_many (cache.tests.FileBasedCacheTests)", "test_set_many_empty_data (cache.tests.FileBasedCacheTests)", "test_set_many_expiration (cache.tests.FileBasedCacheTests)", "test_simple (cache.tests.FileBasedCacheTests)", "test_touch (cache.tests.FileBasedCacheTests)", "test_unicode (cache.tests.FileBasedCacheTests)", "test_zero_cull (cache.tests.FileBasedCacheTests)", "test_add (cache.tests.LocMemCacheTests)", "test_add_fail_on_pickleerror (cache.tests.LocMemCacheTests)", "test_binary_string (cache.tests.LocMemCacheTests)", "test_cache_read_for_model_instance (cache.tests.LocMemCacheTests)", "test_cache_read_for_model_instance_with_deferred (cache.tests.LocMemCacheTests)", "test_cache_versioning_add (cache.tests.LocMemCacheTests)", "test_cache_versioning_delete (cache.tests.LocMemCacheTests)", "test_cache_versioning_get_set (cache.tests.LocMemCacheTests)", "test_cache_versioning_get_set_many (cache.tests.LocMemCacheTests)", "test_cache_versioning_has_key (cache.tests.LocMemCacheTests)", "test_cache_versioning_incr_decr (cache.tests.LocMemCacheTests)", "test_cache_write_for_model_instance_with_deferred (cache.tests.LocMemCacheTests)", "test_cache_write_unpicklable_object (cache.tests.LocMemCacheTests)", "test_clear (cache.tests.LocMemCacheTests)", "test_close (cache.tests.LocMemCacheTests)", "test_cull (cache.tests.LocMemCacheTests)", "test_cull_delete_when_store_empty (cache.tests.LocMemCacheTests)", "test_custom_key_func (cache.tests.LocMemCacheTests)", "test_data_types (cache.tests.LocMemCacheTests)", "test_decr (cache.tests.LocMemCacheTests)", "test_decr_version (cache.tests.LocMemCacheTests)", "test_delete (cache.tests.LocMemCacheTests)", "test_delete_many (cache.tests.LocMemCacheTests)", "test_delete_many_no_keys (cache.tests.LocMemCacheTests)", "test_delete_nonexistent (cache.tests.LocMemCacheTests)", "test_expiration (cache.tests.LocMemCacheTests)", "test_float_timeout (cache.tests.LocMemCacheTests)", "test_get_many (cache.tests.LocMemCacheTests)", "test_get_or_set (cache.tests.LocMemCacheTests)", "test_get_or_set_callable (cache.tests.LocMemCacheTests)", "test_get_or_set_racing (cache.tests.LocMemCacheTests)", "test_get_or_set_version (cache.tests.LocMemCacheTests)", "test_has_key (cache.tests.LocMemCacheTests)", "test_in (cache.tests.LocMemCacheTests)", "test_incr (cache.tests.LocMemCacheTests)", "incr/decr does not modify expiry time (matches memcached behavior)", "test_incr_version (cache.tests.LocMemCacheTests)", "test_invalid_key_characters (cache.tests.LocMemCacheTests)", "test_invalid_key_length (cache.tests.LocMemCacheTests)", "test_invalid_with_version_key_length (cache.tests.LocMemCacheTests)", "#20613/#18541 -- Ensures pickling is done outside of the lock.", "get() moves cache keys.", "incr() moves cache keys.", "set() moves cache keys.", "Multiple locmem caches are isolated", "test_prefix (cache.tests.LocMemCacheTests)", "test_set_fail_on_pickleerror (cache.tests.LocMemCacheTests)", "test_set_many (cache.tests.LocMemCacheTests)", "test_set_many_empty_data (cache.tests.LocMemCacheTests)", "test_set_many_expiration (cache.tests.LocMemCacheTests)", "test_simple (cache.tests.LocMemCacheTests)", "test_touch (cache.tests.LocMemCacheTests)", "test_unicode (cache.tests.LocMemCacheTests)", "test_zero_cull (cache.tests.LocMemCacheTests)", "test_close (cache.tests.CacheClosingTests)", "test_close_only_initialized (cache.tests.CacheClosingTests)", "test_head_caches_correctly (cache.tests.CacheHEADTest)", "test_head_with_cached_get (cache.tests.CacheHEADTest)", "test_all (cache.tests.CacheHandlerTest)", "test_nonexistent_alias (cache.tests.CacheHandlerTest)", "test_nonexistent_backend (cache.tests.CacheHandlerTest)", "Requesting the same alias from separate threads should yield separate", "Attempting to retrieve the same alias should yield the same instance.", "test_cache_key_i18n_timezone (cache.tests.CacheI18nTest)", "test_cache_key_i18n_translation (cache.tests.CacheI18nTest)", "test_cache_key_i18n_translation_accept_language (cache.tests.CacheI18nTest)", "test_cache_key_no_i18n (cache.tests.CacheI18nTest)", "test_middleware (cache.tests.CacheI18nTest)", "test_middleware_doesnt_cache_streaming_response (cache.tests.CacheI18nTest)", "test_304_response_has_http_caching_headers_but_not_cached (cache.tests.CacheMiddlewareTest)", "test_cache_page_timeout (cache.tests.CacheMiddlewareTest)", "Responses with 'Cache-Control: private' are not cached.", "The constructor is correctly distinguishing between usage of", "test_fetch_cache_middleware_constructor (cache.tests.CacheMiddlewareTest)", "test_middleware (cache.tests.CacheMiddlewareTest)", "The cache instance is different for each thread.", "Django must prevent caching of responses that set a user-specific (and", "test_update_cache_middleware_constructor (cache.tests.CacheMiddlewareTest)", "test_view_decorator (cache.tests.CacheMiddlewareTest)", "get_cache_key keys differ by fully-qualified URL instead of path", "test_get_cache_key (cache.tests.CacheUtils)", "test_get_cache_key_with_query (cache.tests.CacheUtils)", "test_learn_cache_key (cache.tests.CacheUtils)", "test_patch_cache_control (cache.tests.CacheUtils)", "test_patch_vary_headers (cache.tests.CacheUtils)", "test_custom_key_validation (cache.tests.CustomCacheKeyValidationTests)", "test_add (cache.tests.DBCacheTests)", "test_add_fail_on_pickleerror (cache.tests.DBCacheTests)", "test_binary_string (cache.tests.DBCacheTests)", "test_cache_read_for_model_instance (cache.tests.DBCacheTests)", "test_cache_read_for_model_instance_with_deferred (cache.tests.DBCacheTests)", "test_cache_versioning_add (cache.tests.DBCacheTests)", "test_cache_versioning_delete (cache.tests.DBCacheTests)", "test_cache_versioning_get_set (cache.tests.DBCacheTests)", "test_cache_versioning_get_set_many (cache.tests.DBCacheTests)", "test_cache_versioning_has_key (cache.tests.DBCacheTests)", "test_cache_versioning_incr_decr (cache.tests.DBCacheTests)", "test_cache_write_for_model_instance_with_deferred (cache.tests.DBCacheTests)", "test_cache_write_unpicklable_object (cache.tests.DBCacheTests)", "test_clear (cache.tests.DBCacheTests)", "test_close (cache.tests.DBCacheTests)", "test_createcachetable_dry_run_mode (cache.tests.DBCacheTests)", "Delete and recreate cache table with legacy behavior (explicitly", "test_cull (cache.tests.DBCacheTests)", "test_cull_delete_when_store_empty (cache.tests.DBCacheTests)", "test_cull_queries (cache.tests.DBCacheTests)", "test_custom_key_func (cache.tests.DBCacheTests)", "test_data_types (cache.tests.DBCacheTests)", "test_decr (cache.tests.DBCacheTests)", "test_decr_version (cache.tests.DBCacheTests)", "test_delete (cache.tests.DBCacheTests)", "The rowcount attribute should not be checked on a closed cursor.", "test_delete_many (cache.tests.DBCacheTests)", "test_delete_many_no_keys (cache.tests.DBCacheTests)", "test_delete_many_num_queries (cache.tests.DBCacheTests)", "test_delete_nonexistent (cache.tests.DBCacheTests)", "test_expiration (cache.tests.DBCacheTests)", "test_float_timeout (cache.tests.DBCacheTests)", "test_get_many (cache.tests.DBCacheTests)", "test_get_many_num_queries (cache.tests.DBCacheTests)", "test_get_or_set (cache.tests.DBCacheTests)", "test_get_or_set_callable (cache.tests.DBCacheTests)", "test_get_or_set_racing (cache.tests.DBCacheTests)", "test_get_or_set_version (cache.tests.DBCacheTests)", "test_has_key (cache.tests.DBCacheTests)", "test_has_key_query_columns_quoted (cache.tests.DBCacheTests)", "test_in (cache.tests.DBCacheTests)", "test_incr (cache.tests.DBCacheTests)", "test_incr_version (cache.tests.DBCacheTests)", "test_invalid_key_characters (cache.tests.DBCacheTests)", "test_invalid_key_length (cache.tests.DBCacheTests)", "test_invalid_with_version_key_length (cache.tests.DBCacheTests)", "test_prefix (cache.tests.DBCacheTests)", "test_second_call_doesnt_crash (cache.tests.DBCacheTests)", "test_set_fail_on_pickleerror (cache.tests.DBCacheTests)", "test_set_many (cache.tests.DBCacheTests)", "test_set_many_empty_data (cache.tests.DBCacheTests)", "test_set_many_expiration (cache.tests.DBCacheTests)", "test_simple (cache.tests.DBCacheTests)", "test_touch (cache.tests.DBCacheTests)", "test_unicode (cache.tests.DBCacheTests)", "test_zero_cull (cache.tests.DBCacheTests)", "test_add (cache.tests.DBCacheWithTimeZoneTests)", "test_add_fail_on_pickleerror (cache.tests.DBCacheWithTimeZoneTests)", "test_binary_string (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_read_for_model_instance (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_read_for_model_instance_with_deferred (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_versioning_add (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_versioning_delete (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_versioning_get_set (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_versioning_get_set_many (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_versioning_has_key (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_versioning_incr_decr (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_write_for_model_instance_with_deferred (cache.tests.DBCacheWithTimeZoneTests)", "test_cache_write_unpicklable_object (cache.tests.DBCacheWithTimeZoneTests)", "test_clear (cache.tests.DBCacheWithTimeZoneTests)", "test_close (cache.tests.DBCacheWithTimeZoneTests)", "test_createcachetable_dry_run_mode (cache.tests.DBCacheWithTimeZoneTests)", "test_cull (cache.tests.DBCacheWithTimeZoneTests)", "test_cull_delete_when_store_empty (cache.tests.DBCacheWithTimeZoneTests)", "test_cull_queries (cache.tests.DBCacheWithTimeZoneTests)", "test_custom_key_func (cache.tests.DBCacheWithTimeZoneTests)", "test_data_types (cache.tests.DBCacheWithTimeZoneTests)", "test_decr (cache.tests.DBCacheWithTimeZoneTests)", "test_decr_version (cache.tests.DBCacheWithTimeZoneTests)", "test_delete (cache.tests.DBCacheWithTimeZoneTests)", "test_delete_many (cache.tests.DBCacheWithTimeZoneTests)", "test_delete_many_no_keys (cache.tests.DBCacheWithTimeZoneTests)", "test_delete_many_num_queries (cache.tests.DBCacheWithTimeZoneTests)", "test_delete_nonexistent (cache.tests.DBCacheWithTimeZoneTests)", "test_expiration (cache.tests.DBCacheWithTimeZoneTests)", "test_float_timeout (cache.tests.DBCacheWithTimeZoneTests)", "test_get_many (cache.tests.DBCacheWithTimeZoneTests)", "test_get_many_num_queries (cache.tests.DBCacheWithTimeZoneTests)", "test_get_or_set (cache.tests.DBCacheWithTimeZoneTests)", "test_get_or_set_callable (cache.tests.DBCacheWithTimeZoneTests)", "test_get_or_set_racing (cache.tests.DBCacheWithTimeZoneTests)", "test_get_or_set_version (cache.tests.DBCacheWithTimeZoneTests)", "test_has_key (cache.tests.DBCacheWithTimeZoneTests)", "test_has_key_query_columns_quoted (cache.tests.DBCacheWithTimeZoneTests)", "test_in (cache.tests.DBCacheWithTimeZoneTests)", "test_incr (cache.tests.DBCacheWithTimeZoneTests)", "test_incr_version (cache.tests.DBCacheWithTimeZoneTests)", "test_invalid_key_characters (cache.tests.DBCacheWithTimeZoneTests)", "test_invalid_key_length (cache.tests.DBCacheWithTimeZoneTests)", "test_invalid_with_version_key_length (cache.tests.DBCacheWithTimeZoneTests)", "test_prefix (cache.tests.DBCacheWithTimeZoneTests)", "test_second_call_doesnt_crash (cache.tests.DBCacheWithTimeZoneTests)", "test_set_fail_on_pickleerror (cache.tests.DBCacheWithTimeZoneTests)", "test_set_many (cache.tests.DBCacheWithTimeZoneTests)", "test_set_many_empty_data (cache.tests.DBCacheWithTimeZoneTests)", "test_set_many_expiration (cache.tests.DBCacheWithTimeZoneTests)", "test_simple (cache.tests.DBCacheWithTimeZoneTests)", "test_touch (cache.tests.DBCacheWithTimeZoneTests)", "test_unicode (cache.tests.DBCacheWithTimeZoneTests)", "test_zero_cull (cache.tests.DBCacheWithTimeZoneTests)", "Memory caches that have the TIMEOUT parameter set to `None` in the", "Memory caches that have the TIMEOUT parameter set to `None` will set", "Caches that have the TIMEOUT parameter undefined in the default", "Memory caches that have the TIMEOUT parameter unset will set cache", "The default expiration time of a cache key is 5 minutes.", "Add doesn't do anything in dummy cache backend", "clear does nothing for the dummy cache backend", "All data types are ignored equally by the dummy cache", "Dummy cache values can't be decremented", "Dummy cache versions can't be decremented", "Cache deletion is transparently ignored on the dummy cache backend", "delete_many does nothing for the dummy cache backend", "test_delete_many_invalid_key (cache.tests.DummyCacheTests)", "Expiration has no effect on the dummy cache", "get_many returns nothing for the dummy cache backend", "test_get_many_invalid_key (cache.tests.DummyCacheTests)", "test_get_or_set (cache.tests.DummyCacheTests)", "test_get_or_set_callable (cache.tests.DummyCacheTests)", "The has_key method doesn't ever return True for the dummy cache backend", "The in operator doesn't ever return True for the dummy cache backend", "Dummy cache values can't be incremented", "Dummy cache versions can't be incremented", "Nonexistent keys aren't found in the dummy cache backend", "set_many does nothing for the dummy cache backend", "test_set_many_invalid_key (cache.tests.DummyCacheTests)", "Dummy cache backend ignores cache set calls", "Dummy cache can't do touch().", "Unicode values are ignored by the dummy cache", "test_cache_key_i18n_timezone (cache.tests.PrefixedCacheI18nTest)", "test_cache_key_i18n_translation (cache.tests.PrefixedCacheI18nTest)", "test_cache_key_i18n_translation_accept_language (cache.tests.PrefixedCacheI18nTest)", "test_cache_key_no_i18n (cache.tests.PrefixedCacheI18nTest)", "test_middleware (cache.tests.PrefixedCacheI18nTest)", "test_middleware_doesnt_cache_streaming_response (cache.tests.PrefixedCacheI18nTest)", "test_get_cache_key (cache.tests.PrefixedCacheUtils)", "test_get_cache_key_with_query (cache.tests.PrefixedCacheUtils)", "test_learn_cache_key (cache.tests.PrefixedCacheUtils)", "test_patch_cache_control (cache.tests.PrefixedCacheUtils)", "test_patch_vary_headers (cache.tests.PrefixedCacheUtils)", "test_long_vary_on (cache.tests.TestMakeTemplateFragmentKey)", "test_proper_escaping (cache.tests.TestMakeTemplateFragmentKey)", "test_with_ints_vary_on (cache.tests.TestMakeTemplateFragmentKey)", "test_with_many_vary_on (cache.tests.TestMakeTemplateFragmentKey)", "test_with_one_vary_on (cache.tests.TestMakeTemplateFragmentKey)", "test_with_unicode_vary_on (cache.tests.TestMakeTemplateFragmentKey)", "test_without_vary_on (cache.tests.TestMakeTemplateFragmentKey)", "test_get_cache_key (cache.tests.TestWithTemplateResponse)", "test_get_cache_key_with_query (cache.tests.TestWithTemplateResponse)", "test_patch_vary_headers (cache.tests.TestWithTemplateResponse)"]}
{"instance_id": "django__django-16400", "tests_passing_in_original_repo": ["test_get_pass (auth_tests.test_management.ChangepasswordManagementCommandTestCase)", "test_get_pass_no_input (auth_tests.test_management.ChangepasswordManagementCommandTestCase)", "test_nonexistent_username (auth_tests.test_management.ChangepasswordManagementCommandTestCase)", "A CommandError should be raised if the user enters in passwords which", "The system username is used if --username isn't provided.", "Executing the changepassword management command should change joe's password", "#21627 -- Executing the changepassword management command should allow", "A CommandError should be thrown by handle() if the user enters in", "`post_migrate` handler ordering isn't guaranteed. Simulate a case", "test_default_permissions (auth_tests.test_management.CreatePermissionsTests)", "A proxy model's permissions use its own content type rather than the", "#24075 - Permissions shouldn't be created or deleted if the ContentType", "Check the operation of the createsuperuser management command", "Creation fails if --username is blank.", "test_blank_username_non_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "createsuperuser uses a default username when one isn't provided.", "test_email_in_username (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_environment_variable_m2m_non_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_environment_variable_non_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "Creation fails if the username already exists.", "Creation fails if the username already exists and a custom user model", "call_command() gets username='janet' and interactive=True.", "test_fields_with_fk (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_fields_with_fk_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_fields_with_fk_via_option_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_fields_with_m2m (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_fields_with_m2m_and_through (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_fields_with_m2m_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_fields_with_m2m_interactive_blank (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_ignore_environment_variable_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_ignore_environment_variable_non_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "Creation fails if the username fails validation.", "test_keyboard_interrupt (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_no_email_argument (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_non_ascii_verbose_name (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "You can pass a stdin object as an option and it should be", "Creation should fail if the password fails validation.", "Password validation can be bypassed by entering 'y' at the prompt.", "If the command is not called from a TTY, it should be skipped and a", "A superuser can be created when a custom user model is in use", "A Custom superuser won't be created when a required field isn't provided", "test_swappable_user_username_non_unique (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_usermodel_without_password (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_usermodel_without_password_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_fk (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_fk_environment_variable (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_fk_via_option_interactive (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_password_against_required_fields (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_password_against_required_fields_via_option (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_password_against_username (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_validate_username (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "Creation should fail if the user enters blank passwords.", "Creation should fail if the user enters mismatched passwords.", "test_verbosity_zero (auth_tests.test_management.CreatesuperuserManagementCommandTestCase)", "test_actual_implementation (auth_tests.test_management.GetDefaultUsernameTestCase)", "test_existing (auth_tests.test_management.GetDefaultUsernameTestCase)", "test_i18n (auth_tests.test_management.GetDefaultUsernameTestCase)", "test_simple (auth_tests.test_management.GetDefaultUsernameTestCase)", "test_with_database (auth_tests.test_management.GetDefaultUsernameTestCase)", "test_input_not_found (auth_tests.test_management.MockInputTests)", "changepassword --database should operate on the specified DB.", "test_createsuperuser_command_suggested_username_with_database_option (auth_tests.test_management.MultiDBCreatesuperuserTestCase)", "createsuperuser --database should operate on the specified DB."]}
{"instance_id": "django__django-16408", "tests_passing_in_original_repo": ["test_foreign_key (known_related_objects.tests.ExistingRelatedInstancesTests.test_foreign_key)", "test_foreign_key_multiple_prefetch (known_related_objects.tests.ExistingRelatedInstancesTests.test_foreign_key_multiple_prefetch)", "test_foreign_key_prefetch_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_foreign_key_prefetch_related)", "test_one_to_one (known_related_objects.tests.ExistingRelatedInstancesTests.test_one_to_one)", "test_one_to_one_multi_prefetch_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_one_to_one_multi_prefetch_related)", "test_one_to_one_multi_select_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_one_to_one_multi_select_related)", "test_one_to_one_prefetch_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_one_to_one_prefetch_related)", "test_one_to_one_select_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_one_to_one_select_related)", "test_queryset_and (known_related_objects.tests.ExistingRelatedInstancesTests.test_queryset_and)", "test_queryset_or (known_related_objects.tests.ExistingRelatedInstancesTests.test_queryset_or)", "test_queryset_or_different_cached_items (known_related_objects.tests.ExistingRelatedInstancesTests.test_queryset_or_different_cached_items)", "test_queryset_or_only_one_with_precache (known_related_objects.tests.ExistingRelatedInstancesTests.test_queryset_or_only_one_with_precache)", "test_reverse_fk_select_related_multiple (known_related_objects.tests.ExistingRelatedInstancesTests.test_reverse_fk_select_related_multiple)", "test_reverse_one_to_one (known_related_objects.tests.ExistingRelatedInstancesTests.test_reverse_one_to_one)", "test_reverse_one_to_one_multi_prefetch_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_reverse_one_to_one_multi_prefetch_related)", "test_reverse_one_to_one_multi_select_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_reverse_one_to_one_multi_select_related)", "test_reverse_one_to_one_prefetch_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_reverse_one_to_one_prefetch_related)", "test_reverse_one_to_one_select_related (known_related_objects.tests.ExistingRelatedInstancesTests.test_reverse_one_to_one_select_related)"]}
{"instance_id": "django__django-16527", "tests_passing_in_original_repo": ["admin_modify template tags follow the standard search pattern", "admin_list template tags follow the standard search pattern", "test_override_show_save_and_add_another (admin_views.test_templatetags.AdminTemplateTagsTest.test_override_show_save_and_add_another)", "submit_row template tag should pass whole context.", "test_choice_links (admin_views.test_templatetags.DateHierarchyTests.test_choice_links)", "test_choice_links_datetime (admin_views.test_templatetags.DateHierarchyTests.test_choice_links_datetime)"]}
{"instance_id": "django__django-16595", "tests_passing_in_original_repo": ["AlterField should optimize into AddField.", "RemoveField should cancel AddField", "RenameField should optimize into AddField", "test_alter_alter_index_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_index_model)", "test_alter_alter_owrt_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_owrt_model)", "test_alter_alter_table_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_table_model)", "test_alter_alter_unique_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_unique_model)", "RemoveField should absorb AlterField", "RenameField should optimize to the other side of AlterField,", "test_create_alter_index_delete_model (migrations.test_optimizer.OptimizerTests.test_create_alter_index_delete_model)", "test_create_alter_index_field (migrations.test_optimizer.OptimizerTests.test_create_alter_index_field)", "test_create_alter_model_managers (migrations.test_optimizer.OptimizerTests.test_create_alter_model_managers)", "test_create_alter_model_options (migrations.test_optimizer.OptimizerTests.test_create_alter_model_options)", "test_create_alter_owrt_delete_model (migrations.test_optimizer.OptimizerTests.test_create_alter_owrt_delete_model)", "test_create_alter_owrt_field (migrations.test_optimizer.OptimizerTests.test_create_alter_owrt_field)", "test_create_alter_unique_delete_model (migrations.test_optimizer.OptimizerTests.test_create_alter_unique_delete_model)", "test_create_alter_unique_field (migrations.test_optimizer.OptimizerTests.test_create_alter_unique_field)", "CreateModel and DeleteModel should collapse into nothing.", "AddField should optimize into CreateModel.", "AddField should NOT optimize into CreateModel if it's an M2M using a", "AlterField should optimize into CreateModel.", "test_create_model_and_remove_model_options (migrations.test_optimizer.OptimizerTests.test_create_model_and_remove_model_options)", "CreateModel order remains unchanged if the later AddField operation", "A CreateModel that inherits from another isn't reordered to avoid", "RemoveField should optimize into CreateModel.", "RenameField should optimize into CreateModel.", "AddField optimizes into CreateModel if it's a FK to a model that's", "CreateModel reordering behavior doesn't result in an infinite loop if", "CreateModel should absorb RenameModels.", "test_none_app_label (migrations.test_optimizer.OptimizerTests.test_none_app_label)", "test_optimize_elidable_operation (migrations.test_optimizer.OptimizerTests.test_optimize_elidable_operation)", "We should be able to optimize away create/delete through a create or", "field-level through checking is working. This should manage to collapse", "test_rename_index (migrations.test_optimizer.OptimizerTests.test_rename_index)", "RenameModels should absorb themselves.", "The optimizer does nothing on a single operation,", "test_swapping_fields_names (migrations.test_optimizer.OptimizerTests.test_swapping_fields_names)"]}
{"instance_id": "django__django-16816", "tests_passing_in_original_repo": ["test_actions_not_unique (modeladmin.test_checks.ActionsCheckTests.test_actions_not_unique)", "test_actions_unique (modeladmin.test_checks.ActionsCheckTests.test_actions_unique)", "test_custom_permissions_require_matching_has_method (modeladmin.test_checks.ActionsCheckTests.test_custom_permissions_require_matching_has_method)", "test_autocomplete_e036 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e036)", "test_autocomplete_e037 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e037)", "test_autocomplete_e039 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e039)", "test_autocomplete_e040 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e040)", "test_autocomplete_e38 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e38)", "test_autocomplete_is_onetoone (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_is_onetoone)", "test_autocomplete_is_valid (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_is_valid)", "test_invalid_field_type (modeladmin.test_checks.DateHierarchyCheckTests.test_invalid_field_type)", "test_missing_field (modeladmin.test_checks.DateHierarchyCheckTests.test_missing_field)", "test_related_invalid_field_type (modeladmin.test_checks.DateHierarchyCheckTests.test_related_invalid_field_type)", "test_related_valid_case (modeladmin.test_checks.DateHierarchyCheckTests.test_related_valid_case)", "test_valid_case (modeladmin.test_checks.DateHierarchyCheckTests.test_valid_case)", "test_not_integer (modeladmin.test_checks.ExtraCheckTests.test_not_integer)", "test_valid_case (modeladmin.test_checks.ExtraCheckTests.test_valid_case)", "test_duplicate_fields_in_fields (modeladmin.test_checks.FieldsCheckTests.test_duplicate_fields_in_fields)", "test_inline (modeladmin.test_checks.FieldsCheckTests.test_inline)", "test_duplicate_fields (modeladmin.test_checks.FieldsetsCheckTests.test_duplicate_fields)", "test_duplicate_fields_in_fieldsets (modeladmin.test_checks.FieldsetsCheckTests.test_duplicate_fields_in_fieldsets)", "test_fieldsets_with_custom_form_validation (modeladmin.test_checks.FieldsetsCheckTests.test_fieldsets_with_custom_form_validation)", "test_item_not_a_pair (modeladmin.test_checks.FieldsetsCheckTests.test_item_not_a_pair)", "test_missing_fields_key (modeladmin.test_checks.FieldsetsCheckTests.test_missing_fields_key)", "test_non_iterable_item (modeladmin.test_checks.FieldsetsCheckTests.test_non_iterable_item)", "test_not_iterable (modeladmin.test_checks.FieldsetsCheckTests.test_not_iterable)", "test_second_element_of_item_not_a_dict (modeladmin.test_checks.FieldsetsCheckTests.test_second_element_of_item_not_a_dict)", "test_specified_both_fields_and_fieldsets (modeladmin.test_checks.FieldsetsCheckTests.test_specified_both_fields_and_fieldsets)", "test_valid_case (modeladmin.test_checks.FieldsetsCheckTests.test_valid_case)", "test_invalid_field_type (modeladmin.test_checks.FilterHorizontalCheckTests.test_invalid_field_type)", "test_missing_field (modeladmin.test_checks.FilterHorizontalCheckTests.test_missing_field)", "test_not_iterable (modeladmin.test_checks.FilterHorizontalCheckTests.test_not_iterable)", "test_valid_case (modeladmin.test_checks.FilterHorizontalCheckTests.test_valid_case)", "test_invalid_field_type (modeladmin.test_checks.FilterVerticalCheckTests.test_invalid_field_type)", "test_missing_field (modeladmin.test_checks.FilterVerticalCheckTests.test_missing_field)", "test_not_iterable (modeladmin.test_checks.FilterVerticalCheckTests.test_not_iterable)", "test_valid_case (modeladmin.test_checks.FilterVerticalCheckTests.test_valid_case)", "test_missing_field (modeladmin.test_checks.FkNameCheckTests.test_missing_field)", "test_proxy_model_parent (modeladmin.test_checks.FkNameCheckTests.test_proxy_model_parent)", "test_valid_case (modeladmin.test_checks.FkNameCheckTests.test_valid_case)", "test_fieldsets_with_custom_form_validation (modeladmin.test_checks.FormCheckTests.test_fieldsets_with_custom_form_validation)", "test_invalid_type (modeladmin.test_checks.FormCheckTests.test_invalid_type)", "test_valid_case (modeladmin.test_checks.FormCheckTests.test_valid_case)", "test_inline_without_formset_class (modeladmin.test_checks.FormsetCheckTests.test_inline_without_formset_class)", "test_invalid_type (modeladmin.test_checks.FormsetCheckTests.test_invalid_type)", "test_valid_case (modeladmin.test_checks.FormsetCheckTests.test_valid_case)", "test_invalid_callable (modeladmin.test_checks.InlinesCheckTests.test_invalid_callable)", "test_invalid_model (modeladmin.test_checks.InlinesCheckTests.test_invalid_model)", "test_invalid_model_type (modeladmin.test_checks.InlinesCheckTests.test_invalid_model_type)", "test_missing_model_field (modeladmin.test_checks.InlinesCheckTests.test_missing_model_field)", "test_not_correct_inline_field (modeladmin.test_checks.InlinesCheckTests.test_not_correct_inline_field)", "test_not_iterable (modeladmin.test_checks.InlinesCheckTests.test_not_iterable)", "test_not_model_admin (modeladmin.test_checks.InlinesCheckTests.test_not_model_admin)", "test_valid_case (modeladmin.test_checks.InlinesCheckTests.test_valid_case)", "test_both_list_editable_and_list_display_links (modeladmin.test_checks.ListDisplayEditableTests.test_both_list_editable_and_list_display_links)", "The first item in list_display can be in list_editable as long as", "The first item in list_display cannot be in list_editable if", "The first item in list_display can be the same as the first in", "The first item in list_display cannot be the same as the first item", "list_display and list_editable can contain the same values", "test_None_is_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests.test_None_is_valid_case)", "list_display_links is checked for list/tuple/None even if", "list_display_links check is skipped if get_list_display() is overridden.", "test_missing_field (modeladmin.test_checks.ListDisplayLinksCheckTests.test_missing_field)", "test_missing_in_list_display (modeladmin.test_checks.ListDisplayLinksCheckTests.test_missing_in_list_display)", "test_not_iterable (modeladmin.test_checks.ListDisplayLinksCheckTests.test_not_iterable)", "test_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests.test_valid_case)", "test_invalid_field_type (modeladmin.test_checks.ListDisplayTests.test_invalid_field_type)", "test_invalid_reverse_related_field (modeladmin.test_checks.ListDisplayTests.test_invalid_reverse_related_field)", "test_missing_field (modeladmin.test_checks.ListDisplayTests.test_missing_field)", "test_not_iterable (modeladmin.test_checks.ListDisplayTests.test_not_iterable)", "test_valid_case (modeladmin.test_checks.ListDisplayTests.test_valid_case)", "test_valid_field_accessible_via_instance (modeladmin.test_checks.ListDisplayTests.test_valid_field_accessible_via_instance)", "test_callable (modeladmin.test_checks.ListFilterTests.test_callable)", "test_list_filter_is_func (modeladmin.test_checks.ListFilterTests.test_list_filter_is_func)", "test_list_filter_validation (modeladmin.test_checks.ListFilterTests.test_list_filter_validation)", "test_missing_field (modeladmin.test_checks.ListFilterTests.test_missing_field)", "test_not_associated_with_field_name (modeladmin.test_checks.ListFilterTests.test_not_associated_with_field_name)", "test_not_callable (modeladmin.test_checks.ListFilterTests.test_not_callable)", "test_not_filter (modeladmin.test_checks.ListFilterTests.test_not_filter)", "test_not_filter_again (modeladmin.test_checks.ListFilterTests.test_not_filter_again)", "test_not_filter_again_again (modeladmin.test_checks.ListFilterTests.test_not_filter_again_again)", "test_not_list_filter_class (modeladmin.test_checks.ListFilterTests.test_not_list_filter_class)", "test_valid_case (modeladmin.test_checks.ListFilterTests.test_valid_case)", "test_not_integer (modeladmin.test_checks.ListMaxShowAllCheckTests.test_not_integer)", "test_valid_case (modeladmin.test_checks.ListMaxShowAllCheckTests.test_valid_case)", "test_not_integer (modeladmin.test_checks.ListPerPageCheckTests.test_not_integer)", "test_valid_case (modeladmin.test_checks.ListPerPageCheckTests.test_valid_case)", "test_invalid_type (modeladmin.test_checks.ListSelectRelatedCheckTests.test_invalid_type)", "test_valid_case (modeladmin.test_checks.ListSelectRelatedCheckTests.test_valid_case)", "test_not_integer (modeladmin.test_checks.MaxNumCheckTests.test_not_integer)", "test_valid_case (modeladmin.test_checks.MaxNumCheckTests.test_valid_case)", "test_not_integer (modeladmin.test_checks.MinNumCheckTests.test_not_integer)", "test_valid_case (modeladmin.test_checks.MinNumCheckTests.test_valid_case)", "test_invalid_expression (modeladmin.test_checks.OrderingCheckTests.test_invalid_expression)", "test_not_iterable (modeladmin.test_checks.OrderingCheckTests.test_not_iterable)", "test_random_marker_not_alone (modeladmin.test_checks.OrderingCheckTests.test_random_marker_not_alone)", "test_valid_case (modeladmin.test_checks.OrderingCheckTests.test_valid_case)", "test_valid_complex_case (modeladmin.test_checks.OrderingCheckTests.test_valid_complex_case)", "test_valid_expression (modeladmin.test_checks.OrderingCheckTests.test_valid_expression)", "test_valid_random_marker_case (modeladmin.test_checks.OrderingCheckTests.test_valid_random_marker_case)", "test_invalid_field_type (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_invalid_field_type)", "test_missing_field (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_missing_field)", "test_missing_field_again (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_missing_field_again)", "test_not_dictionary (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_not_dictionary)", "test_not_list_or_tuple (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_not_list_or_tuple)", "test_one_to_one_field (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_one_to_one_field)", "test_valid_case (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_valid_case)", "test_invalid_field_type (modeladmin.test_checks.RadioFieldsCheckTests.test_invalid_field_type)", "test_invalid_value (modeladmin.test_checks.RadioFieldsCheckTests.test_invalid_value)", "test_missing_field (modeladmin.test_checks.RadioFieldsCheckTests.test_missing_field)", "test_not_dictionary (modeladmin.test_checks.RadioFieldsCheckTests.test_not_dictionary)", "test_valid_case (modeladmin.test_checks.RadioFieldsCheckTests.test_valid_case)", "test_field_attname (modeladmin.test_checks.RawIdCheckTests.test_field_attname)", "test_invalid_field_type (modeladmin.test_checks.RawIdCheckTests.test_invalid_field_type)", "test_missing_field (modeladmin.test_checks.RawIdCheckTests.test_missing_field)", "test_not_iterable (modeladmin.test_checks.RawIdCheckTests.test_not_iterable)", "test_valid_case (modeladmin.test_checks.RawIdCheckTests.test_valid_case)", "test_not_boolean (modeladmin.test_checks.SaveAsCheckTests.test_not_boolean)", "test_valid_case (modeladmin.test_checks.SaveAsCheckTests.test_valid_case)", "test_not_boolean (modeladmin.test_checks.SaveOnTopCheckTests.test_not_boolean)", "test_valid_case (modeladmin.test_checks.SaveOnTopCheckTests.test_valid_case)", "test_not_iterable (modeladmin.test_checks.SearchFieldsCheckTests.test_not_iterable)"]}
{"instance_id": "django__django-16820", "tests_passing_in_original_repo": ["Added fields will be created before using them in index_together.", "test_add_index_together (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_add_index_together)", "test_add_model_order_with_respect_to_index_together (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_add_model_order_with_respect_to_index_together)", "Fields are altered after deleting some index_together.", "test_create_model_and_index_together (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_create_model_and_index_together)", "Empty index_together shouldn't generate a migration.", "index_together doesn't generate a migration if no changes have been", "index_together triggers on ordering changes.", "test_index_together_remove_fk (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_index_together_remove_fk)", "test_partly_alter_index_together_decrease (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_partly_alter_index_together_decrease)", "test_partly_alter_index_together_increase (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_partly_alter_index_together_increase)", "Removed fields will be removed after updating index_together.", "test_remove_index_together (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_remove_index_together)", "Fields are renamed before updating index_together.", "test_rename_index_together_to_index (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_rename_index_together_to_index)", "test_rename_index_together_to_index_extra_options (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_rename_index_together_to_index_extra_options)", "test_rename_index_together_to_index_order_fields (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_rename_index_together_to_index_order_fields)", "test_set_alter_order_with_respect_to_index_together (migrations.test_autodetector.AutodetectorIndexTogetherTests.test_set_alter_order_with_respect_to_index_together)", "Setting order_with_respect_to when adding the FK too does", "#23405 - Adding a NOT NULL and blank `CharField` or `TextField`", "Test change detection of new constraints.", "test_add_constraints_with_new_model (migrations.test_autodetector.AutodetectorTests.test_add_constraints_with_new_model)", "test_add_custom_fk_with_hardcoded_to (migrations.test_autodetector.AutodetectorTests.test_add_custom_fk_with_hardcoded_to)", "test_add_date_fields_with_auto_now_add_asking_for_default (migrations.test_autodetector.AutodetectorTests.test_add_date_fields_with_auto_now_add_asking_for_default)", "test_add_date_fields_with_auto_now_add_not_asking_for_null_addition (migrations.test_autodetector.AutodetectorTests.test_add_date_fields_with_auto_now_add_not_asking_for_null_addition)", "test_add_date_fields_with_auto_now_not_asking_for_default (migrations.test_autodetector.AutodetectorTests.test_add_date_fields_with_auto_now_not_asking_for_default)", "Tests autodetection of new fields.", "Added fields will be created before using them in unique_together.", "#22030 - Adding a field with a default should work.", "test_add_index_with_new_model (migrations.test_autodetector.AutodetectorTests.test_add_index_with_new_model)", "Test change detection of new indexes.", "#22435 - Adding a ManyToManyField should not prompt for a default.", "Setting order_with_respect_to when adding the whole model", "test_add_model_order_with_respect_to_index_constraint (migrations.test_autodetector.AutodetectorTests.test_add_model_order_with_respect_to_index_constraint)", "test_add_model_order_with_respect_to_unique_together (migrations.test_autodetector.AutodetectorTests.test_add_model_order_with_respect_to_unique_together)", "Removing a base field takes place before adding a new inherited model", "#23405 - Adding a NOT NULL and non-blank `CharField` or `TextField`", "Tests unique_together detection.", "Tests detection for adding db_table in model's options.", "Tests detection for changing db_table in model's options'.", "test_alter_db_table_comment_add (migrations.test_autodetector.AutodetectorTests.test_alter_db_table_comment_add)", "test_alter_db_table_comment_change (migrations.test_autodetector.AutodetectorTests.test_alter_db_table_comment_change)", "test_alter_db_table_comment_no_changes (migrations.test_autodetector.AutodetectorTests.test_alter_db_table_comment_no_changes)", "test_alter_db_table_comment_remove (migrations.test_autodetector.AutodetectorTests.test_alter_db_table_comment_remove)", "Alter_db_table doesn't generate a migration if no changes have been made.", "Tests detection for removing db_table in model's options.", "Tests when model and db_table changes, autodetector must create two", "Fields are altered after deleting some unique_together.", "test_alter_field_to_fk_dependency_other_app (migrations.test_autodetector.AutodetectorTests.test_alter_field_to_fk_dependency_other_app)", "#23609 - Tests autodetection of nullable to non-nullable alterations.", "ForeignKeys are altered _before_ the model they used to", "test_alter_many_to_many (migrations.test_autodetector.AutodetectorTests.test_alter_many_to_many)", "Changing the model managers adds a new operation.", "Changing a model's options should make a change.", "Changing a proxy model's options should also make a change.", "test_alter_regex_string_to_compiled_regex (migrations.test_autodetector.AutodetectorTests.test_alter_regex_string_to_compiled_regex)", "test_alter_unique_together_fk_to_m2m (migrations.test_autodetector.AutodetectorTests.test_alter_unique_together_fk_to_m2m)", "Tests auto-naming of migrations for graph matching.", "test_arrange_for_graph_with_multiple_initial (migrations.test_autodetector.AutodetectorTests.test_arrange_for_graph_with_multiple_initial)", "Bases of other models come first.", "test_bases_first_mixed_case_app_label (migrations.test_autodetector.AutodetectorTests.test_bases_first_mixed_case_app_label)", "#23315 - The dependency resolver knows to put all CreateModel", "#23322 - The dependency resolver knows to explicitly resolve", "Having a circular ForeignKey dependency automatically", "#23938 - Changing a concrete field into a ManyToManyField", "test_create_model_and_unique_together (migrations.test_autodetector.AutodetectorTests.test_create_model_and_unique_together)", "Test creation of new model with constraints already defined.", "Test creation of new model with indexes already defined.", "Adding a m2m with a through model and the models that use it should be", "test_create_with_through_model_separate_apps (migrations.test_autodetector.AutodetectorTests.test_create_with_through_model_separate_apps)", "Two instances which deconstruct to the same value aren't considered a", "Tests custom naming of migrations for graph matching.", "Field instances are handled correctly by nested deconstruction.", "#22951 -- Uninstantiated classes with deconstruct are correctly returned", "Nested deconstruction descends into dict values.", "Nested deconstruction descends into lists.", "Nested deconstruction descends into tuples.", "test_default_related_name_option (migrations.test_autodetector.AutodetectorTests.test_default_related_name_option)", "test_different_regex_does_alter (migrations.test_autodetector.AutodetectorTests.test_different_regex_does_alter)", "Empty unique_together shouldn't generate a migration.", "A dependency to an app with no migrations uses __first__.", "Having a ForeignKey automatically adds a dependency.", "#23100 - ForeignKeys correctly depend on other apps' models.", "Removing an FK and the model it targets in the same change must remove", "test_identical_regex_doesnt_alter (migrations.test_autodetector.AutodetectorTests.test_identical_regex_doesnt_alter)", "Tests when model changes but db_table stays as-is, autodetector must not", "A dependency to an app with existing migrations uses the", "A model with a m2m field that specifies a \"through\" model cannot be", "test_managed_to_unmanaged (migrations.test_autodetector.AutodetectorTests.test_managed_to_unmanaged)", "#23938 - Changing a ManyToManyField into a concrete field", "Removing a ManyToManyField and the \"through\" model in the same change", "Removing a model that contains a ManyToManyField and the \"through\" model", "test_mti_inheritance_model_removal (migrations.test_autodetector.AutodetectorTests.test_mti_inheritance_model_removal)", "Inheriting models doesn't move *_ptr fields into AddField operations.", "Nested deconstruction is applied recursively to the args/kwargs of", "Tests autodetection of new models.", "If two models with a ForeignKey from one to the other are removed at the", "Tests deletion of old models.", "Test change detection of reordering of fields in indexes.", "test_parse_number (migrations.test_autodetector.AutodetectorTests.test_parse_number)", "test_partly_alter_unique_together_decrease (migrations.test_autodetector.AutodetectorTests.test_partly_alter_unique_together_decrease)", "test_partly_alter_unique_together_increase (migrations.test_autodetector.AutodetectorTests.test_partly_alter_unique_together_increase)", "A relation used as the primary key is kept as part of CreateModel.", "The autodetector correctly deals with proxy models.", "Bases of proxies come first.", "#23415 - The autodetector must correctly deal with custom FK on proxy", "FK dependencies still work on proxy models.", "test_proxy_non_model_parent (migrations.test_autodetector.AutodetectorTests.test_proxy_non_model_parent)", "test_proxy_to_mti_with_fk_to_proxy (migrations.test_autodetector.AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy)", "test_proxy_to_mti_with_fk_to_proxy_proxy (migrations.test_autodetector.AutodetectorTests.test_proxy_to_mti_with_fk_to_proxy_proxy)", "Removing order_with_respect_to when removing the FK too does", "Test change detection of removed constraints.", "Tests autodetection of removed fields.", "Removed fields will be removed after updating unique_together.", "Test change detection of removed indexes.", "Tests autodetection of renamed fields.", "Fields are renamed before updating unique_together.", "test_rename_field_foreign_key_to_field (migrations.test_autodetector.AutodetectorTests.test_rename_field_foreign_key_to_field)", "RenameField is used if a field is renamed and db_column equal to the", "test_rename_field_with_renamed_model (migrations.test_autodetector.AutodetectorTests.test_rename_field_with_renamed_model)", "test_rename_foreign_object_fields (migrations.test_autodetector.AutodetectorTests.test_rename_foreign_object_fields)", "test_rename_indexes (migrations.test_autodetector.AutodetectorTests.test_rename_indexes)", "Tests autodetection of renamed models that are used in M2M relations as", "Tests autodetection of renamed models.", "Model name is case-insensitive. Changing case doesn't lead to any", "The migration to rename a model pointed to by a foreign key in another", "#24537 - The order of fields in a model does not influence", "Tests autodetection of renamed models while simultaneously renaming one", "test_rename_referenced_primary_key (migrations.test_autodetector.AutodetectorTests.test_rename_referenced_primary_key)", "test_rename_related_field_preserved_db_column (migrations.test_autodetector.AutodetectorTests.test_rename_related_field_preserved_db_column)", "test_renamed_referenced_m2m_model_case (migrations.test_autodetector.AutodetectorTests.test_renamed_referenced_m2m_model_case)", "#22300 - Adding an FK in the same \"spot\" as a deleted CharField should", "A migration with a FK between two models of the same app does", "#22275 - A migration with circular FK dependency does not try", "A migration with a FK between two models of the same app", "Setting order_with_respect_to adds a field.", "test_set_alter_order_with_respect_to_index_constraint_unique_together (migrations.test_autodetector.AutodetectorTests.test_set_alter_order_with_respect_to_index_constraint_unique_together)", "test_supports_functools_partial (migrations.test_autodetector.AutodetectorTests.test_supports_functools_partial)", "test_swappable (migrations.test_autodetector.AutodetectorTests.test_swappable)", "test_swappable_changed (migrations.test_autodetector.AutodetectorTests.test_swappable_changed)", "test_swappable_circular_multi_mti (migrations.test_autodetector.AutodetectorTests.test_swappable_circular_multi_mti)", "Swappable models get their CreateModel first.", "test_swappable_lowercase (migrations.test_autodetector.AutodetectorTests.test_swappable_lowercase)", "test_swappable_many_to_many_model_case (migrations.test_autodetector.AutodetectorTests.test_swappable_many_to_many_model_case)", "Trim does not remove dependencies but does remove unwanted apps.", "unique_together doesn't generate a migration if no", "unique_together also triggers on ordering changes.", "Tests unique_together and field removal detection & ordering", "The autodetector correctly deals with managed models.", "#23415 - The autodetector must correctly deal with custom FK on", "test_unmanaged_delete (migrations.test_autodetector.AutodetectorTests.test_unmanaged_delete)", "test_unmanaged_to_managed (migrations.test_autodetector.AutodetectorTests.test_unmanaged_to_managed)", "test_auto (migrations.test_autodetector.MigrationSuggestNameTests.test_auto)", "test_many_operations_suffix (migrations.test_autodetector.MigrationSuggestNameTests.test_many_operations_suffix)", "test_no_operations (migrations.test_autodetector.MigrationSuggestNameTests.test_no_operations)", "test_no_operations_initial (migrations.test_autodetector.MigrationSuggestNameTests.test_no_operations_initial)", "test_none_name (migrations.test_autodetector.MigrationSuggestNameTests.test_none_name)", "test_none_name_with_initial_true (migrations.test_autodetector.MigrationSuggestNameTests.test_none_name_with_initial_true)", "test_operation_with_invalid_chars_in_suggested_name (migrations.test_autodetector.MigrationSuggestNameTests.test_operation_with_invalid_chars_in_suggested_name)", "test_operation_with_no_suggested_name (migrations.test_autodetector.MigrationSuggestNameTests.test_operation_with_no_suggested_name)", "test_single_operation (migrations.test_autodetector.MigrationSuggestNameTests.test_single_operation)", "test_single_operation_long_name (migrations.test_autodetector.MigrationSuggestNameTests.test_single_operation_long_name)", "test_two_create_models (migrations.test_autodetector.MigrationSuggestNameTests.test_two_create_models)", "test_two_create_models_with_initial_true (migrations.test_autodetector.MigrationSuggestNameTests.test_two_create_models_with_initial_true)", "test_two_operations (migrations.test_autodetector.MigrationSuggestNameTests.test_two_operations)", "AlterField should optimize into AddField.", "RemoveField should cancel AddField", "RenameField should optimize into AddField", "test_add_remove_index (migrations.test_optimizer.OptimizerTests.test_add_remove_index)", "test_alter_alter_field (migrations.test_optimizer.OptimizerTests.test_alter_alter_field)", "test_alter_alter_index_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_index_model)", "test_alter_alter_owrt_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_owrt_model)", "test_alter_alter_table_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_table_model)", "test_alter_alter_unique_model (migrations.test_optimizer.OptimizerTests.test_alter_alter_unique_model)", "RemoveField should absorb AlterField", "RenameField should optimize to the other side of AlterField,", "test_create_alter_index_delete_model (migrations.test_optimizer.OptimizerTests.test_create_alter_index_delete_model)", "test_create_alter_index_field (migrations.test_optimizer.OptimizerTests.test_create_alter_index_field)", "test_create_alter_model_managers (migrations.test_optimizer.OptimizerTests.test_create_alter_model_managers)", "test_create_alter_model_options (migrations.test_optimizer.OptimizerTests.test_create_alter_model_options)", "test_create_alter_owrt_delete_model (migrations.test_optimizer.OptimizerTests.test_create_alter_owrt_delete_model)", "test_create_alter_owrt_field (migrations.test_optimizer.OptimizerTests.test_create_alter_owrt_field)", "test_create_alter_unique_delete_model (migrations.test_optimizer.OptimizerTests.test_create_alter_unique_delete_model)", "test_create_alter_unique_field (migrations.test_optimizer.OptimizerTests.test_create_alter_unique_field)", "CreateModel and DeleteModel should collapse into nothing.", "AddField should optimize into CreateModel.", "AddField should NOT optimize into CreateModel if it's an M2M using a", "AlterField should optimize into CreateModel.", "test_create_model_and_remove_model_options (migrations.test_optimizer.OptimizerTests.test_create_model_and_remove_model_options)", "CreateModel order remains unchanged if the later AddField operation", "A CreateModel that inherits from another isn't reordered to avoid", "RemoveField should optimize into CreateModel.", "RenameField should optimize into CreateModel.", "AddField optimizes into CreateModel if it's a FK to a model that's", "CreateModel reordering behavior doesn't result in an infinite loop if", "CreateModel should absorb RenameModels.", "test_none_app_label (migrations.test_optimizer.OptimizerTests.test_none_app_label)", "test_optimize_elidable_operation (migrations.test_optimizer.OptimizerTests.test_optimize_elidable_operation)", "We should be able to optimize away create/delete through a create or", "field-level through checking is working. This should manage to collapse", "test_rename_index (migrations.test_optimizer.OptimizerTests.test_rename_index)", "RenameModels should absorb themselves.", "The optimizer does nothing on a single operation,", "test_swapping_fields_names (migrations.test_optimizer.OptimizerTests.test_swapping_fields_names)"]}
{"instance_id": "django__django-16873", "tests_passing_in_original_repo": ["test_autoescape (template_tests.filter_tests.test_join.FunctionTests.test_autoescape)", "test_autoescape_off (template_tests.filter_tests.test_join.FunctionTests.test_autoescape_off)", "test_list (template_tests.filter_tests.test_join.FunctionTests.test_list)", "test_noniterable_arg (template_tests.filter_tests.test_join.FunctionTests.test_noniterable_arg)", "test_noniterable_arg_autoescape_off (template_tests.filter_tests.test_join.FunctionTests.test_noniterable_arg_autoescape_off)", "test_join01 (template_tests.filter_tests.test_join.JoinTests.test_join01)", "test_join02 (template_tests.filter_tests.test_join.JoinTests.test_join02)", "test_join03 (template_tests.filter_tests.test_join.JoinTests.test_join03)", "test_join04 (template_tests.filter_tests.test_join.JoinTests.test_join04)", "test_join05 (template_tests.filter_tests.test_join.JoinTests.test_join05)", "test_join06 (template_tests.filter_tests.test_join.JoinTests.test_join06)", "test_join07 (template_tests.filter_tests.test_join.JoinTests.test_join07)", "test_join08 (template_tests.filter_tests.test_join.JoinTests.test_join08)"]}
{"instance_id": "django__django-16910", "tests_passing_in_original_repo": ["test_delete_defered_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_model)", "test_delete_defered_proxy_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_proxy_model)", "test_basic (defer_regress.tests.DeferRegressionTest.test_basic)", "test_common_model_different_mask (defer_regress.tests.DeferRegressionTest.test_common_model_different_mask)", "test_defer_annotate_select_related (defer_regress.tests.DeferRegressionTest.test_defer_annotate_select_related)", "test_defer_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_defer_many_to_many_ignored)", "test_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_defer_with_select_related)", "test_only_and_defer_usage_on_proxy_models (defer_regress.tests.DeferRegressionTest.test_only_and_defer_usage_on_proxy_models)", "test_only_with_select_related (defer_regress.tests.DeferRegressionTest.test_only_with_select_related)", "test_proxy_model_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_proxy_model_defer_with_select_related)", "test_resolve_columns (defer_regress.tests.DeferRegressionTest.test_resolve_columns)", "test_reverse_one_to_one_relations (defer_regress.tests.DeferRegressionTest.test_reverse_one_to_one_relations)", "test_ticket_16409 (defer_regress.tests.DeferRegressionTest.test_ticket_16409)", "test_ticket_23270 (defer_regress.tests.DeferRegressionTest.test_ticket_23270)", "test_back_and_forward (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_back_and_forward)", "test_basic (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_basic)", "test_follow_from_child_class (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_from_child_class)", "test_follow_inheritance (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_inheritance)", "test_follow_next_level (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_next_level)", "test_follow_two (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_two)", "test_follow_two_next_level (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_two_next_level)", "test_forward_and_back (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_forward_and_back)", "test_inheritance_deferred (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred)", "test_inheritance_deferred2 (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred2)", "Ticket #13839: select_related() should NOT cache None", "test_multiinheritance_two_subclasses (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_multiinheritance_two_subclasses)", "test_multiple_subclass (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_multiple_subclass)", "test_not_followed_by_default (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_not_followed_by_default)", "test_nullable_relation (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_nullable_relation)", "test_onetoone_with_subclass (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_onetoone_with_subclass)", "test_onetoone_with_two_subclasses (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_onetoone_with_two_subclasses)", "test_parent_only (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_parent_only)", "test_self_relation (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_self_relation)", "test_reverse_related_validation (select_related_onetoone.tests.ReverseSelectRelatedValidationTests.test_reverse_related_validation)", "test_reverse_related_validation_with_filtered_relation (select_related_onetoone.tests.ReverseSelectRelatedValidationTests.test_reverse_related_validation_with_filtered_relation)"]}
{"instance_id": "django__django-17051", "tests_passing_in_original_repo": ["test_batch_same_vals (bulk_create.tests.BulkCreateTests.test_batch_same_vals)", "test_bulk_insert_expressions (bulk_create.tests.BulkCreateTests.test_bulk_insert_expressions)", "test_bulk_insert_now (bulk_create.tests.BulkCreateTests.test_bulk_insert_now)", "test_bulk_insert_nullable_fields (bulk_create.tests.BulkCreateTests.test_bulk_insert_nullable_fields)", "test_efficiency (bulk_create.tests.BulkCreateTests.test_efficiency)", "test_empty_model (bulk_create.tests.BulkCreateTests.test_empty_model)", "test_explicit_batch_size (bulk_create.tests.BulkCreateTests.test_explicit_batch_size)", "test_explicit_batch_size_efficiency (bulk_create.tests.BulkCreateTests.test_explicit_batch_size_efficiency)", "test_explicit_batch_size_respects_max_batch_size (bulk_create.tests.BulkCreateTests.test_explicit_batch_size_respects_max_batch_size)", "test_ignore_conflicts_ignore (bulk_create.tests.BulkCreateTests.test_ignore_conflicts_ignore)", "test_ignore_update_conflicts_exclusive (bulk_create.tests.BulkCreateTests.test_ignore_update_conflicts_exclusive)", "test_invalid_batch_size_exception (bulk_create.tests.BulkCreateTests.test_invalid_batch_size_exception)", "test_large_batch (bulk_create.tests.BulkCreateTests.test_large_batch)", "test_large_batch_efficiency (bulk_create.tests.BulkCreateTests.test_large_batch_efficiency)", "Test inserting a large batch with objects having primary key set", "test_large_single_field_batch (bulk_create.tests.BulkCreateTests.test_large_single_field_batch)", "test_long_and_short_text (bulk_create.tests.BulkCreateTests.test_long_and_short_text)", "Inserting non-ASCII values with a length in the range 2001 to 4000", "test_multi_table_inheritance_unsupported (bulk_create.tests.BulkCreateTests.test_multi_table_inheritance_unsupported)", "test_non_auto_increment_pk (bulk_create.tests.BulkCreateTests.test_non_auto_increment_pk)", "test_non_auto_increment_pk_efficiency (bulk_create.tests.BulkCreateTests.test_non_auto_increment_pk_efficiency)", "test_nullable_fk_after_parent (bulk_create.tests.BulkCreateTests.test_nullable_fk_after_parent)", "test_nullable_fk_after_parent_bulk_create (bulk_create.tests.BulkCreateTests.test_nullable_fk_after_parent_bulk_create)", "test_proxy_inheritance_supported (bulk_create.tests.BulkCreateTests.test_proxy_inheritance_supported)", "test_set_pk_and_insert_single_item (bulk_create.tests.BulkCreateTests.test_set_pk_and_insert_single_item)", "test_set_pk_and_query_efficiency (bulk_create.tests.BulkCreateTests.test_set_pk_and_query_efficiency)", "test_set_state (bulk_create.tests.BulkCreateTests.test_set_state)", "test_set_state_with_pk_specified (bulk_create.tests.BulkCreateTests.test_set_state_with_pk_specified)", "test_simple (bulk_create.tests.BulkCreateTests.test_simple)", "test_unsaved_parent (bulk_create.tests.BulkCreateTests.test_unsaved_parent)", "test_update_conflicts_invalid_unique_fields (bulk_create.tests.BulkCreateTests.test_update_conflicts_invalid_unique_fields)", "test_update_conflicts_invalid_update_fields (bulk_create.tests.BulkCreateTests.test_update_conflicts_invalid_update_fields)", "test_update_conflicts_no_update_fields (bulk_create.tests.BulkCreateTests.test_update_conflicts_no_update_fields)", "test_update_conflicts_nonexistent_update_fields (bulk_create.tests.BulkCreateTests.test_update_conflicts_nonexistent_update_fields)", "test_update_conflicts_pk_in_update_fields (bulk_create.tests.BulkCreateTests.test_update_conflicts_pk_in_update_fields)", "test_update_conflicts_two_fields_unique_fields_both (bulk_create.tests.BulkCreateTests.test_update_conflicts_two_fields_unique_fields_both)", "test_update_conflicts_two_fields_unique_fields_first (bulk_create.tests.BulkCreateTests.test_update_conflicts_two_fields_unique_fields_first)", "test_update_conflicts_two_fields_unique_fields_second (bulk_create.tests.BulkCreateTests.test_update_conflicts_two_fields_unique_fields_second)", "test_update_conflicts_unique_fields (bulk_create.tests.BulkCreateTests.test_update_conflicts_unique_fields)", "test_update_conflicts_unique_fields_pk (bulk_create.tests.BulkCreateTests.test_update_conflicts_unique_fields_pk)", "test_update_conflicts_unique_fields_required (bulk_create.tests.BulkCreateTests.test_update_conflicts_unique_fields_required)", "test_update_conflicts_unique_fields_update_fields_db_column (bulk_create.tests.BulkCreateTests.test_update_conflicts_unique_fields_update_fields_db_column)", "test_update_conflicts_unique_two_fields_unique_fields_both (bulk_create.tests.BulkCreateTests.test_update_conflicts_unique_two_fields_unique_fields_both)", "test_update_conflicts_unique_two_fields_unique_fields_one (bulk_create.tests.BulkCreateTests.test_update_conflicts_unique_two_fields_unique_fields_one)"]}
{"instance_id": "django__django-17087", "tests_passing_in_original_repo": ["test_args_kwargs_signature (migrations.test_writer.OperationWriterTests.test_args_kwargs_signature)", "test_args_signature (migrations.test_writer.OperationWriterTests.test_args_signature)", "test_empty_signature (migrations.test_writer.OperationWriterTests.test_empty_signature)", "test_expand_args_signature (migrations.test_writer.OperationWriterTests.test_expand_args_signature)", "test_kwargs_signature (migrations.test_writer.OperationWriterTests.test_kwargs_signature)", "test_multiline_args_signature (migrations.test_writer.OperationWriterTests.test_multiline_args_signature)", "test_nested_args_signature (migrations.test_writer.OperationWriterTests.test_nested_args_signature)", "test_nested_operation_expand_args_signature (migrations.test_writer.OperationWriterTests.test_nested_operation_expand_args_signature)", "test_custom_operation (migrations.test_writer.WriterTests.test_custom_operation)", "test_deconstruct_class_arguments (migrations.test_writer.WriterTests.test_deconstruct_class_arguments)", "Test comments at top of file.", "test_migration_path (migrations.test_writer.WriterTests.test_migration_path)", "django.db.models shouldn't be imported if unused.", "test_register_non_serializer (migrations.test_writer.WriterTests.test_register_non_serializer)", "test_register_serializer (migrations.test_writer.WriterTests.test_register_serializer)", "test_serialize_builtin_types (migrations.test_writer.WriterTests.test_serialize_builtin_types)", "test_serialize_builtins (migrations.test_writer.WriterTests.test_serialize_builtins)", "test_serialize_choices (migrations.test_writer.WriterTests.test_serialize_choices)", "Ticket #22943: Test serialization of class-based validators, including", "test_serialize_collections (migrations.test_writer.WriterTests.test_serialize_collections)", "Make sure compiled regex can be serialized.", "test_serialize_complex_func_index (migrations.test_writer.WriterTests.test_serialize_complex_func_index)", "test_serialize_constants (migrations.test_writer.WriterTests.test_serialize_constants)", "test_serialize_datetime (migrations.test_writer.WriterTests.test_serialize_datetime)", "Ticket #22679: makemigrations generates invalid code for (an empty", "test_serialize_enum_flags (migrations.test_writer.WriterTests.test_serialize_enum_flags)", "test_serialize_enums (migrations.test_writer.WriterTests.test_serialize_enums)", "test_serialize_fields (migrations.test_writer.WriterTests.test_serialize_fields)", "test_serialize_frozensets (migrations.test_writer.WriterTests.test_serialize_frozensets)", "test_serialize_functions (migrations.test_writer.WriterTests.test_serialize_functions)", "test_serialize_functools_partial (migrations.test_writer.WriterTests.test_serialize_functools_partial)", "test_serialize_functools_partialmethod (migrations.test_writer.WriterTests.test_serialize_functools_partialmethod)", "test_serialize_iterators (migrations.test_writer.WriterTests.test_serialize_iterators)", "test_serialize_lazy_objects (migrations.test_writer.WriterTests.test_serialize_lazy_objects)", "A reference in a local scope can't be serialized.", "test_serialize_managers (migrations.test_writer.WriterTests.test_serialize_managers)", "test_serialize_multiline_strings (migrations.test_writer.WriterTests.test_serialize_multiline_strings)", "test_serialize_nested_class (migrations.test_writer.WriterTests.test_serialize_nested_class)", "test_serialize_numbers (migrations.test_writer.WriterTests.test_serialize_numbers)", "test_serialize_path_like (migrations.test_writer.WriterTests.test_serialize_path_like)", "test_serialize_pathlib (migrations.test_writer.WriterTests.test_serialize_pathlib)", "test_serialize_range (migrations.test_writer.WriterTests.test_serialize_range)", "test_serialize_set (migrations.test_writer.WriterTests.test_serialize_set)", "test_serialize_settings (migrations.test_writer.WriterTests.test_serialize_settings)", "test_serialize_strings (migrations.test_writer.WriterTests.test_serialize_strings)", "test_serialize_timedelta (migrations.test_writer.WriterTests.test_serialize_timedelta)", "test_serialize_type_model (migrations.test_writer.WriterTests.test_serialize_type_model)", "test_serialize_type_none (migrations.test_writer.WriterTests.test_serialize_type_none)", "An unbound method used within a class body can be serialized.", "test_serialize_uuid (migrations.test_writer.WriterTests.test_serialize_uuid)", "Tests serializing a simple migration.", "test_sorted_dependencies (migrations.test_writer.WriterTests.test_sorted_dependencies)", "#24155 - Tests ordering of imports."]}
{"instance_id": "matplotlib__matplotlib-18869", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_matplotlib.py::test_importable_with_no_home", "lib/matplotlib/tests/test_matplotlib.py::test_use_doc_standard_backends", "lib/matplotlib/tests/test_matplotlib.py::test_importable_with__OO"]}
{"instance_id": "matplotlib__matplotlib-22711", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[0-10-0-10-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[0-10-0-10-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[0-10-1-10.5-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[0-10-1-10.5-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[0-10-1-11-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[0-10-1-11-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-10.5-0-10-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-10.5-0-10-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-10.5-1-10.5-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-10.5-1-10.5-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-10.5-1-11-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-10.5-1-11-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-11-0-10-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-11-0-10-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-11-1-10.5-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-11-1-10.5-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-11-1-11-data]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_minspan[1-11-1-11-pixels]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_drag[True-new_center0]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_drag[False-new_center1]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_selector_set_props_handle_props", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize", "lib/matplotlib/tests/test_widgets.py::test_rectangle_add_state", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_center[True]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_center[False]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_square[True]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_square[False]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_square_center", "lib/matplotlib/tests/test_widgets.py::test_rectangle_rotate[RectangleSelector]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_rotate[EllipseSelector]", "lib/matplotlib/tests/test_widgets.py::test_rectange_add_remove_set", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_square_center_aspect[False]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_resize_square_center_aspect[True]", "lib/matplotlib/tests/test_widgets.py::test_ellipse", "lib/matplotlib/tests/test_widgets.py::test_rectangle_handles", "lib/matplotlib/tests/test_widgets.py::test_rectangle_selector_onselect[True]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_selector_onselect[False]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_selector_ignore_outside[True]", "lib/matplotlib/tests/test_widgets.py::test_rectangle_selector_ignore_outside[False]", "lib/matplotlib/tests/test_widgets.py::test_span_selector", "lib/matplotlib/tests/test_widgets.py::test_span_selector_onselect[True]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_onselect[False]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_ignore_outside[True]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_ignore_outside[False]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_drag[True]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_drag[False]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_direction", "lib/matplotlib/tests/test_widgets.py::test_span_selector_set_props_handle_props", "lib/matplotlib/tests/test_widgets.py::test_selector_clear[span]", "lib/matplotlib/tests/test_widgets.py::test_selector_clear[rectangle]", "lib/matplotlib/tests/test_widgets.py::test_selector_clear_method[span]", "lib/matplotlib/tests/test_widgets.py::test_selector_clear_method[rectangle]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_add_state", "lib/matplotlib/tests/test_widgets.py::test_tool_line_handle", "lib/matplotlib/tests/test_widgets.py::test_span_selector_bound[horizontal]", "lib/matplotlib/tests/test_widgets.py::test_span_selector_bound[vertical]", "lib/matplotlib/tests/test_widgets.py::test_lasso_selector", "lib/matplotlib/tests/test_widgets.py::test_CheckButtons", "lib/matplotlib/tests/test_widgets.py::test_TextBox[none]", "lib/matplotlib/tests/test_widgets.py::test_TextBox[toolbar2]", "lib/matplotlib/tests/test_widgets.py::test_TextBox[toolmanager]", "lib/matplotlib/tests/test_widgets.py::test_check_radio_buttons_image[png]", "lib/matplotlib/tests/test_widgets.py::test_check_bunch_of_radio_buttons[png]", "lib/matplotlib/tests/test_widgets.py::test_slider_slidermin_slidermax_invalid", "lib/matplotlib/tests/test_widgets.py::test_slider_slidermin_slidermax", "lib/matplotlib/tests/test_widgets.py::test_slider_valmin_valmax", "lib/matplotlib/tests/test_widgets.py::test_slider_valstep_snapping", "lib/matplotlib/tests/test_widgets.py::test_slider_horizontal_vertical", "lib/matplotlib/tests/test_widgets.py::test_slider_reset", "lib/matplotlib/tests/test_widgets.py::test_range_slider[horizontal]", "lib/matplotlib/tests/test_widgets.py::test_range_slider[vertical]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector[False]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector[True]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_set_props_handle_props[False]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_set_props_handle_props[True]", "lib/matplotlib/tests/test_widgets.py::test_rect_visibility[png]", "lib/matplotlib/tests/test_widgets.py::test_rect_visibility[pdf]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove[False-1]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove[False-2]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove[False-3]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove[True-1]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove[True-2]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove[True-3]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove_first_point[False]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_remove_first_point[True]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_redraw[False]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_redraw[True]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_verts_setter[png-False]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_verts_setter[png-True]", "lib/matplotlib/tests/test_widgets.py::test_polygon_selector_box", "lib/matplotlib/tests/test_widgets.py::test_MultiCursor[True-True]", "lib/matplotlib/tests/test_widgets.py::test_MultiCursor[True-False]", "lib/matplotlib/tests/test_widgets.py::test_MultiCursor[False-True]"]}
{"instance_id": "matplotlib__matplotlib-22835", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_artist.py::test_patch_transform_of_none", "lib/matplotlib/tests/test_artist.py::test_collection_transform_of_none", "lib/matplotlib/tests/test_artist.py::test_clipping[png]", "lib/matplotlib/tests/test_artist.py::test_clipping[pdf]", "lib/matplotlib/tests/test_artist.py::test_clipping_zoom[png]", "lib/matplotlib/tests/test_artist.py::test_cull_markers", "lib/matplotlib/tests/test_artist.py::test_hatching[png]", "lib/matplotlib/tests/test_artist.py::test_hatching[pdf]", "lib/matplotlib/tests/test_artist.py::test_remove", "lib/matplotlib/tests/test_artist.py::test_default_edges[png]", "lib/matplotlib/tests/test_artist.py::test_properties", "lib/matplotlib/tests/test_artist.py::test_setp", "lib/matplotlib/tests/test_artist.py::test_None_zorder", "lib/matplotlib/tests/test_artist.py::test_artist_inspector_get_valid_values[-unknown]", "lib/matplotlib/tests/test_artist.py::test_artist_inspector_get_valid_values[ACCEPTS:", "lib/matplotlib/tests/test_artist.py::test_artist_inspector_get_valid_values[..", "lib/matplotlib/tests/test_artist.py::test_artist_inspector_get_valid_values[arg", "lib/matplotlib/tests/test_artist.py::test_artist_inspector_get_valid_values[*arg", "lib/matplotlib/tests/test_artist.py::test_artist_inspector_get_aliases", "lib/matplotlib/tests/test_artist.py::test_set_alpha", "lib/matplotlib/tests/test_artist.py::test_set_alpha_for_array", "lib/matplotlib/tests/test_artist.py::test_callbacks", "lib/matplotlib/tests/test_artist.py::test_set_signature", "lib/matplotlib/tests/test_artist.py::test_set_is_overwritten"]}
{"instance_id": "matplotlib__matplotlib-23299", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_rcparams.py::test_rcparams", "lib/matplotlib/tests/test_rcparams.py::test_RcParams_class", "lib/matplotlib/tests/test_rcparams.py::test_Bug_2543", "lib/matplotlib/tests/test_rcparams.py::test_legend_colors[same", "lib/matplotlib/tests/test_rcparams.py::test_legend_colors[inherited", "lib/matplotlib/tests/test_rcparams.py::test_legend_colors[different", "lib/matplotlib/tests/test_rcparams.py::test_mfc_rcparams", "lib/matplotlib/tests/test_rcparams.py::test_mec_rcparams", "lib/matplotlib/tests/test_rcparams.py::test_axes_titlecolor_rcparams", "lib/matplotlib/tests/test_rcparams.py::test_Issue_1713", "lib/matplotlib/tests/test_rcparams.py::test_animation_frame_formats", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-t-True]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-y-True]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-yes-True]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-on-True]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-true-True]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-1-True0]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-1-True1]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-True-True]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-f-False]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-n-False]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-no-False]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-off-False]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-false-False]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-0-False0]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-0-False1]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-False-False]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist--target16]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-a,b-target17]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-aardvark-target18]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-aardvark,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg21-target21]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg22-target22]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg23-target23]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg24-target24]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-1,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg26-target26]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg27-target27]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg28-target28]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg29-target29]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-1.5,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg31-target31]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg32-target32]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg33-target33]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg34-target34]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler(\"color\",", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg36-target36]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-(cycler(\"color\",", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler(c='rgb',", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler('c',", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg40-target40]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg41-target41]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch---|---|]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch-\\\\oO-\\\\oO]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch-/+*/.x-/+*/.x]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch--]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-r,g,b-target46]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg47-target47]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-r,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg49-target49]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg50-target50]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg51-target51]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-None-none]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-none-none]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-AABBCC-#AABBCC]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-AABBCC00-#AABBCC00]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-tab:blue-tab:blue]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-C12-C12]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-(0,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-arg59-target59]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-arg61-target61]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-linecolor-linecolor]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-markerfacecolor-markerfacecolor]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-mfc-markerfacecolor]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-markeredgecolor-markeredgecolor]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-mec-markeredgecolor]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-auto-auto]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-fd-fd]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-10-10]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-1,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-arg71-target71]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-arg72-target72]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-None-None]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-1-1]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-0.1-0.1]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg76-target76]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg77-target77]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg78-target78]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg79-target79]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg80-target80]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle----]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-solid-solid]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle------]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dashed-dashed]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle--.--.]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dashdot-dashdot]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-:-:]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dotted-dotted]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle--]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-None-none]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-none-none]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-DoTtEd-dotted]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-1,", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg95-target95]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg96-target96]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg97-target97]", "lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg98-target98]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-aardvark-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-2-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool--1-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-arg3-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg4-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-1-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg6-MatplotlibDeprecationWarning]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg7-MatplotlibDeprecationWarning]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-aardvark-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-arg9-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-arg10-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-aardvark-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg12-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg13-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg14-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-None-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-4-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(\"bleh,", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-Cycler(\"linewidth\",", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler('c',", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-1", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-os.system(\"echo", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-import", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-def", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(\"waka\",", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(c=[1,", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(lw=['a',", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-arg31-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-arg32-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch---_-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch-8-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch-X-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_colorlist-fish-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_color-tab:veryblue-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_color-(0,", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_color_or_linecolor-line-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_color_or_linecolor-marker-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hist_bins-aardvark-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg45-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg46-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg47-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg48-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg49-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg50-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg51-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg52-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg53-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-abc-TypeError0]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg55-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg56-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg57-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg58-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-abc-TypeError1]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-a-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg61-TypeError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-aardvark-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-dotted-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-\\xff\\xfed\\x00o\\x00t\\x00t\\x00e\\x00d\\x00-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg65-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-1.23-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg67-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg68-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg69-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg70-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[bold-bold]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[BOLD-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[100-100_0]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[100-100_1]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[weight4-100]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[20.6-20]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[20.6-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[weight7-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[expanded-expanded]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[EXPANDED-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[100-100_0]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[100-100_1]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[stretch4-100]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[20.6-20]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[20.6-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[stretch7-ValueError]", "lib/matplotlib/tests/test_rcparams.py::test_keymaps", "lib/matplotlib/tests/test_rcparams.py::test_rcparams_reset_after_fail", "lib/matplotlib/tests/test_rcparams.py::test_backend_fallback_headless", "lib/matplotlib/tests/test_rcparams.py::test_deprecation"]}
{"instance_id": "matplotlib__matplotlib-23314", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_axes.py::test_get_labels", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_shift", "lib/matplotlib/tests/test_axes.py::test_acorr[png]", "lib/matplotlib/tests/test_axes.py::test_spy[png]", "lib/matplotlib/tests/test_axes.py::test_spy_invalid_kwargs", "lib/matplotlib/tests/test_axes.py::test_matshow[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[pdf]", "lib/matplotlib/tests/test_axes.py::test_funcformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_strmethodformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[png]", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[pdf]", "lib/matplotlib/tests/test_axes.py::test_twinx_cla", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-x]", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-y]", "lib/matplotlib/tests/test_axes.py::test_twinx_axis_scales[png]", "lib/matplotlib/tests/test_axes.py::test_twin_inherit_autoscale_setting", "lib/matplotlib/tests/test_axes.py::test_inverted_cla", "lib/matplotlib/tests/test_axes.py::test_cla_not_redefined", "lib/matplotlib/tests/test_axes.py::test_minorticks_on_rcParams_both[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[pdf]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tight", "lib/matplotlib/tests/test_axes.py::test_autoscale_log_shared", "lib/matplotlib/tests/test_axes.py::test_use_sticky_edges", "lib/matplotlib/tests/test_axes.py::test_sticky_shared_axes[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[pdf]", "lib/matplotlib/tests/test_axes.py::test_arrow_simple[png]", "lib/matplotlib/tests/test_axes.py::test_arrow_empty", "lib/matplotlib/tests/test_axes.py::test_arrow_in_view", "lib/matplotlib/tests/test_axes.py::test_annotate_default_arrow", "lib/matplotlib/tests/test_axes.py::test_annotate_signature", "lib/matplotlib/tests/test_axes.py::test_fill_units[png]", "lib/matplotlib/tests/test_axes.py::test_plot_format_kwarg_redundant", "lib/matplotlib/tests/test_axes.py::test_errorbar_dashes[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[pdf]", "lib/matplotlib/tests/test_axes.py::test_single_date[png]", "lib/matplotlib/tests/test_axes.py::test_shaped_data[png]", "lib/matplotlib/tests/test_axes.py::test_structured_data", "lib/matplotlib/tests/test_axes.py::test_aitoff_proj[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_hexbin_extent[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_pickable", "lib/matplotlib/tests/test_axes.py::test_hexbin_log[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_log_clim", "lib/matplotlib/tests/test_axes.py::test_inverted_limits", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[png]", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-scatter]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-plot]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-fill_between]", "lib/matplotlib/tests/test_axes.py::test_imshow[png]", "lib/matplotlib/tests/test_axes.py::test_imshow[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[png]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[png]", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_x_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_y_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog2[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs_5205", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_small[eps]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolor_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs", "lib/matplotlib/tests/test_axes.py::test_pcolornearest[png]", "lib/matplotlib/tests/test_axes.py::test_pcolornearestunits[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorflaterror", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-False]", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-True]", "lib/matplotlib/tests/test_axes.py::test_canonical[png]", "lib/matplotlib/tests/test_axes.py::test_canonical[pdf]", "lib/matplotlib/tests/test_axes.py::test_arc_angles[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_as_markerstyle", "lib/matplotlib/tests/test_axes.py::test_markevery[png]", "lib/matplotlib/tests/test_axes.py::test_markevery[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[png]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_single[png]", "lib/matplotlib/tests/test_axes.py::test_nan_bar_values", "lib/matplotlib/tests/test_axes.py::test_bar_ticklabel_fail", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple[png]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple_old_alignment[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_width[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_height[png]", "lib/matplotlib/tests/test_axes.py::test_bar_color_none_alpha", "lib/matplotlib/tests/test_axes.py::test_bar_edgecolor_none_alpha", "lib/matplotlib/tests/test_axes.py::test_barh_tick_label[png]", "lib/matplotlib/tests/test_axes.py::test_bar_timedelta", "lib/matplotlib/tests/test_axes.py::test_boxplot_dates_pandas", "lib/matplotlib/tests/test_axes.py::test_boxplot_capwidths", "lib/matplotlib/tests/test_axes.py::test_pcolor_regression", "lib/matplotlib/tests/test_axes.py::test_bar_pandas", "lib/matplotlib/tests/test_axes.py::test_bar_pandas_indexed", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[png]", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[pdf]", "lib/matplotlib/tests/test_axes.py::test_pandas_minimal_plot", "lib/matplotlib/tests/test_axes.py::test_hist_log[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_log_2[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log_barstacked", "lib/matplotlib/tests/test_axes.py::test_hist_bar_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_float16", "lib/matplotlib/tests/test_axes.py::test_hist_step_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_filled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_unequal_bins_density", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[date2num]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[datetime.datetime]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[np.datetime64]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data0-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data1-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data2-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[bar-1]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[step-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[stepfilled-1]", "lib/matplotlib/tests/test_axes.py::test_stairs[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_fill[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_update[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_baseline_0[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_empty", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_nan", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_mismatch", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update2", "lib/matplotlib/tests/test_axes.py::test_stairs_options[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_datetime[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_edge_handling[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[pdf]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[png]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_density", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[pdf]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_marker[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_2D[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_decimal[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfilled", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfillable", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_size_arg_size", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_edgecolor_RGB", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_no_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_point[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_different_shapes[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[0.5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case1-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[red-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[none-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[None-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[jaune-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case7-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case8-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case9-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case10-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case11-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case12-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case13-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case14-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case15-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case16-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case17-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case18-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case19-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case20-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case21-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case22-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case23-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case24-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case25-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case26-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case27-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case28-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case29-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_color_c[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_linewidths", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params0-expected_result0]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params1-expected_result1]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params2-expected_result2]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params3-expected_result3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params4-expected_result4]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs0-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs1-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs2-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs3-expected_edgecolors3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs4-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs5-face]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs6-none]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs7-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs8-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs9-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs10-g]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_error", "lib/matplotlib/tests/test_axes.py::test_as_mpl_axes_api", "lib/matplotlib/tests/test_axes.py::test_pyplot_axes", "lib/matplotlib/tests/test_axes.py::test_log_scales", "lib/matplotlib/tests/test_axes.py::test_log_scales_no_data", "lib/matplotlib/tests/test_axes.py::test_log_scales_invalid", "lib/matplotlib/tests/test_axes.py::test_stackplot[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[pdf]", "lib/matplotlib/tests/test_axes.py::test_bxp_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_rangewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_percentilewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_xlabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_ylabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_patchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompatchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customoutlier[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showcustommean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custombox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custommedian[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customcap[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwhisker[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_shownotches[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nocaps[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nobox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_no_flier_stats[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmeanasline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_scalarwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompositions[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_widths", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_positions", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_capwidths", "lib/matplotlib/tests/test_axes.py::test_boxplot[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym2[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_autorange_whiskers[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_with_CIarray[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_no_weird_whisker[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_medians", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_ci", "lib/matplotlib/tests/test_axes.py::test_boxplot_zorder", "lib/matplotlib/tests/test_axes.py::test_boxplot_marker_behavior", "lib/matplotlib/tests/test_axes.py::test_boxplot_mod_artist_after_plotting[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_positions", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_widths", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_outofrange_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_single_list_quantiles[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_pandas_series[png]", "lib/matplotlib/tests/test_axes.py::test_manage_xticks", "lib/matplotlib/tests/test_axes.py::test_boxplot_not_single", "lib/matplotlib/tests/test_axes.py::test_tick_space_size_0", "lib/matplotlib/tests/test_axes.py::test_errorbar[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_colorcycle", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_shape", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nonefmt", "lib/matplotlib/tests/test_axes.py::test_errorbar_line_specific_kwargs", "lib/matplotlib/tests/test_axes.py::test_errorbar_with_prop_cycle[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every_invalid", "lib/matplotlib/tests/test_axes.py::test_xerr_yerr_not_negative", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[1]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[png]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_horiz[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[pdf]", "lib/matplotlib/tests/test_axes.py::test_stem[png-w/", "lib/matplotlib/tests/test_axes.py::test_stem[png-w/o", "lib/matplotlib/tests/test_axes.py::test_stem_args", "lib/matplotlib/tests/test_axes.py::test_stem_dates", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png-w/", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png-w/o", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_barstacked_bottom_unchanged", "lib/matplotlib/tests/test_axes.py::test_hist_emptydata", "lib/matplotlib/tests/test_axes.py::test_hist_labels", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[png]", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[png]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[png]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_forward_inverse_closure", "lib/matplotlib/tests/test_axes.py::test_mollweide_inverse_forward_closure", "lib/matplotlib/tests/test_axes.py::test_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot_defaults[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_problem_kwargs[png]", "lib/matplotlib/tests/test_axes.py::test_empty_eventplot", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_units_list[png]", "lib/matplotlib/tests/test_axes.py::test_marker_styles[png]", "lib/matplotlib/tests/test_axes.py::test_markers_fillstyle_rcparams[png]", "lib/matplotlib/tests/test_axes.py::test_vertex_markers[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline[png]", "lib/matplotlib/tests/test_axes.py::test_axline[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_args", "lib/matplotlib/tests/test_axes.py::test_vlines[png]", "lib/matplotlib/tests/test_axes.py::test_vlines_default", "lib/matplotlib/tests/test_axes.py::test_hlines[png]", "lib/matplotlib/tests/test_axes.py::test_hlines_default", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data0]", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data1]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[png]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[png]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[pdf]", "lib/matplotlib/tests/test_axes.py::test_subplot_key_hash", "lib/matplotlib/tests/test_axes.py::test_specgram[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_magnitude[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_angle[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_fs_none", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_rcparam[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_kwarg", "lib/matplotlib/tests/test_axes.py::test_psd_csd[png]", "lib/matplotlib/tests/test_axes.py::test_spectrum[png]", "lib/matplotlib/tests/test_axes.py::test_psd_csd_edge_cases", "lib/matplotlib/tests/test_axes.py::test_twin_remove[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines_on_top[png]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[both-True-True]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[major-True-False]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[minor-False-True]", "lib/matplotlib/tests/test_axes.py::test_grid", "lib/matplotlib/tests/test_axes.py::test_reset_grid", "lib/matplotlib/tests/test_axes.py::test_reset_ticks[png]", "lib/matplotlib/tests/test_axes.py::test_vline_limit", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvline-axhline-args0]", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvspan-axhspan-args1]", "lib/matplotlib/tests/test_axes.py::test_empty_shared_subplots", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_1", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_2", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_3", "lib/matplotlib/tests/test_axes.py::test_shared_aspect_error", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args0-kwargs0-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_errors[ValueError-args1-kwargs1-Unrecognized", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args2-kwargs2-the", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args3-kwargs3-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_method_errors", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[x]", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[y]", "lib/matplotlib/tests/test_axes.py::test_relim_visible_only", "lib/matplotlib/tests/test_axes.py::test_text_labelsize", "lib/matplotlib/tests/test_axes.py::test_pie_default[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_0[png]", "lib/matplotlib/tests/test_axes.py::test_pie_center_radius[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_2[png]", "lib/matplotlib/tests/test_axes.py::test_pie_ccw_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_frame_grid[png]", "lib/matplotlib/tests/test_axes.py::test_pie_rotatelabels_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_nolabel_but_legend[png]", "lib/matplotlib/tests/test_axes.py::test_pie_textprops", "lib/matplotlib/tests/test_axes.py::test_pie_get_negative_values", "lib/matplotlib/tests/test_axes.py::test_normalize_kwarg_pie", "lib/matplotlib/tests/test_axes.py::test_set_get_ticklabels[png]", "lib/matplotlib/tests/test_axes.py::test_set_ticks_with_labels[png]", "lib/matplotlib/tests/test_axes.py::test_set_noniterable_ticklabels", "lib/matplotlib/tests/test_axes.py::test_subsampled_ticklabels", "lib/matplotlib/tests/test_axes.py::test_mismatched_ticklabels", "lib/matplotlib/tests/test_axes.py::test_empty_ticks_fixed_loc", "lib/matplotlib/tests/test_axes.py::test_retain_tick_visibility[png]", "lib/matplotlib/tests/test_axes.py::test_tick_label_update", "lib/matplotlib/tests/test_axes.py::test_o_marker_path_snap[png]", "lib/matplotlib/tests/test_axes.py::test_margins", "lib/matplotlib/tests/test_axes.py::test_set_margin_updates_limits", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args0-kwargs0-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args1-kwargs1-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args2-kwargs2-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args3-kwargs3-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args4-kwargs4-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args5-kwargs5-Must", "lib/matplotlib/tests/test_axes.py::test_length_one_hist", "lib/matplotlib/tests/test_axes.py::test_set_xy_bound", "lib/matplotlib/tests/test_axes.py::test_pathological_hexbin", "lib/matplotlib/tests/test_axes.py::test_color_None", "lib/matplotlib/tests/test_axes.py::test_color_alias", "lib/matplotlib/tests/test_axes.py::test_numerical_hist_label", "lib/matplotlib/tests/test_axes.py::test_unicode_hist_label", "lib/matplotlib/tests/test_axes.py::test_move_offsetlabel", "lib/matplotlib/tests/test_axes.py::test_rc_spines[png]", "lib/matplotlib/tests/test_axes.py::test_rc_grid[png]", "lib/matplotlib/tests/test_axes.py::test_rc_tick", "lib/matplotlib/tests/test_axes.py::test_rc_major_minor_tick", "lib/matplotlib/tests/test_axes.py::test_square_plot", "lib/matplotlib/tests/test_axes.py::test_bad_plot_args", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_shared_scale", "lib/matplotlib/tests/test_axes.py::test_shared_bool", "lib/matplotlib/tests/test_axes.py::test_violin_point_mass", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs2]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs3]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs4]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs5]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs6]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs7]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs8]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs9]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs10]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs11]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs12]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs13]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs14]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs15]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs16]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs17]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs18]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs19]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs20]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs21]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs22]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs23]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs24]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs25]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs26]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs27]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs28]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs29]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs30]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs31]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs32]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs33]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs34]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs35]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs36]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs37]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs38]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs39]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs40]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs41]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs42]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs43]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs44]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs45]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs46]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs47]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs48]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs49]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs50]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs51]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[png]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_title_pad", "lib/matplotlib/tests/test_axes.py::test_title_location_roundtrip", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[True]", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[False]", "lib/matplotlib/tests/test_axes.py::test_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_loglog_nonpos[png]", "lib/matplotlib/tests/test_axes.py::test_axes_margins", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes_relim", "lib/matplotlib/tests/test_axes.py::test_shared_axes_autoscale", "lib/matplotlib/tests/test_axes.py::test_adjust_numtick_aspect", "lib/matplotlib/tests/test_axes.py::test_auto_numticks", "lib/matplotlib/tests/test_axes.py::test_auto_numticks_log", "lib/matplotlib/tests/test_axes.py::test_broken_barh_empty", "lib/matplotlib/tests/test_axes.py::test_broken_barh_timedelta", "lib/matplotlib/tests/test_axes.py::test_pandas_pcolormesh", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_dates", "lib/matplotlib/tests/test_axes.py::test_pandas_errorbar_indexing", "lib/matplotlib/tests/test_axes.py::test_pandas_index_shape", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_hist", "lib/matplotlib/tests/test_axes.py::test_pandas_bar_align_center", "lib/matplotlib/tests/test_axes.py::test_tick_apply_tickdir_deprecation", "lib/matplotlib/tests/test_axes.py::test_axis_set_tick_params_labelsize_labelcolor", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_gridlines", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_ylabelside", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_xlabelside", "lib/matplotlib/tests/test_axes.py::test_none_kwargs", "lib/matplotlib/tests/test_axes.py::test_bar_uint8", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_y[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x_and_y[png]", "lib/matplotlib/tests/test_axes.py::test_axisbelow[png]", "lib/matplotlib/tests/test_axes.py::test_titletwiny", "lib/matplotlib/tests/test_axes.py::test_titlesetpos", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top_both", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[left", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[center", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[both", "lib/matplotlib/tests/test_axes.py::test_title_no_move_off_page", "lib/matplotlib/tests/test_axes.py::test_offset_label_color", "lib/matplotlib/tests/test_axes.py::test_offset_text_visible", "lib/matplotlib/tests/test_axes.py::test_large_offset", "lib/matplotlib/tests/test_axes.py::test_barb_units", "lib/matplotlib/tests/test_axes.py::test_quiver_units", "lib/matplotlib/tests/test_axes.py::test_bar_color_cycle", "lib/matplotlib/tests/test_axes.py::test_tick_param_label_rotation", "lib/matplotlib/tests/test_axes.py::test_fillbetween_cycle", "lib/matplotlib/tests/test_axes.py::test_log_margins", "lib/matplotlib/tests/test_axes.py::test_color_length_mismatch", "lib/matplotlib/tests/test_axes.py::test_eventplot_legend", "lib/matplotlib/tests/test_axes.py::test_bar_broadcast_args", "lib/matplotlib/tests/test_axes.py::test_invalid_axis_limits", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-log]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-log]", "lib/matplotlib/tests/test_axes.py::test_twinx_knows_limits", "lib/matplotlib/tests/test_axes.py::test_zero_linewidth", "lib/matplotlib/tests/test_axes.py::test_empty_errorbar_legend", "lib/matplotlib/tests/test_axes.py::test_plot_decimal[png]", "lib/matplotlib/tests/test_axes.py::test_markerfacecolor_none_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_tick_padding_tightbbox", "lib/matplotlib/tests/test_axes.py::test_inset", "lib/matplotlib/tests/test_axes.py::test_zoom_inset", "lib/matplotlib/tests/test_axes.py::test_inset_polar[png]", "lib/matplotlib/tests/test_axes.py::test_inset_projection", "lib/matplotlib/tests/test_axes.py::test_inset_subclass", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-True]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-True]", "lib/matplotlib/tests/test_axes.py::test_set_position", "lib/matplotlib/tests/test_axes.py::test_spines_properbbox_after_zoom", "lib/matplotlib/tests/test_axes.py::test_gettightbbox_ignore_nan", "lib/matplotlib/tests/test_axes.py::test_scatter_series_non_zero_index", "lib/matplotlib/tests/test_axes.py::test_scatter_empty_data", "lib/matplotlib/tests/test_axes.py::test_annotate_across_transforms[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_xy[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_fail", "lib/matplotlib/tests/test_axes.py::test_secondary_resize", "lib/matplotlib/tests/test_axes.py::test_secondary_minorloc", "lib/matplotlib/tests/test_axes.py::test_secondary_formatter", "lib/matplotlib/tests/test_axes.py::test_secondary_repr", "lib/matplotlib/tests/test_axes.py::test_normal_axes", "lib/matplotlib/tests/test_axes.py::test_nodecorator", "lib/matplotlib/tests/test_axes.py::test_displaced_spine", "lib/matplotlib/tests/test_axes.py::test_tickdirs", "lib/matplotlib/tests/test_axes.py::test_minor_accountedfor", "lib/matplotlib/tests/test_axes.py::test_axis_bool_arguments[png]", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg2", "lib/matplotlib/tests/test_axes.py::test_hist_auto_bins", "lib/matplotlib/tests/test_axes.py::test_hist_nan_data", "lib/matplotlib/tests/test_axes.py::test_hist_range_and_density", "lib/matplotlib/tests/test_axes.py::test_bar_errbar_zorder", "lib/matplotlib/tests/test_axes.py::test_set_ticks_inverted", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_box", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_datalim", "lib/matplotlib/tests/test_axes.py::test_box_aspect", "lib/matplotlib/tests/test_axes.py::test_box_aspect_custom_position", "lib/matplotlib/tests/test_axes.py::test_bbox_aspect_axes_init", "lib/matplotlib/tests/test_axes.py::test_redraw_in_frame", "lib/matplotlib/tests/test_axes.py::test_invisible_axes", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-y]", "lib/matplotlib/tests/test_axes.py::test_polar_interpolation_steps_variable_r[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_sticky", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_xticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_yticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[medium]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[larger]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[smaller]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[8]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[10]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[12]", "lib/matplotlib/tests/test_axes.py::test_multiplot_autoscale", "lib/matplotlib/tests/test_axes.py::test_sharing_does_not_link_positions", "lib/matplotlib/tests/test_axes.py::test_2dcolor_plot[pdf]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_clear[png]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_retick", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[left]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[center]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[right]", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xyinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_center", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_errorbars", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt", "lib/matplotlib/tests/test_axes.py::test_bar_label_labels", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata_inverted", "lib/matplotlib/tests/test_axes.py::test_nan_barlabels", "lib/matplotlib/tests/test_axes.py::test_patch_bounds", "lib/matplotlib/tests/test_axes.py::test_warn_ignored_scatter_kwargs", "lib/matplotlib/tests/test_axes.py::test_artist_sublists", "lib/matplotlib/tests/test_axes.py::test_empty_line_plots", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format", "lib/matplotlib/tests/test_axes.py::test_automatic_legend", "lib/matplotlib/tests/test_axes.py::test_plot_errors", "lib/matplotlib/tests/test_axes.py::test_clim", "lib/matplotlib/tests/test_axes.py::test_bezier_autoscale", "lib/matplotlib/tests/test_axes.py::test_get_xticklabel", "lib/mpl_toolkits/tests/test_mplot3d.py::test_aspect_equal_error", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_colors", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_notshaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_lightsource", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_fill[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-both-levels0]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-min-levels1]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-max-levels2]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_tricontour[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d_1d_input", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_scalar[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsubplots[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_tight_layout_text[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_color[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_sorting[png-True]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_sorting[png-False]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_data_reversed[png--50]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_data_reversed[png-130]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_view_rotated[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_3d_from_2d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_masked[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_masked_strides[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text3d_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerocstride[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerorstride[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerostrideraises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsamplesraises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_empty[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_masked[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_patch_modification", "lib/mpl_toolkits/tests/test_mplot3d.py::test_patch_collection_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_verts_validation", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_closed[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly_collection_2d_to_3d_empty", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_alpha[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_add_collection3d_zs_array[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_add_collection3d_zs_scalar[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_labelpad[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_cla[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_rotated[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plotsurface_1d_raises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_transform", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_axes_cube[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_axes_cube_ortho[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_rot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_world", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists_nowarning", "lib/mpl_toolkits/tests/test_mplot3d.py::test_autoscale", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_focal_length_checks", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_focal_length[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_ortho[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_isometric[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_simple[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_edge_style[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_named_colors[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_rgb_data[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_alpha[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_xyz[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_calling_conventions", "lib/mpl_toolkits/tests/test_mplot3d.py::test_line3d_set_get_data_3d", "lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted_cla", "lib/mpl_toolkits/tests/test_mplot3d.py::test_ax3d_tickcolour", "lib/mpl_toolkits/tests/test_mplot3d.py::test_ticklabel_format[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3D_smoke[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_minor_ticks[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_errorbar3d_errorevery[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_errorbar3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_stem3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_equal_box_aspect[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_colorbar_pos", "lib/mpl_toolkits/tests/test_mplot3d.py::test_shared_axes_retick", "lib/mpl_toolkits/tests/test_mplot3d.py::test_pan", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scalarmap_update[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_subfigure_simple", "lib/mpl_toolkits/tests/test_mplot3d.py::test_computed_zorder[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter_spiral[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[z-proj_expected0-axis_lines_expected0-tickdirs_expected0]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[y-proj_expected1-axis_lines_expected1-tickdirs_expected1]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[x-proj_expected2-axis_lines_expected2-tickdirs_expected2]"]}
{"instance_id": "matplotlib__matplotlib-23476", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_figure.py::test_align_labels[png]", "lib/matplotlib/tests/test_figure.py::test_align_labels_stray_axes", "lib/matplotlib/tests/test_figure.py::test_figure_label", "lib/matplotlib/tests/test_figure.py::test_fignum_exists", "lib/matplotlib/tests/test_figure.py::test_clf_keyword", "lib/matplotlib/tests/test_figure.py::test_figure[png]", "lib/matplotlib/tests/test_figure.py::test_figure[pdf]", "lib/matplotlib/tests/test_figure.py::test_figure_legend[png]", "lib/matplotlib/tests/test_figure.py::test_figure_legend[pdf]", "lib/matplotlib/tests/test_figure.py::test_gca", "lib/matplotlib/tests/test_figure.py::test_add_subplot_subclass", "lib/matplotlib/tests/test_figure.py::test_add_subplot_invalid", "lib/matplotlib/tests/test_figure.py::test_suptitle[png]", "lib/matplotlib/tests/test_figure.py::test_suptitle[pdf]", "lib/matplotlib/tests/test_figure.py::test_suptitle_fontproperties", "lib/matplotlib/tests/test_figure.py::test_alpha[png]", "lib/matplotlib/tests/test_figure.py::test_too_many_figures", "lib/matplotlib/tests/test_figure.py::test_iterability_axes_argument", "lib/matplotlib/tests/test_figure.py::test_set_fig_size", "lib/matplotlib/tests/test_figure.py::test_axes_remove", "lib/matplotlib/tests/test_figure.py::test_figaspect", "lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[both]", "lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[major]", "lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[minor]", "lib/matplotlib/tests/test_figure.py::test_change_dpi", "lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[1-nan]", "lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[-1-1]", "lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[inf-1]", "lib/matplotlib/tests/test_figure.py::test_invalid_figure_add_axes", "lib/matplotlib/tests/test_figure.py::test_subplots_shareax_loglabels", "lib/matplotlib/tests/test_figure.py::test_savefig", "lib/matplotlib/tests/test_figure.py::test_savefig_warns", "lib/matplotlib/tests/test_figure.py::test_savefig_backend", "lib/matplotlib/tests/test_figure.py::test_savefig_pixel_ratio[Agg]", "lib/matplotlib/tests/test_figure.py::test_savefig_pixel_ratio[Cairo]", "lib/matplotlib/tests/test_figure.py::test_figure_repr", "lib/matplotlib/tests/test_figure.py::test_valid_layouts", "lib/matplotlib/tests/test_figure.py::test_invalid_layouts", "lib/matplotlib/tests/test_figure.py::test_add_artist[png]", "lib/matplotlib/tests/test_figure.py::test_add_artist[pdf]", "lib/matplotlib/tests/test_figure.py::test_fspath[png]", "lib/matplotlib/tests/test_figure.py::test_fspath[pdf]", "lib/matplotlib/tests/test_figure.py::test_fspath[ps]", "lib/matplotlib/tests/test_figure.py::test_fspath[eps]", "lib/matplotlib/tests/test_figure.py::test_fspath[svg]", "lib/matplotlib/tests/test_figure.py::test_tightbbox", "lib/matplotlib/tests/test_figure.py::test_axes_removal", "lib/matplotlib/tests/test_figure.py::test_removed_axis", "lib/matplotlib/tests/test_figure.py::test_figure_clear[clear]", "lib/matplotlib/tests/test_figure.py::test_figure_clear[clf]", "lib/matplotlib/tests/test_figure.py::test_clf_not_redefined", "lib/matplotlib/tests/test_figure.py::test_picking_does_not_stale", "lib/matplotlib/tests/test_figure.py::test_add_subplot_twotuple", "lib/matplotlib/tests/test_figure.py::test_animated_with_canvas_change[pdf]", "lib/matplotlib/tests/test_figure.py::test_animated_with_canvas_change[eps]", "lib/matplotlib/tests/test_figure.py::test_animated_with_canvas_change[png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_basic[x0-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_basic[x1-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_all_nested[png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested[png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested_tuple[png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x0-None-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x1-SKIP-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x2-0-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x3-None-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x4-SKIP-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x5-0-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail_list_of_str", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_subplot_kw[subplot_kw0-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_subplot_kw[subplot_kw1-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_subplot_kw[None-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_string_parser", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_single_str_input[AAA\\nBBB-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_single_str_input[\\nAAA\\nBBB\\n-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_single_str_input[ABC\\nDEF-png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[x0-(?m)we", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[x1-There", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[AAA\\nc\\nBBB-All", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[x3-All", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_hashable_keys[png]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[abc]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[cab]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[bca]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[cba]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[acb]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[bac]", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested_user_order", "lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_share_all", "lib/matplotlib/tests/test_figure.py::test_reused_gridspec", "lib/matplotlib/tests/test_figure.py::test_subfigure[png]", "lib/matplotlib/tests/test_figure.py::test_subfigure_tightbbox", "lib/matplotlib/tests/test_figure.py::test_subfigure_dpi", "lib/matplotlib/tests/test_figure.py::test_subfigure_ss[png]", "lib/matplotlib/tests/test_figure.py::test_subfigure_double[png]", "lib/matplotlib/tests/test_figure.py::test_subfigure_spanning", "lib/matplotlib/tests/test_figure.py::test_subfigure_ticks", "lib/matplotlib/tests/test_figure.py::test_subfigure_scatter_size[png]", "lib/matplotlib/tests/test_figure.py::test_subfigure_pdf", "lib/matplotlib/tests/test_figure.py::test_add_subplot_kwargs", "lib/matplotlib/tests/test_figure.py::test_add_axes_kwargs", "lib/matplotlib/tests/test_figure.py::test_ginput", "lib/matplotlib/tests/test_figure.py::test_waitforbuttonpress", "lib/matplotlib/tests/test_figure.py::test_kwargs_pass", "lib/matplotlib/tests/test_figure.py::test_deepcopy"]}
{"instance_id": "matplotlib__matplotlib-23562", "tests_passing_in_original_repo": ["lib/mpl_toolkits/tests/test_mplot3d.py::test_invisible_axes[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_aspects[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_repr", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_colors", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_notshaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_lightsource", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d_extend3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_fill[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-both-levels0]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-min-levels1]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-max-levels2]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_tricontour[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d_1d_input", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_scalar[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsubplots[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_tight_layout_text[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_color[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_linewidth[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_linewidth_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_sorting[png-True]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_sorting[png-False]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_data_reversed[png--50]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_data_reversed[png-130]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_view_rotated[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_3d_from_2d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_masked[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_masked_strides[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text3d_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerocstride[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerorstride[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerostrideraises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsamplesraises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_empty[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_masked[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_patch_modification", "lib/mpl_toolkits/tests/test_mplot3d.py::test_patch_collection_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_verts_validation", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_closed[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly_collection_2d_to_3d_empty", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_alpha[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_add_collection3d_zs_array[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_add_collection3d_zs_scalar[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_labelpad[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_cla[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_rotated[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plotsurface_1d_raises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_transform", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_axes_cube[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_axes_cube_ortho[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_rot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_world", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists_nowarning", "lib/mpl_toolkits/tests/test_mplot3d.py::test_autoscale", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_focal_length_checks", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_focal_length[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_ortho[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_isometric[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_simple[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_edge_style[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_named_colors[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_rgb_data[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_alpha[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_xyz[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_calling_conventions", "lib/mpl_toolkits/tests/test_mplot3d.py::test_line3d_set_get_data_3d", "lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted_cla", "lib/mpl_toolkits/tests/test_mplot3d.py::test_ax3d_tickcolour", "lib/mpl_toolkits/tests/test_mplot3d.py::test_ticklabel_format[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3D_smoke[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_minor_ticks[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_errorbar3d_errorevery[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_errorbar3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_stem3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_equal_box_aspect[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_colorbar_pos", "lib/mpl_toolkits/tests/test_mplot3d.py::test_shared_axes_retick", "lib/mpl_toolkits/tests/test_mplot3d.py::test_pan", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scalarmap_update[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_subfigure_simple", "lib/mpl_toolkits/tests/test_mplot3d.py::test_computed_zorder[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_format_coord", "lib/mpl_toolkits/tests/test_mplot3d.py::test_get_axis_position", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args0-kwargs0-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args1-kwargs1-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args2-kwargs2-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args3-kwargs3-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args4-kwargs4-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args5-kwargs5-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args6-kwargs6-Cannot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args7-kwargs7-Cannot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args8-kwargs8-Cannot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args9-kwargs9-Must", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text_3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_pathpatch_3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter_spiral[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[z-proj_expected0-axis_lines_expected0-tickdirs_expected0]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[y-proj_expected1-axis_lines_expected1-tickdirs_expected1]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[x-proj_expected2-axis_lines_expected2-tickdirs_expected2]"]}
{"instance_id": "matplotlib__matplotlib-23563", "tests_passing_in_original_repo": ["lib/mpl_toolkits/tests/test_mplot3d.py::test_invisible_axes[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_aspects[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_repr", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_colors", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_notshaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_lightsource", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d_extend3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_fill[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-both-levels0]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-min-levels1]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_extend[png-max-levels2]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_tricontour[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d_1d_input", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_scalar[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsubplots[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_tight_layout_text[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_color[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_linewidth[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_linewidth_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_sorting[png-True]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_sorting[png-False]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_data_reversed[png--50]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_data_reversed[png-130]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_marker_draw_order_view_rotated[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_3d_from_2d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_masked[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_masked_strides[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text3d_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d_shaded[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerocstride[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerorstride[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerostrideraises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsamplesraises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_empty[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_masked[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_patch_modification", "lib/mpl_toolkits/tests/test_mplot3d.py::test_patch_collection_modification[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_verts_validation", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_closed[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly_collection_2d_to_3d_empty", "lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_alpha[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_add_collection3d_zs_array[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_add_collection3d_zs_scalar[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_labelpad[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_cla[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_rotated[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_plotsurface_1d_raises", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_transform", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_axes_cube[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_axes_cube_ortho[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_rot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_world", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists_nowarning", "lib/mpl_toolkits/tests/test_mplot3d.py::test_autoscale", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[True-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[False-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-x]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-y]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_unautoscale[None-z]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_focal_length_checks", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_focal_length[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_ortho[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_axes3d_isometric[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-inf]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-nan]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_simple[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_edge_style[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_named_colors[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_rgb_data[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_alpha[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_xyz[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_calling_conventions", "lib/mpl_toolkits/tests/test_mplot3d.py::test_line3d_set_get_data_3d", "lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted_cla", "lib/mpl_toolkits/tests/test_mplot3d.py::test_ax3d_tickcolour", "lib/mpl_toolkits/tests/test_mplot3d.py::test_ticklabel_format[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3D_smoke[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_minor_ticks[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_errorbar3d_errorevery[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_errorbar3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_stem3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_equal_box_aspect[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_colorbar_pos", "lib/mpl_toolkits/tests/test_mplot3d.py::test_shared_axes_retick", "lib/mpl_toolkits/tests/test_mplot3d.py::test_pan", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scalarmap_update[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_subfigure_simple", "lib/mpl_toolkits/tests/test_mplot3d.py::test_computed_zorder[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_format_coord", "lib/mpl_toolkits/tests/test_mplot3d.py::test_get_axis_position", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args0-kwargs0-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args1-kwargs1-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args2-kwargs2-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args3-kwargs3-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args4-kwargs4-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[ValueError-args5-kwargs5-margin", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args6-kwargs6-Cannot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args7-kwargs7-Cannot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args8-kwargs8-Cannot", "lib/mpl_toolkits/tests/test_mplot3d.py::test_margins_errors[TypeError-args9-kwargs9-Must", "lib/mpl_toolkits/tests/test_mplot3d.py::test_text_3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_pathpatch_3d[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter_spiral[png]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[z-proj_expected0-axis_lines_expected0-tickdirs_expected0]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[y-proj_expected1-axis_lines_expected1-tickdirs_expected1]", "lib/mpl_toolkits/tests/test_mplot3d.py::test_view_init_vertical_axis[x-proj_expected2-axis_lines_expected2-tickdirs_expected2]"]}
{"instance_id": "matplotlib__matplotlib-23913", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_legend.py::test_legend_ordereddict", "lib/matplotlib/tests/test_legend.py::test_legend_auto1[png]", "lib/matplotlib/tests/test_legend.py::test_legend_auto1[pdf]", "lib/matplotlib/tests/test_legend.py::test_legend_auto2[png]", "lib/matplotlib/tests/test_legend.py::test_legend_auto2[pdf]", "lib/matplotlib/tests/test_legend.py::test_legend_auto3[png]", "lib/matplotlib/tests/test_legend.py::test_legend_auto3[pdf]", "lib/matplotlib/tests/test_legend.py::test_various_labels[png]", "lib/matplotlib/tests/test_legend.py::test_various_labels[pdf]", "lib/matplotlib/tests/test_legend.py::test_legend_label_with_leading_underscore", "lib/matplotlib/tests/test_legend.py::test_labels_first[png]", "lib/matplotlib/tests/test_legend.py::test_multiple_keys[png]", "lib/matplotlib/tests/test_legend.py::test_alpha_rgba[png]", "lib/matplotlib/tests/test_legend.py::test_alpha_rcparam[png]", "lib/matplotlib/tests/test_legend.py::test_fancy[png]", "lib/matplotlib/tests/test_legend.py::test_fancy[pdf]", "lib/matplotlib/tests/test_legend.py::test_framealpha[png]", "lib/matplotlib/tests/test_legend.py::test_framealpha[pdf]", "lib/matplotlib/tests/test_legend.py::test_rc[png]", "lib/matplotlib/tests/test_legend.py::test_rc[pdf]", "lib/matplotlib/tests/test_legend.py::test_legend_expand[png]", "lib/matplotlib/tests/test_legend.py::test_legend_expand[pdf]", "lib/matplotlib/tests/test_legend.py::test_hatching[png]", "lib/matplotlib/tests/test_legend.py::test_hatching[pdf]", "lib/matplotlib/tests/test_legend.py::test_legend_remove", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_no_args", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_positional_handles_labels", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_positional_handles_only", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_positional_labels_only", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_three_args", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_handler_map", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_kwargs_handles_only", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_kwargs_labels_only", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_legend_kwargs_handles_labels", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_warn_mixed_args_and_kwargs", "lib/matplotlib/tests/test_legend.py::TestLegendFunction::test_parasite", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_legend_handle_label", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_legend_no_args", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_legend_label_arg", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_legend_label_three_args", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_legend_label_three_args_pluskw", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_legend_kw_args", "lib/matplotlib/tests/test_legend.py::TestLegendFigureFunction::test_warn_args_kwargs", "lib/matplotlib/tests/test_legend.py::test_legend_stackplot[png]", "lib/matplotlib/tests/test_legend.py::test_cross_figure_patch_legend", "lib/matplotlib/tests/test_legend.py::test_nanscatter", "lib/matplotlib/tests/test_legend.py::test_legend_repeatcheckok", "lib/matplotlib/tests/test_legend.py::test_not_covering_scatter[png]", "lib/matplotlib/tests/test_legend.py::test_not_covering_scatter_transform[png]", "lib/matplotlib/tests/test_legend.py::test_linecollection_scaled_dashes", "lib/matplotlib/tests/test_legend.py::test_handler_numpoints", "lib/matplotlib/tests/test_legend.py::test_text_nohandler_warning", "lib/matplotlib/tests/test_legend.py::test_empty_bar_chart_with_legend", "lib/matplotlib/tests/test_legend.py::test_shadow_framealpha", "lib/matplotlib/tests/test_legend.py::test_legend_title_empty", "lib/matplotlib/tests/test_legend.py::test_legend_proper_window_extent", "lib/matplotlib/tests/test_legend.py::test_window_extent_cached_renderer", "lib/matplotlib/tests/test_legend.py::test_legend_title_fontprop_fontsize", "lib/matplotlib/tests/test_legend.py::test_legend_alignment[center]", "lib/matplotlib/tests/test_legend.py::test_legend_alignment[left]", "lib/matplotlib/tests/test_legend.py::test_legend_alignment[right]", "lib/matplotlib/tests/test_legend.py::test_legend_set_alignment[center]", "lib/matplotlib/tests/test_legend.py::test_legend_set_alignment[left]", "lib/matplotlib/tests/test_legend.py::test_legend_set_alignment[right]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_single[red]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_single[none]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_single[color2]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_list", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_linecolor", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_markeredgecolor", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_markerfacecolor", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_single[red]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_single[none]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_single[color2]", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_linecolor", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_markeredgecolor", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_markeredgecolor_short", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_markerfacecolor", "lib/matplotlib/tests/test_legend.py::test_legend_labelcolor_rcparam_markerfacecolor_short", "lib/matplotlib/tests/test_legend.py::test_get_set_draggable", "lib/matplotlib/tests/test_legend.py::test_alpha_handles", "lib/matplotlib/tests/test_legend.py::test_usetex_no_warn", "lib/matplotlib/tests/test_legend.py::test_warn_big_data_best_loc", "lib/matplotlib/tests/test_legend.py::test_no_warn_big_data_when_loc_specified", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_input_multiple_label[label_array0]", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_input_multiple_label[label_array1]", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_input_multiple_label[label_array2]", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_input_single_label[one]", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_input_single_label[1]", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_input_single_label[int]", "lib/matplotlib/tests/test_legend.py::test_plot_single_input_multiple_label[label_array0]", "lib/matplotlib/tests/test_legend.py::test_plot_single_input_multiple_label[label_array1]", "lib/matplotlib/tests/test_legend.py::test_plot_single_input_multiple_label[label_array2]", "lib/matplotlib/tests/test_legend.py::test_plot_multiple_label_incorrect_length_exception", "lib/matplotlib/tests/test_legend.py::test_legend_face_edgecolor", "lib/matplotlib/tests/test_legend.py::test_legend_text_axes", "lib/matplotlib/tests/test_legend.py::test_handlerline2d", "lib/matplotlib/tests/test_legend.py::test_subfigure_legend", "lib/matplotlib/tests/test_legend.py::test_setting_alpha_keeps_polycollection_color", "lib/matplotlib/tests/test_legend.py::test_legend_markers_from_line2d", "lib/matplotlib/tests/test_legend.py::test_ncol_ncols[png]", "lib/matplotlib/tests/test_legend.py::test_ncol_ncols[pdf]"]}
{"instance_id": "matplotlib__matplotlib-23964", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_backend_ps.py::test_savefig_to_stringio[ps-portrait]", "lib/matplotlib/tests/test_backend_ps.py::test_savefig_to_stringio[ps-landscape]", "lib/matplotlib/tests/test_backend_ps.py::test_savefig_to_stringio[ps", "lib/matplotlib/tests/test_backend_ps.py::test_savefig_to_stringio[eps-portrait]", "lib/matplotlib/tests/test_backend_ps.py::test_savefig_to_stringio[eps-landscape]", "lib/matplotlib/tests/test_backend_ps.py::test_savefig_to_stringio[eps", "lib/matplotlib/tests/test_backend_ps.py::test_patheffects", "lib/matplotlib/tests/test_backend_ps.py::test_tilde_in_tempfilename", "lib/matplotlib/tests/test_backend_ps.py::test_transparency[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_transparency_tex[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_bbox", "lib/matplotlib/tests/test_backend_ps.py::test_failing_latex", "lib/matplotlib/tests/test_backend_ps.py::test_partial_usetex", "lib/matplotlib/tests/test_backend_ps.py::test_usetex_preamble", "lib/matplotlib/tests/test_backend_ps.py::test_useafm[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_type3_font[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_colored_hatch_zero_linewidth[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_text_clip[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_d_glyph", "lib/matplotlib/tests/test_backend_ps.py::test_type42_font_without_prep[eps]", "lib/matplotlib/tests/test_backend_ps.py::test_fonttype[3]", "lib/matplotlib/tests/test_backend_ps.py::test_fonttype[42]", "lib/matplotlib/tests/test_backend_ps.py::test_linedash", "lib/matplotlib/tests/test_backend_ps.py::test_no_duplicate_definition", "lib/matplotlib/tests/test_backend_ps.py::test_path_collection[eps]"]}
{"instance_id": "matplotlib__matplotlib-23987", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout1[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout2[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout3[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout4[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout5[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout6[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_identical_subgridspec", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout7", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout8[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout9[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout10[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout11[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout11rat[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout12[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout13[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout14[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout15[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout16[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout17[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout18", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout19", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout20", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout21", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout22", "lib/matplotlib/tests/test_constrainedlayout.py::test_constrained_layout23", "lib/matplotlib/tests/test_constrainedlayout.py::test_colorbar_location[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_hidden_axes", "lib/matplotlib/tests/test_constrainedlayout.py::test_colorbar_align", "lib/matplotlib/tests/test_constrainedlayout.py::test_colorbars_no_overlapV[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_colorbars_no_overlapH[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_manually_set_position", "lib/matplotlib/tests/test_constrainedlayout.py::test_bboxtight[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_bbox[png]", "lib/matplotlib/tests/test_constrainedlayout.py::test_align_labels", "lib/matplotlib/tests/test_constrainedlayout.py::test_suplabels", "lib/matplotlib/tests/test_constrainedlayout.py::test_gridspec_addressing", "lib/matplotlib/tests/test_constrainedlayout.py::test_discouraged_api", "lib/matplotlib/tests/test_constrainedlayout.py::test_kwargs", "lib/matplotlib/tests/test_constrainedlayout.py::test_rect", "lib/matplotlib/tests/test_constrainedlayout.py::test_compressed1"]}
{"instance_id": "matplotlib__matplotlib-24149", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_axes.py::test_invisible_axes[png]", "lib/matplotlib/tests/test_axes.py::test_get_labels", "lib/matplotlib/tests/test_axes.py::test_repr", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_shift", "lib/matplotlib/tests/test_axes.py::test_acorr[png]", "lib/matplotlib/tests/test_axes.py::test_spy[png]", "lib/matplotlib/tests/test_axes.py::test_spy_invalid_kwargs", "lib/matplotlib/tests/test_axes.py::test_matshow[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[pdf]", "lib/matplotlib/tests/test_axes.py::test_funcformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_strmethodformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[png]", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[pdf]", "lib/matplotlib/tests/test_axes.py::test_twinx_cla", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-x]", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-y]", "lib/matplotlib/tests/test_axes.py::test_twinx_axis_scales[png]", "lib/matplotlib/tests/test_axes.py::test_twin_inherit_autoscale_setting", "lib/matplotlib/tests/test_axes.py::test_inverted_cla", "lib/matplotlib/tests/test_axes.py::test_subclass_clear_cla", "lib/matplotlib/tests/test_axes.py::test_cla_not_redefined_internally", "lib/matplotlib/tests/test_axes.py::test_minorticks_on_rcParams_both[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[pdf]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tight", "lib/matplotlib/tests/test_axes.py::test_autoscale_log_shared", "lib/matplotlib/tests/test_axes.py::test_use_sticky_edges", "lib/matplotlib/tests/test_axes.py::test_sticky_shared_axes[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[pdf]", "lib/matplotlib/tests/test_axes.py::test_arrow_simple[png]", "lib/matplotlib/tests/test_axes.py::test_arrow_empty", "lib/matplotlib/tests/test_axes.py::test_arrow_in_view", "lib/matplotlib/tests/test_axes.py::test_annotate_default_arrow", "lib/matplotlib/tests/test_axes.py::test_annotate_signature", "lib/matplotlib/tests/test_axes.py::test_fill_units[png]", "lib/matplotlib/tests/test_axes.py::test_plot_format_kwarg_redundant", "lib/matplotlib/tests/test_axes.py::test_errorbar_dashes[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[pdf]", "lib/matplotlib/tests/test_axes.py::test_single_date[png]", "lib/matplotlib/tests/test_axes.py::test_shaped_data[png]", "lib/matplotlib/tests/test_axes.py::test_structured_data", "lib/matplotlib/tests/test_axes.py::test_aitoff_proj[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_hexbin_extent[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_pickable", "lib/matplotlib/tests/test_axes.py::test_hexbin_log[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_linear[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_log_clim", "lib/matplotlib/tests/test_axes.py::test_inverted_limits", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[png]", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-scatter]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-plot]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-fill_between]", "lib/matplotlib/tests/test_axes.py::test_imshow[png]", "lib/matplotlib/tests/test_axes.py::test_imshow[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[png]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[png]", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_x_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_y_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog2[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs_5205", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_small[eps]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolor_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs", "lib/matplotlib/tests/test_axes.py::test_pcolornearest[png]", "lib/matplotlib/tests/test_axes.py::test_pcolornearestunits[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorflaterror", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-False]", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-True]", "lib/matplotlib/tests/test_axes.py::test_canonical[png]", "lib/matplotlib/tests/test_axes.py::test_canonical[pdf]", "lib/matplotlib/tests/test_axes.py::test_arc_angles[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_as_markerstyle", "lib/matplotlib/tests/test_axes.py::test_markevery[png]", "lib/matplotlib/tests/test_axes.py::test_markevery[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[png]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_single[png]", "lib/matplotlib/tests/test_axes.py::test_nan_bar_values", "lib/matplotlib/tests/test_axes.py::test_bar_ticklabel_fail", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple[png]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple_old_alignment[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_width[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_height[png]", "lib/matplotlib/tests/test_axes.py::test_bar_color_none_alpha", "lib/matplotlib/tests/test_axes.py::test_bar_edgecolor_none_alpha", "lib/matplotlib/tests/test_axes.py::test_barh_tick_label[png]", "lib/matplotlib/tests/test_axes.py::test_bar_timedelta", "lib/matplotlib/tests/test_axes.py::test_boxplot_dates_pandas", "lib/matplotlib/tests/test_axes.py::test_boxplot_capwidths", "lib/matplotlib/tests/test_axes.py::test_pcolor_regression", "lib/matplotlib/tests/test_axes.py::test_bar_pandas", "lib/matplotlib/tests/test_axes.py::test_bar_pandas_indexed", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[png]", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x-1-x-expected_labels0-x]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x1-width1-label1-expected_labels1-_nolegend_]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x2-width2-label2-expected_labels2-_nolegend_]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x3-width3-bars-expected_labels3-bars]", "lib/matplotlib/tests/test_axes.py::test_bar_labels_length", "lib/matplotlib/tests/test_axes.py::test_pandas_minimal_plot", "lib/matplotlib/tests/test_axes.py::test_hist_log[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_log_2[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log_barstacked", "lib/matplotlib/tests/test_axes.py::test_hist_bar_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_float16", "lib/matplotlib/tests/test_axes.py::test_hist_step_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_filled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_unequal_bins_density", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[date2num]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[datetime.datetime]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[np.datetime64]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data0-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data1-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data2-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[bar-1]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[step-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[stepfilled-1]", "lib/matplotlib/tests/test_axes.py::test_stairs[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_fill[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_update[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_baseline_0[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_empty", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_nan", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_mismatch", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update2", "lib/matplotlib/tests/test_axes.py::test_stairs_options[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_datetime[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_edge_handling[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[pdf]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[png]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_density", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[pdf]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_marker[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_2D[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_decimal[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs0]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs1]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs2]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs3]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfilled", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfillable", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_size_arg_size", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_edgecolor_RGB", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_no_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_point[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_different_shapes[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[0.5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case1-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[red-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[none-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[None-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[jaune-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case7-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case8-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case9-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case10-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case11-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case12-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case13-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case14-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case15-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case16-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case17-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case18-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case19-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case20-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case21-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case22-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case23-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case24-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case25-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case26-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case27-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case28-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case29-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_color_c[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_linewidths", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params0-expected_result0]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params1-expected_result1]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params2-expected_result2]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params3-expected_result3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params4-expected_result4]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs0-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs1-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs2-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs3-expected_edgecolors3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs4-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs5-face]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs6-none]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs7-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs8-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs9-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs10-g]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_error", "lib/matplotlib/tests/test_axes.py::test_as_mpl_axes_api", "lib/matplotlib/tests/test_axes.py::test_pyplot_axes", "lib/matplotlib/tests/test_axes.py::test_log_scales", "lib/matplotlib/tests/test_axes.py::test_log_scales_no_data", "lib/matplotlib/tests/test_axes.py::test_log_scales_invalid", "lib/matplotlib/tests/test_axes.py::test_stackplot[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[pdf]", "lib/matplotlib/tests/test_axes.py::test_bxp_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_rangewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_percentilewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_xlabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_ylabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_patchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompatchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customoutlier[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showcustommean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custombox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custommedian[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customcap[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwhisker[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_shownotches[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nocaps[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nobox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_no_flier_stats[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmeanasline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_scalarwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompositions[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_widths", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_positions", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_capwidths", "lib/matplotlib/tests/test_axes.py::test_boxplot[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym2[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_autorange_whiskers[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_with_CIarray[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_no_weird_whisker[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_medians", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_ci", "lib/matplotlib/tests/test_axes.py::test_boxplot_zorder", "lib/matplotlib/tests/test_axes.py::test_boxplot_marker_behavior", "lib/matplotlib/tests/test_axes.py::test_boxplot_mod_artist_after_plotting[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_positions", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_widths", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_outofrange_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_single_list_quantiles[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_pandas_series[png]", "lib/matplotlib/tests/test_axes.py::test_manage_xticks", "lib/matplotlib/tests/test_axes.py::test_boxplot_not_single", "lib/matplotlib/tests/test_axes.py::test_tick_space_size_0", "lib/matplotlib/tests/test_axes.py::test_errorbar[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_errorbar_polar_caps[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_colorcycle", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_shape", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nonefmt", "lib/matplotlib/tests/test_axes.py::test_errorbar_line_specific_kwargs", "lib/matplotlib/tests/test_axes.py::test_errorbar_with_prop_cycle[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every_invalid", "lib/matplotlib/tests/test_axes.py::test_xerr_yerr_not_negative", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nan[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[png]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_horiz[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[pdf]", "lib/matplotlib/tests/test_axes.py::test_stem[png-w/", "lib/matplotlib/tests/test_axes.py::test_stem[png-w/o", "lib/matplotlib/tests/test_axes.py::test_stem_args", "lib/matplotlib/tests/test_axes.py::test_stem_markerfmt", "lib/matplotlib/tests/test_axes.py::test_stem_dates", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png-w/", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png-w/o", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_barstacked_bottom_unchanged", "lib/matplotlib/tests/test_axes.py::test_hist_emptydata", "lib/matplotlib/tests/test_axes.py::test_hist_labels", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[png]", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[png]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[png]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_forward_inverse_closure", "lib/matplotlib/tests/test_axes.py::test_mollweide_inverse_forward_closure", "lib/matplotlib/tests/test_axes.py::test_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot_defaults[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_problem_kwargs[png]", "lib/matplotlib/tests/test_axes.py::test_empty_eventplot", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_units_list[png]", "lib/matplotlib/tests/test_axes.py::test_marker_styles[png]", "lib/matplotlib/tests/test_axes.py::test_markers_fillstyle_rcparams[png]", "lib/matplotlib/tests/test_axes.py::test_vertex_markers[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline[png]", "lib/matplotlib/tests/test_axes.py::test_axline[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_args", "lib/matplotlib/tests/test_axes.py::test_vlines[png]", "lib/matplotlib/tests/test_axes.py::test_vlines_default", "lib/matplotlib/tests/test_axes.py::test_hlines[png]", "lib/matplotlib/tests/test_axes.py::test_hlines_default", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data0]", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data1]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[png]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[png]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[pdf]", "lib/matplotlib/tests/test_axes.py::test_subplot_key_hash", "lib/matplotlib/tests/test_axes.py::test_specgram[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_magnitude[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_angle[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_fs_none", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_rcparam[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_kwarg", "lib/matplotlib/tests/test_axes.py::test_psd_csd[png]", "lib/matplotlib/tests/test_axes.py::test_spectrum[png]", "lib/matplotlib/tests/test_axes.py::test_psd_csd_edge_cases", "lib/matplotlib/tests/test_axes.py::test_twin_remove[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines_on_top[png]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[both-True-True]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[major-True-False]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[minor-False-True]", "lib/matplotlib/tests/test_axes.py::test_grid", "lib/matplotlib/tests/test_axes.py::test_reset_grid", "lib/matplotlib/tests/test_axes.py::test_reset_ticks[png]", "lib/matplotlib/tests/test_axes.py::test_vline_limit", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvline-axhline-args0]", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvspan-axhspan-args1]", "lib/matplotlib/tests/test_axes.py::test_empty_shared_subplots", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_1", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_2", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_3", "lib/matplotlib/tests/test_axes.py::test_shared_aspect_error", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args0-kwargs0-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_errors[ValueError-args1-kwargs1-Unrecognized", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args2-kwargs2-the", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args3-kwargs3-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_method_errors", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[x]", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[y]", "lib/matplotlib/tests/test_axes.py::test_relim_visible_only", "lib/matplotlib/tests/test_axes.py::test_text_labelsize", "lib/matplotlib/tests/test_axes.py::test_pie_default[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_0[png]", "lib/matplotlib/tests/test_axes.py::test_pie_center_radius[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_2[png]", "lib/matplotlib/tests/test_axes.py::test_pie_ccw_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_frame_grid[png]", "lib/matplotlib/tests/test_axes.py::test_pie_rotatelabels_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_nolabel_but_legend[png]", "lib/matplotlib/tests/test_axes.py::test_pie_textprops", "lib/matplotlib/tests/test_axes.py::test_pie_get_negative_values", "lib/matplotlib/tests/test_axes.py::test_normalize_kwarg_pie", "lib/matplotlib/tests/test_axes.py::test_set_get_ticklabels[png]", "lib/matplotlib/tests/test_axes.py::test_set_ticks_with_labels[png]", "lib/matplotlib/tests/test_axes.py::test_set_noniterable_ticklabels", "lib/matplotlib/tests/test_axes.py::test_subsampled_ticklabels", "lib/matplotlib/tests/test_axes.py::test_mismatched_ticklabels", "lib/matplotlib/tests/test_axes.py::test_empty_ticks_fixed_loc", "lib/matplotlib/tests/test_axes.py::test_retain_tick_visibility[png]", "lib/matplotlib/tests/test_axes.py::test_tick_label_update", "lib/matplotlib/tests/test_axes.py::test_o_marker_path_snap[png]", "lib/matplotlib/tests/test_axes.py::test_margins", "lib/matplotlib/tests/test_axes.py::test_set_margin_updates_limits", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args0-kwargs0-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args1-kwargs1-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args2-kwargs2-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args3-kwargs3-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args4-kwargs4-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args5-kwargs5-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args6-kwargs6-Must", "lib/matplotlib/tests/test_axes.py::test_length_one_hist", "lib/matplotlib/tests/test_axes.py::test_set_xy_bound", "lib/matplotlib/tests/test_axes.py::test_pathological_hexbin", "lib/matplotlib/tests/test_axes.py::test_color_None", "lib/matplotlib/tests/test_axes.py::test_color_alias", "lib/matplotlib/tests/test_axes.py::test_numerical_hist_label", "lib/matplotlib/tests/test_axes.py::test_unicode_hist_label", "lib/matplotlib/tests/test_axes.py::test_move_offsetlabel", "lib/matplotlib/tests/test_axes.py::test_rc_spines[png]", "lib/matplotlib/tests/test_axes.py::test_rc_grid[png]", "lib/matplotlib/tests/test_axes.py::test_rc_tick", "lib/matplotlib/tests/test_axes.py::test_rc_major_minor_tick", "lib/matplotlib/tests/test_axes.py::test_square_plot", "lib/matplotlib/tests/test_axes.py::test_bad_plot_args", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_shared_scale", "lib/matplotlib/tests/test_axes.py::test_shared_bool", "lib/matplotlib/tests/test_axes.py::test_violin_point_mass", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs2]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs3]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs4]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs5]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs6]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs7]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs8]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs9]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs10]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs11]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs12]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs13]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs14]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs15]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs16]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs17]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs18]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs19]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs20]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs21]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs22]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs23]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs24]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs25]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs26]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs27]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs28]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs29]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs30]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs31]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs32]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs33]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs34]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs35]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs36]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs37]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs38]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs39]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs40]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs41]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs42]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs43]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs44]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs45]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs46]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs47]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs48]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs49]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs50]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs51]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[png]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_title_pad", "lib/matplotlib/tests/test_axes.py::test_title_location_roundtrip", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[True]", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[False]", "lib/matplotlib/tests/test_axes.py::test_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_loglog_nonpos[png]", "lib/matplotlib/tests/test_axes.py::test_axes_margins", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes_relim", "lib/matplotlib/tests/test_axes.py::test_shared_axes_autoscale", "lib/matplotlib/tests/test_axes.py::test_adjust_numtick_aspect", "lib/matplotlib/tests/test_axes.py::test_auto_numticks", "lib/matplotlib/tests/test_axes.py::test_auto_numticks_log", "lib/matplotlib/tests/test_axes.py::test_broken_barh_empty", "lib/matplotlib/tests/test_axes.py::test_broken_barh_timedelta", "lib/matplotlib/tests/test_axes.py::test_pandas_pcolormesh", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_dates", "lib/matplotlib/tests/test_axes.py::test_pandas_errorbar_indexing", "lib/matplotlib/tests/test_axes.py::test_pandas_index_shape", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_hist", "lib/matplotlib/tests/test_axes.py::test_pandas_bar_align_center", "lib/matplotlib/tests/test_axes.py::test_tick_apply_tickdir_deprecation", "lib/matplotlib/tests/test_axes.py::test_axis_set_tick_params_labelsize_labelcolor", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_gridlines", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_ylabelside", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_xlabelside", "lib/matplotlib/tests/test_axes.py::test_none_kwargs", "lib/matplotlib/tests/test_axes.py::test_bar_uint8", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_y[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x_and_y[png]", "lib/matplotlib/tests/test_axes.py::test_axisbelow[png]", "lib/matplotlib/tests/test_axes.py::test_titletwiny", "lib/matplotlib/tests/test_axes.py::test_titlesetpos", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top_both", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[left", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[center", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[both", "lib/matplotlib/tests/test_axes.py::test_title_no_move_off_page", "lib/matplotlib/tests/test_axes.py::test_offset_label_color", "lib/matplotlib/tests/test_axes.py::test_offset_text_visible", "lib/matplotlib/tests/test_axes.py::test_large_offset", "lib/matplotlib/tests/test_axes.py::test_barb_units", "lib/matplotlib/tests/test_axes.py::test_quiver_units", "lib/matplotlib/tests/test_axes.py::test_bar_color_cycle", "lib/matplotlib/tests/test_axes.py::test_tick_param_label_rotation", "lib/matplotlib/tests/test_axes.py::test_fillbetween_cycle", "lib/matplotlib/tests/test_axes.py::test_log_margins", "lib/matplotlib/tests/test_axes.py::test_color_length_mismatch", "lib/matplotlib/tests/test_axes.py::test_eventplot_legend", "lib/matplotlib/tests/test_axes.py::test_bar_broadcast_args", "lib/matplotlib/tests/test_axes.py::test_invalid_axis_limits", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-log]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-log]", "lib/matplotlib/tests/test_axes.py::test_twinx_knows_limits", "lib/matplotlib/tests/test_axes.py::test_zero_linewidth", "lib/matplotlib/tests/test_axes.py::test_empty_errorbar_legend", "lib/matplotlib/tests/test_axes.py::test_plot_decimal[png]", "lib/matplotlib/tests/test_axes.py::test_markerfacecolor_none_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_tick_padding_tightbbox", "lib/matplotlib/tests/test_axes.py::test_inset", "lib/matplotlib/tests/test_axes.py::test_zoom_inset", "lib/matplotlib/tests/test_axes.py::test_inset_polar[png]", "lib/matplotlib/tests/test_axes.py::test_inset_projection", "lib/matplotlib/tests/test_axes.py::test_inset_subclass", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-True]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-True]", "lib/matplotlib/tests/test_axes.py::test_set_position", "lib/matplotlib/tests/test_axes.py::test_spines_properbbox_after_zoom", "lib/matplotlib/tests/test_axes.py::test_gettightbbox_ignore_nan", "lib/matplotlib/tests/test_axes.py::test_scatter_series_non_zero_index", "lib/matplotlib/tests/test_axes.py::test_scatter_empty_data", "lib/matplotlib/tests/test_axes.py::test_annotate_across_transforms[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_xy[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_fail", "lib/matplotlib/tests/test_axes.py::test_secondary_resize", "lib/matplotlib/tests/test_axes.py::test_secondary_minorloc", "lib/matplotlib/tests/test_axes.py::test_secondary_formatter", "lib/matplotlib/tests/test_axes.py::test_secondary_repr", "lib/matplotlib/tests/test_axes.py::test_normal_axes", "lib/matplotlib/tests/test_axes.py::test_nodecorator", "lib/matplotlib/tests/test_axes.py::test_displaced_spine", "lib/matplotlib/tests/test_axes.py::test_tickdirs", "lib/matplotlib/tests/test_axes.py::test_minor_accountedfor", "lib/matplotlib/tests/test_axes.py::test_axis_bool_arguments[png]", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg2", "lib/matplotlib/tests/test_axes.py::test_hist_auto_bins", "lib/matplotlib/tests/test_axes.py::test_hist_nan_data", "lib/matplotlib/tests/test_axes.py::test_hist_range_and_density", "lib/matplotlib/tests/test_axes.py::test_bar_errbar_zorder", "lib/matplotlib/tests/test_axes.py::test_set_ticks_inverted", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_box", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_datalim", "lib/matplotlib/tests/test_axes.py::test_box_aspect", "lib/matplotlib/tests/test_axes.py::test_box_aspect_custom_position", "lib/matplotlib/tests/test_axes.py::test_bbox_aspect_axes_init", "lib/matplotlib/tests/test_axes.py::test_redraw_in_frame", "lib/matplotlib/tests/test_axes.py::test_invisible_axes_events", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-y]", "lib/matplotlib/tests/test_axes.py::test_polar_interpolation_steps_variable_r[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_sticky", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_xticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_yticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[medium]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[larger]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[smaller]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[8]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[10]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[12]", "lib/matplotlib/tests/test_axes.py::test_multiplot_autoscale", "lib/matplotlib/tests/test_axes.py::test_sharing_does_not_link_positions", "lib/matplotlib/tests/test_axes.py::test_2dcolor_plot[pdf]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_clear[png]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_retick", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[left]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[center]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[right]", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xyinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_center", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_errorbars", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[%.2f]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[{:.2f}]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[format]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt_error", "lib/matplotlib/tests/test_axes.py::test_bar_label_labels", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata_inverted", "lib/matplotlib/tests/test_axes.py::test_nan_barlabels", "lib/matplotlib/tests/test_axes.py::test_patch_bounds", "lib/matplotlib/tests/test_axes.py::test_warn_ignored_scatter_kwargs", "lib/matplotlib/tests/test_axes.py::test_artist_sublists", "lib/matplotlib/tests/test_axes.py::test_empty_line_plots", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format", "lib/matplotlib/tests/test_axes.py::test_automatic_legend", "lib/matplotlib/tests/test_axes.py::test_plot_errors", "lib/matplotlib/tests/test_axes.py::test_clim", "lib/matplotlib/tests/test_axes.py::test_bezier_autoscale", "lib/matplotlib/tests/test_axes.py::test_get_xticklabel", "lib/matplotlib/tests/test_axes.py::test_bar_leading_nan"]}
{"instance_id": "matplotlib__matplotlib-24265", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_style.py::test_invalid_rc_warning_includes_filename", "lib/matplotlib/tests/test_style.py::test_available", "lib/matplotlib/tests/test_style.py::test_use", "lib/matplotlib/tests/test_style.py::test_use_url", "lib/matplotlib/tests/test_style.py::test_single_path", "lib/matplotlib/tests/test_style.py::test_context", "lib/matplotlib/tests/test_style.py::test_context_with_dict", "lib/matplotlib/tests/test_style.py::test_context_with_dict_after_namedstyle", "lib/matplotlib/tests/test_style.py::test_context_with_dict_before_namedstyle", "lib/matplotlib/tests/test_style.py::test_context_with_union_of_dict_and_namedstyle", "lib/matplotlib/tests/test_style.py::test_context_with_badparam", "lib/matplotlib/tests/test_style.py::test_alias[mpl20]", "lib/matplotlib/tests/test_style.py::test_alias[mpl15]", "lib/matplotlib/tests/test_style.py::test_xkcd_no_cm", "lib/matplotlib/tests/test_style.py::test_xkcd_cm", "lib/matplotlib/tests/test_style.py::test_deprecated_seaborn_styles", "lib/matplotlib/tests/test_style.py::test_up_to_date_blacklist"]}
{"instance_id": "matplotlib__matplotlib-24334", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_axes.py::test_invisible_axes[png]", "lib/matplotlib/tests/test_axes.py::test_get_labels", "lib/matplotlib/tests/test_axes.py::test_repr", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_shift", "lib/matplotlib/tests/test_axes.py::test_acorr[png]", "lib/matplotlib/tests/test_axes.py::test_spy[png]", "lib/matplotlib/tests/test_axes.py::test_spy_invalid_kwargs", "lib/matplotlib/tests/test_axes.py::test_matshow[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[pdf]", "lib/matplotlib/tests/test_axes.py::test_funcformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_strmethodformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[png]", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[pdf]", "lib/matplotlib/tests/test_axes.py::test_twinx_cla", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-x]", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-y]", "lib/matplotlib/tests/test_axes.py::test_twinx_axis_scales[png]", "lib/matplotlib/tests/test_axes.py::test_twin_inherit_autoscale_setting", "lib/matplotlib/tests/test_axes.py::test_inverted_cla", "lib/matplotlib/tests/test_axes.py::test_subclass_clear_cla", "lib/matplotlib/tests/test_axes.py::test_cla_not_redefined_internally", "lib/matplotlib/tests/test_axes.py::test_minorticks_on_rcParams_both[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[pdf]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tight", "lib/matplotlib/tests/test_axes.py::test_autoscale_log_shared", "lib/matplotlib/tests/test_axes.py::test_use_sticky_edges", "lib/matplotlib/tests/test_axes.py::test_sticky_shared_axes[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[pdf]", "lib/matplotlib/tests/test_axes.py::test_arrow_simple[png]", "lib/matplotlib/tests/test_axes.py::test_arrow_empty", "lib/matplotlib/tests/test_axes.py::test_arrow_in_view", "lib/matplotlib/tests/test_axes.py::test_annotate_default_arrow", "lib/matplotlib/tests/test_axes.py::test_annotate_signature", "lib/matplotlib/tests/test_axes.py::test_fill_units[png]", "lib/matplotlib/tests/test_axes.py::test_plot_format_kwarg_redundant", "lib/matplotlib/tests/test_axes.py::test_errorbar_dashes[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[pdf]", "lib/matplotlib/tests/test_axes.py::test_single_date[png]", "lib/matplotlib/tests/test_axes.py::test_shaped_data[png]", "lib/matplotlib/tests/test_axes.py::test_structured_data", "lib/matplotlib/tests/test_axes.py::test_aitoff_proj[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_hexbin_extent[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_pickable", "lib/matplotlib/tests/test_axes.py::test_hexbin_log[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_linear[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_log_clim", "lib/matplotlib/tests/test_axes.py::test_inverted_limits", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[png]", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-scatter]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-plot]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-fill_between]", "lib/matplotlib/tests/test_axes.py::test_imshow[png]", "lib/matplotlib/tests/test_axes.py::test_imshow[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[png]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[png]", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_x_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_y_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog2[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs_5205", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_small[eps]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolor_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs", "lib/matplotlib/tests/test_axes.py::test_pcolornearest[png]", "lib/matplotlib/tests/test_axes.py::test_pcolornearestunits[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorflaterror", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-False]", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-True]", "lib/matplotlib/tests/test_axes.py::test_canonical[png]", "lib/matplotlib/tests/test_axes.py::test_canonical[pdf]", "lib/matplotlib/tests/test_axes.py::test_arc_angles[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_as_markerstyle", "lib/matplotlib/tests/test_axes.py::test_markevery[png]", "lib/matplotlib/tests/test_axes.py::test_markevery[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[png]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_single[png]", "lib/matplotlib/tests/test_axes.py::test_nan_bar_values", "lib/matplotlib/tests/test_axes.py::test_bar_ticklabel_fail", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple[png]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple_old_alignment[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_width[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_height[png]", "lib/matplotlib/tests/test_axes.py::test_bar_color_none_alpha", "lib/matplotlib/tests/test_axes.py::test_bar_edgecolor_none_alpha", "lib/matplotlib/tests/test_axes.py::test_barh_tick_label[png]", "lib/matplotlib/tests/test_axes.py::test_bar_timedelta", "lib/matplotlib/tests/test_axes.py::test_boxplot_dates_pandas", "lib/matplotlib/tests/test_axes.py::test_boxplot_capwidths", "lib/matplotlib/tests/test_axes.py::test_pcolor_regression", "lib/matplotlib/tests/test_axes.py::test_bar_pandas", "lib/matplotlib/tests/test_axes.py::test_bar_pandas_indexed", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[png]", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x-1-x-expected_labels0-x]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x1-width1-label1-expected_labels1-_nolegend_]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x2-width2-label2-expected_labels2-_nolegend_]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x3-width3-bars-expected_labels3-bars]", "lib/matplotlib/tests/test_axes.py::test_bar_labels_length", "lib/matplotlib/tests/test_axes.py::test_pandas_minimal_plot", "lib/matplotlib/tests/test_axes.py::test_hist_log[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_log_2[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log_barstacked", "lib/matplotlib/tests/test_axes.py::test_hist_bar_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_float16", "lib/matplotlib/tests/test_axes.py::test_hist_step_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_filled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_unequal_bins_density", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[date2num]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[datetime.datetime]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[np.datetime64]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data0-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data1-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data2-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[bar-1]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[step-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[stepfilled-1]", "lib/matplotlib/tests/test_axes.py::test_stairs[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_fill[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_update[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_baseline_0[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_empty", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_nan", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_mismatch", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update2", "lib/matplotlib/tests/test_axes.py::test_stairs_options[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_datetime[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_edge_handling[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[pdf]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[png]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_density", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[pdf]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_marker[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_2D[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_decimal[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs0]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs1]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs2]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs3]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfilled", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfillable", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_size_arg_size", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_edgecolor_RGB", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_no_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_point[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_different_shapes[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[0.5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case1-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[red-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[none-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[None-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[jaune-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case7-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case8-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case9-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case10-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case11-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case12-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case13-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case14-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case15-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case16-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case17-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case18-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case19-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case20-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case21-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case22-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case23-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case24-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case25-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case26-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case27-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case28-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case29-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_color_c[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_linewidths", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params0-expected_result0]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params1-expected_result1]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params2-expected_result2]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params3-expected_result3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params4-expected_result4]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs0-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs1-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs2-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs3-expected_edgecolors3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs4-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs5-face]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs6-none]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs7-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs8-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs9-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs10-g]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_error", "lib/matplotlib/tests/test_axes.py::test_as_mpl_axes_api", "lib/matplotlib/tests/test_axes.py::test_pyplot_axes", "lib/matplotlib/tests/test_axes.py::test_log_scales", "lib/matplotlib/tests/test_axes.py::test_log_scales_no_data", "lib/matplotlib/tests/test_axes.py::test_log_scales_invalid", "lib/matplotlib/tests/test_axes.py::test_stackplot[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[pdf]", "lib/matplotlib/tests/test_axes.py::test_bxp_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_rangewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_percentilewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_xlabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_ylabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_patchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompatchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customoutlier[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showcustommean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custombox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custommedian[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customcap[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwhisker[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_shownotches[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nocaps[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nobox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_no_flier_stats[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmeanasline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_scalarwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompositions[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_widths", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_positions", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_capwidths", "lib/matplotlib/tests/test_axes.py::test_boxplot[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym2[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_autorange_whiskers[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_with_CIarray[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_no_weird_whisker[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_medians", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_ci", "lib/matplotlib/tests/test_axes.py::test_boxplot_zorder", "lib/matplotlib/tests/test_axes.py::test_boxplot_marker_behavior", "lib/matplotlib/tests/test_axes.py::test_boxplot_mod_artist_after_plotting[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_positions", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_widths", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_outofrange_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_single_list_quantiles[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_pandas_series[png]", "lib/matplotlib/tests/test_axes.py::test_manage_xticks", "lib/matplotlib/tests/test_axes.py::test_boxplot_not_single", "lib/matplotlib/tests/test_axes.py::test_tick_space_size_0", "lib/matplotlib/tests/test_axes.py::test_errorbar[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_errorbar_polar_caps[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_colorcycle", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_shape", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nonefmt", "lib/matplotlib/tests/test_axes.py::test_errorbar_line_specific_kwargs", "lib/matplotlib/tests/test_axes.py::test_errorbar_with_prop_cycle[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every_invalid", "lib/matplotlib/tests/test_axes.py::test_xerr_yerr_not_negative", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nan[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[png]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_horiz[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[pdf]", "lib/matplotlib/tests/test_axes.py::test_stem[png-w/", "lib/matplotlib/tests/test_axes.py::test_stem[png-w/o", "lib/matplotlib/tests/test_axes.py::test_stem_args", "lib/matplotlib/tests/test_axes.py::test_stem_markerfmt", "lib/matplotlib/tests/test_axes.py::test_stem_dates", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png-w/", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png-w/o", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_barstacked_bottom_unchanged", "lib/matplotlib/tests/test_axes.py::test_hist_emptydata", "lib/matplotlib/tests/test_axes.py::test_hist_labels", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[png]", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[png]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[png]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_forward_inverse_closure", "lib/matplotlib/tests/test_axes.py::test_mollweide_inverse_forward_closure", "lib/matplotlib/tests/test_axes.py::test_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot_defaults[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_problem_kwargs[png]", "lib/matplotlib/tests/test_axes.py::test_empty_eventplot", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_units_list[png]", "lib/matplotlib/tests/test_axes.py::test_marker_styles[png]", "lib/matplotlib/tests/test_axes.py::test_markers_fillstyle_rcparams[png]", "lib/matplotlib/tests/test_axes.py::test_vertex_markers[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline[png]", "lib/matplotlib/tests/test_axes.py::test_axline[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_args", "lib/matplotlib/tests/test_axes.py::test_vlines[png]", "lib/matplotlib/tests/test_axes.py::test_vlines_default", "lib/matplotlib/tests/test_axes.py::test_hlines[png]", "lib/matplotlib/tests/test_axes.py::test_hlines_default", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data0]", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data1]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[png]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[png]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[pdf]", "lib/matplotlib/tests/test_axes.py::test_subplot_key_hash", "lib/matplotlib/tests/test_axes.py::test_specgram[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_magnitude[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_angle[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_fs_none", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_rcparam[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_kwarg", "lib/matplotlib/tests/test_axes.py::test_psd_csd[png]", "lib/matplotlib/tests/test_axes.py::test_spectrum[png]", "lib/matplotlib/tests/test_axes.py::test_psd_csd_edge_cases", "lib/matplotlib/tests/test_axes.py::test_twin_remove[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines_on_top[png]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[both-True-True]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[major-True-False]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[minor-False-True]", "lib/matplotlib/tests/test_axes.py::test_grid", "lib/matplotlib/tests/test_axes.py::test_reset_grid", "lib/matplotlib/tests/test_axes.py::test_reset_ticks[png]", "lib/matplotlib/tests/test_axes.py::test_vline_limit", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvline-axhline-args0]", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvspan-axhspan-args1]", "lib/matplotlib/tests/test_axes.py::test_empty_shared_subplots", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_1", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_2", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_3", "lib/matplotlib/tests/test_axes.py::test_shared_aspect_error", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args0-kwargs0-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_errors[ValueError-args1-kwargs1-Unrecognized", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args2-kwargs2-the", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args3-kwargs3-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_method_errors", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[x]", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[y]", "lib/matplotlib/tests/test_axes.py::test_relim_visible_only", "lib/matplotlib/tests/test_axes.py::test_text_labelsize", "lib/matplotlib/tests/test_axes.py::test_pie_default[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_0[png]", "lib/matplotlib/tests/test_axes.py::test_pie_center_radius[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_2[png]", "lib/matplotlib/tests/test_axes.py::test_pie_ccw_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_frame_grid[png]", "lib/matplotlib/tests/test_axes.py::test_pie_rotatelabels_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_nolabel_but_legend[png]", "lib/matplotlib/tests/test_axes.py::test_pie_textprops", "lib/matplotlib/tests/test_axes.py::test_pie_get_negative_values", "lib/matplotlib/tests/test_axes.py::test_normalize_kwarg_pie", "lib/matplotlib/tests/test_axes.py::test_set_get_ticklabels[png]", "lib/matplotlib/tests/test_axes.py::test_set_ticks_with_labels[png]", "lib/matplotlib/tests/test_axes.py::test_set_noniterable_ticklabels", "lib/matplotlib/tests/test_axes.py::test_subsampled_ticklabels", "lib/matplotlib/tests/test_axes.py::test_mismatched_ticklabels", "lib/matplotlib/tests/test_axes.py::test_empty_ticks_fixed_loc", "lib/matplotlib/tests/test_axes.py::test_retain_tick_visibility[png]", "lib/matplotlib/tests/test_axes.py::test_tick_label_update", "lib/matplotlib/tests/test_axes.py::test_o_marker_path_snap[png]", "lib/matplotlib/tests/test_axes.py::test_margins", "lib/matplotlib/tests/test_axes.py::test_set_margin_updates_limits", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args0-kwargs0-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args1-kwargs1-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args2-kwargs2-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args3-kwargs3-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args4-kwargs4-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args5-kwargs5-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args6-kwargs6-Must", "lib/matplotlib/tests/test_axes.py::test_length_one_hist", "lib/matplotlib/tests/test_axes.py::test_set_xy_bound", "lib/matplotlib/tests/test_axes.py::test_pathological_hexbin", "lib/matplotlib/tests/test_axes.py::test_color_None", "lib/matplotlib/tests/test_axes.py::test_color_alias", "lib/matplotlib/tests/test_axes.py::test_numerical_hist_label", "lib/matplotlib/tests/test_axes.py::test_unicode_hist_label", "lib/matplotlib/tests/test_axes.py::test_move_offsetlabel", "lib/matplotlib/tests/test_axes.py::test_rc_spines[png]", "lib/matplotlib/tests/test_axes.py::test_rc_grid[png]", "lib/matplotlib/tests/test_axes.py::test_rc_tick", "lib/matplotlib/tests/test_axes.py::test_rc_major_minor_tick", "lib/matplotlib/tests/test_axes.py::test_square_plot", "lib/matplotlib/tests/test_axes.py::test_bad_plot_args", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_shared_scale", "lib/matplotlib/tests/test_axes.py::test_shared_bool", "lib/matplotlib/tests/test_axes.py::test_violin_point_mass", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs2]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs3]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs4]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs5]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs6]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs7]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs8]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs9]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs10]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs11]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs12]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs13]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs14]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs15]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs16]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs17]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs18]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs19]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs20]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs21]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs22]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs23]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs24]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs25]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs26]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs27]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs28]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs29]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs30]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs31]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs32]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs33]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs34]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs35]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs36]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs37]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs38]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs39]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs40]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs41]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs42]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs43]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs44]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs45]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs46]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs47]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs48]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs49]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs50]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs51]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[png]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_title_pad", "lib/matplotlib/tests/test_axes.py::test_title_location_roundtrip", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[True]", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[False]", "lib/matplotlib/tests/test_axes.py::test_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_loglog_nonpos[png]", "lib/matplotlib/tests/test_axes.py::test_axes_margins", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes_relim", "lib/matplotlib/tests/test_axes.py::test_shared_axes_autoscale", "lib/matplotlib/tests/test_axes.py::test_adjust_numtick_aspect", "lib/matplotlib/tests/test_axes.py::test_auto_numticks", "lib/matplotlib/tests/test_axes.py::test_auto_numticks_log", "lib/matplotlib/tests/test_axes.py::test_broken_barh_empty", "lib/matplotlib/tests/test_axes.py::test_broken_barh_timedelta", "lib/matplotlib/tests/test_axes.py::test_pandas_pcolormesh", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_dates", "lib/matplotlib/tests/test_axes.py::test_pandas_errorbar_indexing", "lib/matplotlib/tests/test_axes.py::test_pandas_index_shape", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_hist", "lib/matplotlib/tests/test_axes.py::test_pandas_bar_align_center", "lib/matplotlib/tests/test_axes.py::test_axis_set_tick_params_labelsize_labelcolor", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_gridlines", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_ylabelside", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_xlabelside", "lib/matplotlib/tests/test_axes.py::test_none_kwargs", "lib/matplotlib/tests/test_axes.py::test_bar_uint8", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_y[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x_and_y[png]", "lib/matplotlib/tests/test_axes.py::test_axisbelow[png]", "lib/matplotlib/tests/test_axes.py::test_titletwiny", "lib/matplotlib/tests/test_axes.py::test_titlesetpos", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top_both", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[left", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[center", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[both", "lib/matplotlib/tests/test_axes.py::test_title_no_move_off_page", "lib/matplotlib/tests/test_axes.py::test_offset_label_color", "lib/matplotlib/tests/test_axes.py::test_offset_text_visible", "lib/matplotlib/tests/test_axes.py::test_large_offset", "lib/matplotlib/tests/test_axes.py::test_barb_units", "lib/matplotlib/tests/test_axes.py::test_quiver_units", "lib/matplotlib/tests/test_axes.py::test_bar_color_cycle", "lib/matplotlib/tests/test_axes.py::test_tick_param_label_rotation", "lib/matplotlib/tests/test_axes.py::test_fillbetween_cycle", "lib/matplotlib/tests/test_axes.py::test_log_margins", "lib/matplotlib/tests/test_axes.py::test_color_length_mismatch", "lib/matplotlib/tests/test_axes.py::test_eventplot_legend", "lib/matplotlib/tests/test_axes.py::test_bar_broadcast_args", "lib/matplotlib/tests/test_axes.py::test_invalid_axis_limits", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-log]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-log]", "lib/matplotlib/tests/test_axes.py::test_twinx_knows_limits", "lib/matplotlib/tests/test_axes.py::test_zero_linewidth", "lib/matplotlib/tests/test_axes.py::test_empty_errorbar_legend", "lib/matplotlib/tests/test_axes.py::test_plot_decimal[png]", "lib/matplotlib/tests/test_axes.py::test_markerfacecolor_none_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_tick_padding_tightbbox", "lib/matplotlib/tests/test_axes.py::test_inset", "lib/matplotlib/tests/test_axes.py::test_zoom_inset", "lib/matplotlib/tests/test_axes.py::test_inset_polar[png]", "lib/matplotlib/tests/test_axes.py::test_inset_projection", "lib/matplotlib/tests/test_axes.py::test_inset_subclass", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-True]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-True]", "lib/matplotlib/tests/test_axes.py::test_set_position", "lib/matplotlib/tests/test_axes.py::test_spines_properbbox_after_zoom", "lib/matplotlib/tests/test_axes.py::test_gettightbbox_ignore_nan", "lib/matplotlib/tests/test_axes.py::test_scatter_series_non_zero_index", "lib/matplotlib/tests/test_axes.py::test_scatter_empty_data", "lib/matplotlib/tests/test_axes.py::test_annotate_across_transforms[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_xy[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_fail", "lib/matplotlib/tests/test_axes.py::test_secondary_resize", "lib/matplotlib/tests/test_axes.py::test_secondary_minorloc", "lib/matplotlib/tests/test_axes.py::test_secondary_formatter", "lib/matplotlib/tests/test_axes.py::test_secondary_repr", "lib/matplotlib/tests/test_axes.py::test_normal_axes", "lib/matplotlib/tests/test_axes.py::test_nodecorator", "lib/matplotlib/tests/test_axes.py::test_displaced_spine", "lib/matplotlib/tests/test_axes.py::test_tickdirs", "lib/matplotlib/tests/test_axes.py::test_minor_accountedfor", "lib/matplotlib/tests/test_axes.py::test_axis_bool_arguments[png]", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg2", "lib/matplotlib/tests/test_axes.py::test_hist_auto_bins", "lib/matplotlib/tests/test_axes.py::test_hist_nan_data", "lib/matplotlib/tests/test_axes.py::test_hist_range_and_density", "lib/matplotlib/tests/test_axes.py::test_bar_errbar_zorder", "lib/matplotlib/tests/test_axes.py::test_set_ticks_inverted", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_box", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_datalim", "lib/matplotlib/tests/test_axes.py::test_box_aspect", "lib/matplotlib/tests/test_axes.py::test_box_aspect_custom_position", "lib/matplotlib/tests/test_axes.py::test_bbox_aspect_axes_init", "lib/matplotlib/tests/test_axes.py::test_set_aspect_negative", "lib/matplotlib/tests/test_axes.py::test_redraw_in_frame", "lib/matplotlib/tests/test_axes.py::test_invisible_axes_events", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-y]", "lib/matplotlib/tests/test_axes.py::test_polar_interpolation_steps_variable_r[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_sticky", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_xticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_yticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[medium]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[larger]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[smaller]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[8]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[10]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[12]", "lib/matplotlib/tests/test_axes.py::test_multiplot_autoscale", "lib/matplotlib/tests/test_axes.py::test_sharing_does_not_link_positions", "lib/matplotlib/tests/test_axes.py::test_2dcolor_plot[pdf]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_clear[png]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_retick", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[left]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[center]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[right]", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xyinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_center", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_errorbars", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[%.2f]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[{:.2f}]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[format]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt_error", "lib/matplotlib/tests/test_axes.py::test_bar_label_labels", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata_inverted", "lib/matplotlib/tests/test_axes.py::test_nan_barlabels", "lib/matplotlib/tests/test_axes.py::test_patch_bounds", "lib/matplotlib/tests/test_axes.py::test_warn_ignored_scatter_kwargs", "lib/matplotlib/tests/test_axes.py::test_artist_sublists", "lib/matplotlib/tests/test_axes.py::test_empty_line_plots", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format", "lib/matplotlib/tests/test_axes.py::test_automatic_legend", "lib/matplotlib/tests/test_axes.py::test_plot_errors", "lib/matplotlib/tests/test_axes.py::test_clim", "lib/matplotlib/tests/test_axes.py::test_bezier_autoscale", "lib/matplotlib/tests/test_axes.py::test_small_autoscale", "lib/matplotlib/tests/test_axes.py::test_get_xticklabel", "lib/matplotlib/tests/test_axes.py::test_bar_leading_nan", "lib/matplotlib/tests/test_axes.py::test_bar_all_nan[png]", "lib/matplotlib/tests/test_axes.py::test_extent_units[png]"]}
{"instance_id": "matplotlib__matplotlib-24970", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_colors.py::test_create_lookup_table[5-result0]", "lib/matplotlib/tests/test_colors.py::test_create_lookup_table[2-result1]", "lib/matplotlib/tests/test_colors.py::test_create_lookup_table[1-result2]", "lib/matplotlib/tests/test_colors.py::test_resampled", "lib/matplotlib/tests/test_colors.py::test_register_cmap", "lib/matplotlib/tests/test_colors.py::test_colormaps_get_cmap", "lib/matplotlib/tests/test_colors.py::test_unregister_builtin_cmap", "lib/matplotlib/tests/test_colors.py::test_colormap_copy", "lib/matplotlib/tests/test_colors.py::test_colormap_equals", "lib/matplotlib/tests/test_colors.py::test_colormap_endian", "lib/matplotlib/tests/test_colors.py::test_colormap_invalid", "lib/matplotlib/tests/test_colors.py::test_colormap_return_types", "lib/matplotlib/tests/test_colors.py::test_BoundaryNorm", "lib/matplotlib/tests/test_colors.py::test_CenteredNorm", "lib/matplotlib/tests/test_colors.py::test_lognorm_invalid[-1-2]", "lib/matplotlib/tests/test_colors.py::test_lognorm_invalid[3-1]", "lib/matplotlib/tests/test_colors.py::test_LogNorm", "lib/matplotlib/tests/test_colors.py::test_LogNorm_inverse", "lib/matplotlib/tests/test_colors.py::test_PowerNorm", "lib/matplotlib/tests/test_colors.py::test_PowerNorm_translation_invariance", "lib/matplotlib/tests/test_colors.py::test_Normalize", "lib/matplotlib/tests/test_colors.py::test_FuncNorm", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_autoscale", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_autoscale_None_vmin", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_autoscale_None_vmax", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_scale", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_scaleout_center", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_scaleout_center_max", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_Even", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_Odd", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VminEqualsVcenter", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VmaxEqualsVcenter", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VminGTVcenter", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VcenterGTVmax", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_premature_scaling", "lib/matplotlib/tests/test_colors.py::test_SymLogNorm", "lib/matplotlib/tests/test_colors.py::test_SymLogNorm_colorbar", "lib/matplotlib/tests/test_colors.py::test_SymLogNorm_single_zero", "lib/matplotlib/tests/test_colors.py::TestAsinhNorm::test_init", "lib/matplotlib/tests/test_colors.py::TestAsinhNorm::test_norm", "lib/matplotlib/tests/test_colors.py::test_cmap_and_norm_from_levels_and_colors[png]", "lib/matplotlib/tests/test_colors.py::test_boundarynorm_and_colorbarbase[png]", "lib/matplotlib/tests/test_colors.py::test_cmap_and_norm_from_levels_and_colors2", "lib/matplotlib/tests/test_colors.py::test_rgb_hsv_round_trip", "lib/matplotlib/tests/test_colors.py::test_autoscale_masked", "lib/matplotlib/tests/test_colors.py::test_light_source_topo_surface[png]", "lib/matplotlib/tests/test_colors.py::test_light_source_shading_default", "lib/matplotlib/tests/test_colors.py::test_light_source_shading_empty_mask", "lib/matplotlib/tests/test_colors.py::test_light_source_masked_shading", "lib/matplotlib/tests/test_colors.py::test_light_source_hillshading", "lib/matplotlib/tests/test_colors.py::test_light_source_planar_hillshading", "lib/matplotlib/tests/test_colors.py::test_color_names", "lib/matplotlib/tests/test_colors.py::test_pandas_iterable", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Accent]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Accent_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Blues]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Blues_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BrBG]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BrBG_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuPu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuPu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[CMRmap]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[CMRmap_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Dark2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Dark2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[GnBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[GnBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greens]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greens_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greys]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greys_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[OrRd]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[OrRd_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Oranges]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Oranges_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PRGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PRGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Paired]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Paired_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel1]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel1_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PiYG]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PiYG_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBuGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBuGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuOr]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuOr_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuRd]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuRd_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Purples]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Purples_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdGy]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdGy_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdPu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdPu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Reds]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Reds_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set1]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set1_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set3]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set3_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Spectral]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Spectral_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Wistia]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Wistia_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGnBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGnBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrBr]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrBr_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrRd]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrRd_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[afmhot]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[afmhot_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[autumn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[autumn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[binary]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[binary_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bone]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bone_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[brg]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[brg_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bwr]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bwr_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cividis]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cividis_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cool]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cool_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[coolwarm]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[coolwarm_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[copper]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[copper_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cubehelix]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cubehelix_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[flag]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[flag_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_earth]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_earth_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_gray]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_gray_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_heat]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_heat_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_ncar]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_ncar_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_rainbow]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_rainbow_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_stern]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_stern_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_yarg]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_yarg_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gray]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gray_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hot]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hot_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hsv]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hsv_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[inferno]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[inferno_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[jet]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[jet_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[magma]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[magma_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[nipy_spectral]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[nipy_spectral_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[ocean]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[ocean_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[pink]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[pink_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[plasma]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[plasma_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[prism]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[prism_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[rainbow]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[rainbow_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[seismic]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[seismic_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[spring]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[spring_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[summer]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[summer_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab10]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab10_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20b]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20b_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20c]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20c_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[terrain]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[terrain_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[turbo]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[turbo_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight_shifted]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight_shifted_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[viridis]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[viridis_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[winter]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[winter_r]", "lib/matplotlib/tests/test_colors.py::test_has_alpha_channel", "lib/matplotlib/tests/test_colors.py::test_cn", "lib/matplotlib/tests/test_colors.py::test_conversions", "lib/matplotlib/tests/test_colors.py::test_conversions_masked", "lib/matplotlib/tests/test_colors.py::test_to_rgba_array_single_str", "lib/matplotlib/tests/test_colors.py::test_to_rgba_array_alpha_array", "lib/matplotlib/tests/test_colors.py::test_failed_conversions", "lib/matplotlib/tests/test_colors.py::test_grey_gray", "lib/matplotlib/tests/test_colors.py::test_tableau_order", "lib/matplotlib/tests/test_colors.py::test_ndarray_subclass_norm", "lib/matplotlib/tests/test_colors.py::test_same_color", "lib/matplotlib/tests/test_colors.py::test_hex_shorthand_notation", "lib/matplotlib/tests/test_colors.py::test_repr_png", "lib/matplotlib/tests/test_colors.py::test_repr_html", "lib/matplotlib/tests/test_colors.py::test_get_under_over_bad", "lib/matplotlib/tests/test_colors.py::test_non_mutable_get_values[over]", "lib/matplotlib/tests/test_colors.py::test_non_mutable_get_values[under]", "lib/matplotlib/tests/test_colors.py::test_non_mutable_get_values[bad]", "lib/matplotlib/tests/test_colors.py::test_colormap_alpha_array", "lib/matplotlib/tests/test_colors.py::test_colormap_bad_data_with_alpha", "lib/matplotlib/tests/test_colors.py::test_2d_to_rgba", "lib/matplotlib/tests/test_colors.py::test_set_dict_to_rgba", "lib/matplotlib/tests/test_colors.py::test_norm_deepcopy", "lib/matplotlib/tests/test_colors.py::test_norm_callback", "lib/matplotlib/tests/test_colors.py::test_scalarmappable_norm_update", "lib/matplotlib/tests/test_colors.py::test_norm_update_figs[png]", "lib/matplotlib/tests/test_colors.py::test_norm_update_figs[pdf]", "lib/matplotlib/tests/test_colors.py::test_make_norm_from_scale_name", "lib/matplotlib/tests/test_colors.py::test_color_sequences", "lib/matplotlib/tests/test_colors.py::test_cm_set_cmap_error"]}
{"instance_id": "matplotlib__matplotlib-25079", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_colors.py::test_create_lookup_table[5-result0]", "lib/matplotlib/tests/test_colors.py::test_create_lookup_table[2-result1]", "lib/matplotlib/tests/test_colors.py::test_create_lookup_table[1-result2]", "lib/matplotlib/tests/test_colors.py::test_index_dtype[uint8]", "lib/matplotlib/tests/test_colors.py::test_index_dtype[int]", "lib/matplotlib/tests/test_colors.py::test_index_dtype[float16]", "lib/matplotlib/tests/test_colors.py::test_index_dtype[float]", "lib/matplotlib/tests/test_colors.py::test_resampled", "lib/matplotlib/tests/test_colors.py::test_register_cmap", "lib/matplotlib/tests/test_colors.py::test_colormaps_get_cmap", "lib/matplotlib/tests/test_colors.py::test_unregister_builtin_cmap", "lib/matplotlib/tests/test_colors.py::test_colormap_copy", "lib/matplotlib/tests/test_colors.py::test_colormap_equals", "lib/matplotlib/tests/test_colors.py::test_colormap_endian", "lib/matplotlib/tests/test_colors.py::test_colormap_invalid", "lib/matplotlib/tests/test_colors.py::test_colormap_return_types", "lib/matplotlib/tests/test_colors.py::test_BoundaryNorm", "lib/matplotlib/tests/test_colors.py::test_CenteredNorm", "lib/matplotlib/tests/test_colors.py::test_lognorm_invalid[-1-2]", "lib/matplotlib/tests/test_colors.py::test_lognorm_invalid[3-1]", "lib/matplotlib/tests/test_colors.py::test_LogNorm", "lib/matplotlib/tests/test_colors.py::test_LogNorm_inverse", "lib/matplotlib/tests/test_colors.py::test_PowerNorm", "lib/matplotlib/tests/test_colors.py::test_PowerNorm_translation_invariance", "lib/matplotlib/tests/test_colors.py::test_Normalize", "lib/matplotlib/tests/test_colors.py::test_FuncNorm", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_autoscale", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_autoscale_None_vmin", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_autoscale_None_vmax", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_scale", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_scaleout_center", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_scaleout_center_max", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_Even", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_Odd", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VminEqualsVcenter", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VmaxEqualsVcenter", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VminGTVcenter", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_VcenterGTVmax", "lib/matplotlib/tests/test_colors.py::test_TwoSlopeNorm_premature_scaling", "lib/matplotlib/tests/test_colors.py::test_SymLogNorm", "lib/matplotlib/tests/test_colors.py::test_SymLogNorm_colorbar", "lib/matplotlib/tests/test_colors.py::test_SymLogNorm_single_zero", "lib/matplotlib/tests/test_colors.py::TestAsinhNorm::test_init", "lib/matplotlib/tests/test_colors.py::TestAsinhNorm::test_norm", "lib/matplotlib/tests/test_colors.py::test_cmap_and_norm_from_levels_and_colors[png]", "lib/matplotlib/tests/test_colors.py::test_boundarynorm_and_colorbarbase[png]", "lib/matplotlib/tests/test_colors.py::test_cmap_and_norm_from_levels_and_colors2", "lib/matplotlib/tests/test_colors.py::test_rgb_hsv_round_trip", "lib/matplotlib/tests/test_colors.py::test_autoscale_masked", "lib/matplotlib/tests/test_colors.py::test_light_source_topo_surface[png]", "lib/matplotlib/tests/test_colors.py::test_light_source_shading_default", "lib/matplotlib/tests/test_colors.py::test_light_source_shading_empty_mask", "lib/matplotlib/tests/test_colors.py::test_light_source_masked_shading", "lib/matplotlib/tests/test_colors.py::test_light_source_hillshading", "lib/matplotlib/tests/test_colors.py::test_light_source_planar_hillshading", "lib/matplotlib/tests/test_colors.py::test_color_names", "lib/matplotlib/tests/test_colors.py::test_pandas_iterable", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Accent]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Accent_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Blues]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Blues_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BrBG]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BrBG_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuPu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[BuPu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[CMRmap]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[CMRmap_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Dark2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Dark2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[GnBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[GnBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greens]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greens_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greys]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Greys_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[OrRd]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[OrRd_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Oranges]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Oranges_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PRGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PRGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Paired]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Paired_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel1]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel1_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Pastel2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PiYG]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PiYG_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBuGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBuGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuOr]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuOr_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuRd]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[PuRd_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Purples]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Purples_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdGy]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdGy_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdPu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdPu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[RdYlGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Reds]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Reds_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set1]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set1_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set3]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Set3_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Spectral]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Spectral_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Wistia]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[Wistia_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGnBu]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGnBu_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlGn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrBr]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrBr_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrRd]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[YlOrRd_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[afmhot]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[afmhot_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[autumn]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[autumn_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[binary]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[binary_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bone]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bone_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[brg]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[brg_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bwr]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[bwr_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cividis]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cividis_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cool]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cool_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[coolwarm]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[coolwarm_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[copper]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[copper_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cubehelix]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[cubehelix_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[flag]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[flag_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_earth]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_earth_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_gray]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_gray_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_heat]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_heat_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_ncar]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_ncar_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_rainbow]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_rainbow_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_stern]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_stern_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_yarg]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gist_yarg_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot2]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot2_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gnuplot_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gray]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[gray_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hot]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hot_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hsv]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[hsv_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[inferno]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[inferno_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[jet]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[jet_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[magma]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[magma_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[nipy_spectral]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[nipy_spectral_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[ocean]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[ocean_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[pink]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[pink_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[plasma]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[plasma_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[prism]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[prism_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[rainbow]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[rainbow_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[seismic]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[seismic_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[spring]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[spring_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[summer]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[summer_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab10]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab10_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20b]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20b_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20c]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[tab20c_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[terrain]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[terrain_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[turbo]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[turbo_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight_shifted]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[twilight_shifted_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[viridis]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[viridis_r]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[winter]", "lib/matplotlib/tests/test_colors.py::test_colormap_reversing[winter_r]", "lib/matplotlib/tests/test_colors.py::test_has_alpha_channel", "lib/matplotlib/tests/test_colors.py::test_cn", "lib/matplotlib/tests/test_colors.py::test_conversions", "lib/matplotlib/tests/test_colors.py::test_conversions_masked", "lib/matplotlib/tests/test_colors.py::test_to_rgba_array_single_str", "lib/matplotlib/tests/test_colors.py::test_to_rgba_array_alpha_array", "lib/matplotlib/tests/test_colors.py::test_failed_conversions", "lib/matplotlib/tests/test_colors.py::test_grey_gray", "lib/matplotlib/tests/test_colors.py::test_tableau_order", "lib/matplotlib/tests/test_colors.py::test_ndarray_subclass_norm", "lib/matplotlib/tests/test_colors.py::test_same_color", "lib/matplotlib/tests/test_colors.py::test_hex_shorthand_notation", "lib/matplotlib/tests/test_colors.py::test_repr_png", "lib/matplotlib/tests/test_colors.py::test_repr_html", "lib/matplotlib/tests/test_colors.py::test_get_under_over_bad", "lib/matplotlib/tests/test_colors.py::test_non_mutable_get_values[over]", "lib/matplotlib/tests/test_colors.py::test_non_mutable_get_values[under]", "lib/matplotlib/tests/test_colors.py::test_non_mutable_get_values[bad]", "lib/matplotlib/tests/test_colors.py::test_colormap_alpha_array", "lib/matplotlib/tests/test_colors.py::test_colormap_bad_data_with_alpha", "lib/matplotlib/tests/test_colors.py::test_2d_to_rgba", "lib/matplotlib/tests/test_colors.py::test_set_dict_to_rgba", "lib/matplotlib/tests/test_colors.py::test_norm_deepcopy", "lib/matplotlib/tests/test_colors.py::test_norm_callback", "lib/matplotlib/tests/test_colors.py::test_scalarmappable_norm_update", "lib/matplotlib/tests/test_colors.py::test_norm_update_figs[png]", "lib/matplotlib/tests/test_colors.py::test_norm_update_figs[pdf]", "lib/matplotlib/tests/test_colors.py::test_make_norm_from_scale_name", "lib/matplotlib/tests/test_colors.py::test_color_sequences", "lib/matplotlib/tests/test_colors.py::test_cm_set_cmap_error"]}
{"instance_id": "matplotlib__matplotlib-25311", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_pickle.py::test_simple", "lib/matplotlib/tests/test_pickle.py::test_complete[png]", "lib/matplotlib/tests/test_pickle.py::test_pickle_load_from_subprocess[png]", "lib/matplotlib/tests/test_pickle.py::test_gcf", "lib/matplotlib/tests/test_pickle.py::test_no_pyplot", "lib/matplotlib/tests/test_pickle.py::test_renderer", "lib/matplotlib/tests/test_pickle.py::test_image", "lib/matplotlib/tests/test_pickle.py::test_polar", "lib/matplotlib/tests/test_pickle.py::test_transform", "lib/matplotlib/tests/test_pickle.py::test_rrulewrapper", "lib/matplotlib/tests/test_pickle.py::test_shared", "lib/matplotlib/tests/test_pickle.py::test_inset_and_secondary", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap0]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap1]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap2]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap3]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap4]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap5]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap6]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap7]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap8]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap9]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap10]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap11]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap12]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap13]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap14]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap15]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap16]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap17]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap18]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap19]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap20]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap21]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap22]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap23]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap24]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap25]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap26]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap27]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap28]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap29]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap30]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap31]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap32]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap33]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap34]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap35]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap36]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap37]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap38]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap39]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap40]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap41]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap42]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap43]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap44]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap45]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap46]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap47]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap48]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap49]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap50]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap51]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap52]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap53]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap54]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap55]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap56]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap57]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap58]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap59]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap60]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap61]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap62]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap63]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap64]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap65]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap66]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap67]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap68]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap69]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap70]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap71]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap72]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap73]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap74]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap75]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap76]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap77]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap78]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap79]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap80]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap81]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap82]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap83]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap84]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap85]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap86]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap87]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap88]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap89]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap90]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap91]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap92]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap93]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap94]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap95]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap96]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap97]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap98]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap99]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap100]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap101]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap102]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap103]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap104]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap105]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap106]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap107]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap108]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap109]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap110]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap111]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap112]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap113]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap114]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap115]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap116]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap117]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap118]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap119]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap120]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap121]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap122]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap123]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap124]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap125]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap126]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap127]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap128]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap129]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap130]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap131]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap132]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap133]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap134]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap135]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap136]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap137]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap138]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap139]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap140]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap141]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap142]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap143]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap144]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap145]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap146]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap147]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap148]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap149]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap150]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap151]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap152]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap153]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap154]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap155]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap156]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap157]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap158]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap159]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap160]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap161]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap162]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap163]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap164]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap165]", "lib/matplotlib/tests/test_pickle.py::test_unpickle_canvas", "lib/matplotlib/tests/test_pickle.py::test_mpl_toolkits", "lib/matplotlib/tests/test_pickle.py::test_standard_norm", "lib/matplotlib/tests/test_pickle.py::test_dynamic_norm", "lib/matplotlib/tests/test_pickle.py::test_vertexselector"]}
{"instance_id": "matplotlib__matplotlib-25332", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_pickle.py::test_simple", "lib/matplotlib/tests/test_pickle.py::test_complete[png]", "lib/matplotlib/tests/test_pickle.py::test_pickle_load_from_subprocess[png]", "lib/matplotlib/tests/test_pickle.py::test_gcf", "lib/matplotlib/tests/test_pickle.py::test_no_pyplot", "lib/matplotlib/tests/test_pickle.py::test_renderer", "lib/matplotlib/tests/test_pickle.py::test_image", "lib/matplotlib/tests/test_pickle.py::test_polar", "lib/matplotlib/tests/test_pickle.py::test_transform", "lib/matplotlib/tests/test_pickle.py::test_rrulewrapper", "lib/matplotlib/tests/test_pickle.py::test_shared", "lib/matplotlib/tests/test_pickle.py::test_inset_and_secondary", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap0]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap1]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap2]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap3]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap4]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap5]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap6]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap7]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap8]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap9]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap10]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap11]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap12]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap13]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap14]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap15]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap16]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap17]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap18]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap19]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap20]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap21]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap22]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap23]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap24]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap25]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap26]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap27]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap28]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap29]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap30]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap31]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap32]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap33]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap34]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap35]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap36]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap37]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap38]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap39]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap40]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap41]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap42]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap43]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap44]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap45]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap46]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap47]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap48]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap49]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap50]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap51]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap52]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap53]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap54]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap55]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap56]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap57]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap58]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap59]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap60]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap61]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap62]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap63]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap64]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap65]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap66]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap67]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap68]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap69]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap70]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap71]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap72]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap73]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap74]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap75]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap76]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap77]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap78]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap79]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap80]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap81]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap82]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap83]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap84]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap85]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap86]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap87]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap88]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap89]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap90]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap91]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap92]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap93]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap94]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap95]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap96]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap97]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap98]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap99]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap100]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap101]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap102]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap103]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap104]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap105]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap106]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap107]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap108]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap109]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap110]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap111]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap112]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap113]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap114]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap115]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap116]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap117]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap118]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap119]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap120]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap121]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap122]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap123]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap124]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap125]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap126]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap127]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap128]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap129]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap130]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap131]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap132]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap133]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap134]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap135]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap136]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap137]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap138]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap139]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap140]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap141]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap142]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap143]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap144]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap145]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap146]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap147]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap148]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap149]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap150]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap151]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap152]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap153]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap154]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap155]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap156]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap157]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap158]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap159]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap160]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap161]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap162]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap163]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap164]", "lib/matplotlib/tests/test_pickle.py::test_cmap[cmap165]", "lib/matplotlib/tests/test_pickle.py::test_unpickle_canvas", "lib/matplotlib/tests/test_pickle.py::test_mpl_toolkits", "lib/matplotlib/tests/test_pickle.py::test_standard_norm", "lib/matplotlib/tests/test_pickle.py::test_dynamic_norm", "lib/matplotlib/tests/test_pickle.py::test_vertexselector"]}
{"instance_id": "matplotlib__matplotlib-25433", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_backend_bases.py::test_uses_per_path", "lib/matplotlib/tests/test_backend_bases.py::test_canvas_ctor", "lib/matplotlib/tests/test_backend_bases.py::test_get_default_filename", "lib/matplotlib/tests/test_backend_bases.py::test_canvas_change", "lib/matplotlib/tests/test_backend_bases.py::test_non_gui_warning", "lib/matplotlib/tests/test_backend_bases.py::test_location_event_position[42-24]", "lib/matplotlib/tests/test_backend_bases.py::test_location_event_position[None-42]", "lib/matplotlib/tests/test_backend_bases.py::test_location_event_position[None-None]", "lib/matplotlib/tests/test_backend_bases.py::test_location_event_position[200-100.01]", "lib/matplotlib/tests/test_backend_bases.py::test_location_event_position[205.75-2.0]", "lib/matplotlib/tests/test_backend_bases.py::test_pick", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_zoom", "lib/matplotlib/tests/test_backend_bases.py::test_widgetlock_zoompan", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-1-expected0-vertical-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-1-expected0-vertical-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-1-expected0-horizontal-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-1-expected0-horizontal-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-3-expected1-vertical-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-3-expected1-vertical-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-3-expected1-horizontal-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[zoom-3-expected1-horizontal-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-1-expected2-vertical-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-1-expected2-vertical-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-1-expected2-horizontal-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-1-expected2-horizontal-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-3-expected3-vertical-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-3-expected3-vertical-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-3-expected3-horizontal-imshow]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_colorbar[pan-3-expected3-horizontal-contourf]", "lib/matplotlib/tests/test_backend_bases.py::test_toolbar_zoompan", "lib/matplotlib/tests/test_backend_bases.py::test_draw[svg]", "lib/matplotlib/tests/test_backend_bases.py::test_draw[ps]", "lib/matplotlib/tests/test_backend_bases.py::test_draw[pdf]", "lib/matplotlib/tests/test_backend_bases.py::test_draw[pgf]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend0-expectedxlim0-expectedylim0]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend1-expectedxlim1-expectedylim1]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend2-expectedxlim2-expectedylim2]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend3-expectedxlim3-expectedylim3]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend4-expectedxlim4-expectedylim4]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend5-expectedxlim5-expectedylim5]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend6-expectedxlim6-expectedylim6]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[None-mouseend7-expectedxlim7-expectedylim7]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[shift-mouseend8-expectedxlim8-expectedylim8]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[shift-mouseend9-expectedxlim9-expectedylim9]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[shift-mouseend10-expectedxlim10-expectedylim10]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[shift-mouseend11-expectedxlim11-expectedylim11]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[shift-mouseend12-expectedxlim12-expectedylim12]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[shift-mouseend13-expectedxlim13-expectedylim13]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[x-mouseend14-expectedxlim14-expectedylim14]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[y-mouseend15-expectedxlim15-expectedylim15]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[control-mouseend16-expectedxlim16-expectedylim16]", "lib/matplotlib/tests/test_backend_bases.py::test_interactive_pan[control-mouseend17-expectedxlim17-expectedylim17]", "lib/matplotlib/tests/test_backend_bases.py::test_toolmanager_remove", "lib/matplotlib/tests/test_backend_bases.py::test_toolmanager_get_tool", "lib/matplotlib/tests/test_backend_bases.py::test_toolmanager_update_keymap"]}
{"instance_id": "matplotlib__matplotlib-25442", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_clipping[png]", "lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_clipping[pdf]", "lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_clip_children", "lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_loc_codes", "lib/matplotlib/tests/test_offsetbox.py::test_expand_with_tight_layout", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths3]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_fixed[widths0-None-1-expected0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_fixed[widths1-10-1-expected1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_fixed[widths2-5-1-expected2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_expand[widths0-None-None-expected0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_expand[widths1-10-1-expected1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_expand[widths2-5-1-expected2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal[widths0-6-None-expected0]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal[widths1-2-None-expected1]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal[widths2-None-1-expected2]", "lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal_total_none_sep_none", "lib/matplotlib/tests/test_offsetbox.py::test_picking[axes", "lib/matplotlib/tests/test_offsetbox.py::test_picking[data-draw]", "lib/matplotlib/tests/test_offsetbox.py::test_picking[data-image]", "lib/matplotlib/tests/test_offsetbox.py::test_picking[data-text]", "lib/matplotlib/tests/test_offsetbox.py::test_anchoredtext_horizontal_alignment[png]", "lib/matplotlib/tests/test_offsetbox.py::test_annotationbbox_extents", "lib/matplotlib/tests/test_offsetbox.py::test_zorder", "lib/matplotlib/tests/test_offsetbox.py::test_arrowprops_copied", "lib/matplotlib/tests/test_offsetbox.py::test_packers[baseline]", "lib/matplotlib/tests/test_offsetbox.py::test_packers[bottom]", "lib/matplotlib/tests/test_offsetbox.py::test_packers[top]", "lib/matplotlib/tests/test_offsetbox.py::test_packers[left]", "lib/matplotlib/tests/test_offsetbox.py::test_packers[right]", "lib/matplotlib/tests/test_offsetbox.py::test_packers[center]", "lib/matplotlib/tests/test_offsetbox.py::test_paddedbox_default_values", "lib/matplotlib/tests/test_offsetbox.py::test_annotationbbox_properties", "lib/matplotlib/tests/test_offsetbox.py::test_textarea_properties", "lib/matplotlib/tests/test_offsetbox.py::test_textarea_set_text[png]", "lib/matplotlib/tests/test_offsetbox.py::test_textarea_set_text[pdf]", "lib/matplotlib/tests/test_offsetbox.py::test_paddedbox[png]"]}
{"instance_id": "matplotlib__matplotlib-25498", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_shape[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_length[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[min-expected0-horizontal]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[min-expected0-vertical]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[max-expected1-horizontal]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[max-expected1-vertical]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[both-expected2-horizontal]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[both-expected2-vertical]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_positioning[png-True]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_positioning[png-False]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_ax_panchor_false", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_ax_panchor_east[standard]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_ax_panchor_east[constrained]", "lib/matplotlib/tests/test_colorbar.py::test_contour_colorbar[png]", "lib/matplotlib/tests/test_colorbar.py::test_gridspec_make_colorbar[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_scatter[png]", "lib/matplotlib/tests/test_colorbar.py::test_remove_from_figure[no", "lib/matplotlib/tests/test_colorbar.py::test_remove_from_figure[with", "lib/matplotlib/tests/test_colorbar.py::test_remove_from_figure_cl", "lib/matplotlib/tests/test_colorbar.py::test_colorbarbase", "lib/matplotlib/tests/test_colorbar.py::test_parentless_mappable", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_closed_patch[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_ticks", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_minorticks_on_off", "lib/matplotlib/tests/test_colorbar.py::test_cbar_minorticks_for_rc_xyminortickvisible", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_autoticks", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_autotickslog", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_get_ticks", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_lognorm_extension[both]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_lognorm_extension[min]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_lognorm_extension[max]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_powernorm_extension", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_axes_kw", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_log_minortick_labels", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_renorm", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_format[%4.2e]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_format[{x:.2e}]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_scale_reset", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_get_ticks_2", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_inverted_ticks", "lib/matplotlib/tests/test_colorbar.py::test_mappable_no_alpha", "lib/matplotlib/tests/test_colorbar.py::test_mappable_2d_alpha", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_label", "lib/matplotlib/tests/test_colorbar.py::test_keeping_xlabel[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_int[clim0]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_int[clim1]", "lib/matplotlib/tests/test_colorbar.py::test_anchored_cbar_position_using_specgrid", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_change_lim_scale[png]", "lib/matplotlib/tests/test_colorbar.py::test_axes_handles_same_functions[png]", "lib/matplotlib/tests/test_colorbar.py::test_inset_colorbar_layout", "lib/matplotlib/tests/test_colorbar.py::test_twoslope_colorbar[png]", "lib/matplotlib/tests/test_colorbar.py::test_remove_cb_whose_mappable_has_no_figure[png]", "lib/matplotlib/tests/test_colorbar.py::test_aspects", "lib/matplotlib/tests/test_colorbar.py::test_proportional_colorbars[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extend_drawedges[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_contourf_extend_patches[png]", "lib/matplotlib/tests/test_colorbar.py::test_negative_boundarynorm", "lib/matplotlib/tests/test_colorbar.py::test_centerednorm", "lib/matplotlib/tests/test_colorbar.py::test_boundaries[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_no_warning_rcparams_grid_true", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_set_formatter_locator", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_extend_alpha[png]", "lib/matplotlib/tests/test_colorbar.py::test_offset_text_loc", "lib/matplotlib/tests/test_colorbar.py::test_title_text_loc", "lib/matplotlib/tests/test_colorbar.py::test_passing_location[png]", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_errors[kwargs0-TypeError-location", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_errors[kwargs1-TypeError-location", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_errors[kwargs2-ValueError-'top'", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_errors[kwargs3-ValueError-invalid", "lib/matplotlib/tests/test_colorbar.py::test_colorbar_axes_parmeters"]}
{"instance_id": "matplotlib__matplotlib-26011", "tests_passing_in_original_repo": ["lib/matplotlib/tests/test_axes.py::test_invisible_axes[png]", "lib/matplotlib/tests/test_axes.py::test_get_labels", "lib/matplotlib/tests/test_axes.py::test_repr", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_vertical[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_horizontal[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[png]", "lib/matplotlib/tests/test_axes.py::test_label_loc_rc[pdf]", "lib/matplotlib/tests/test_axes.py::test_label_shift", "lib/matplotlib/tests/test_axes.py::test_acorr[png]", "lib/matplotlib/tests/test_axes.py::test_acorr_integers[png]", "lib/matplotlib/tests/test_axes.py::test_spy[png]", "lib/matplotlib/tests/test_axes.py::test_spy_invalid_kwargs", "lib/matplotlib/tests/test_axes.py::test_matshow[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[png]", "lib/matplotlib/tests/test_axes.py::test_formatter_ticker[pdf]", "lib/matplotlib/tests/test_axes.py::test_funcformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_strmethodformatter_auto_formatter", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[png]", "lib/matplotlib/tests/test_axes.py::test_twin_axis_locators_formatters[pdf]", "lib/matplotlib/tests/test_axes.py::test_twinx_cla", "lib/matplotlib/tests/test_axes.py::test_twin_units[x]", "lib/matplotlib/tests/test_axes.py::test_twin_units[y]", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-x]", "lib/matplotlib/tests/test_axes.py::test_twin_logscale[png-y]", "lib/matplotlib/tests/test_axes.py::test_twinx_axis_scales[png]", "lib/matplotlib/tests/test_axes.py::test_twin_inherit_autoscale_setting", "lib/matplotlib/tests/test_axes.py::test_inverted_cla", "lib/matplotlib/tests/test_axes.py::test_subclass_clear_cla", "lib/matplotlib/tests/test_axes.py::test_cla_not_redefined_internally", "lib/matplotlib/tests/test_axes.py::test_minorticks_on_rcParams_both[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[pdf]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tight", "lib/matplotlib/tests/test_axes.py::test_autoscale_log_shared", "lib/matplotlib/tests/test_axes.py::test_use_sticky_edges", "lib/matplotlib/tests/test_axes.py::test_sticky_shared_axes[png]", "lib/matplotlib/tests/test_axes.py::test_nargs_stem", "lib/matplotlib/tests/test_axes.py::test_nargs_legend", "lib/matplotlib/tests/test_axes.py::test_nargs_pcolorfast", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[png]", "lib/matplotlib/tests/test_axes.py::test_basic_annotate[pdf]", "lib/matplotlib/tests/test_axes.py::test_arrow_simple[png]", "lib/matplotlib/tests/test_axes.py::test_arrow_empty", "lib/matplotlib/tests/test_axes.py::test_arrow_in_view", "lib/matplotlib/tests/test_axes.py::test_annotate_default_arrow", "lib/matplotlib/tests/test_axes.py::test_annotate_signature", "lib/matplotlib/tests/test_axes.py::test_fill_units[png]", "lib/matplotlib/tests/test_axes.py::test_plot_format_kwarg_redundant", "lib/matplotlib/tests/test_axes.py::test_errorbar_dashes[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[png]", "lib/matplotlib/tests/test_axes.py::test_single_point[pdf]", "lib/matplotlib/tests/test_axes.py::test_single_date[png]", "lib/matplotlib/tests/test_axes.py::test_shaped_data[png]", "lib/matplotlib/tests/test_axes.py::test_structured_data", "lib/matplotlib/tests/test_axes.py::test_aitoff_proj[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axvspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[png]", "lib/matplotlib/tests/test_axes.py::test_axhspan_epoch[pdf]", "lib/matplotlib/tests/test_axes.py::test_hexbin_extent[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_pickable", "lib/matplotlib/tests/test_axes.py::test_hexbin_log[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_linear[png]", "lib/matplotlib/tests/test_axes.py::test_hexbin_log_clim", "lib/matplotlib/tests/test_axes.py::test_hexbin_mincnt_behavior_upon_C_parameter[png]", "lib/matplotlib/tests/test_axes.py::test_inverted_limits", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[png]", "lib/matplotlib/tests/test_axes.py::test_nonfinite_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-scatter]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-plot]", "lib/matplotlib/tests/test_axes.py::test_limits_empty_data[png-fill_between]", "lib/matplotlib/tests/test_axes.py::test_imshow[png]", "lib/matplotlib/tests/test_axes.py::test_imshow[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[png]", "lib/matplotlib/tests/test_axes.py::test_imshow_clip[pdf]", "lib/matplotlib/tests/test_axes.py::test_imshow_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[png]", "lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_x_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_y_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x1_input]", "lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x2_input]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[pdf]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[png]", "lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_nan[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog[pdf]", "lib/matplotlib/tests/test_axes.py::test_symlog2[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs_5205", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_small[eps]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_rgba[png-3-1]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_rgba[png-4-0.5]", "lib/matplotlib/tests/test_axes.py::test_pcolormesh_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolor_datetime_axis[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorargs", "lib/matplotlib/tests/test_axes.py::test_pcolorargs_with_read_only", "lib/matplotlib/tests/test_axes.py::test_pcolornearest[png]", "lib/matplotlib/tests/test_axes.py::test_pcolornearestunits[png]", "lib/matplotlib/tests/test_axes.py::test_pcolorflaterror", "lib/matplotlib/tests/test_axes.py::test_samesizepcolorflaterror", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-False]", "lib/matplotlib/tests/test_axes.py::test_pcolorauto[png-True]", "lib/matplotlib/tests/test_axes.py::test_canonical[png]", "lib/matplotlib/tests/test_axes.py::test_canonical[pdf]", "lib/matplotlib/tests/test_axes.py::test_arc_angles[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[png]", "lib/matplotlib/tests/test_axes.py::test_arc_ellipse[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_as_markerstyle", "lib/matplotlib/tests/test_axes.py::test_markevery[png]", "lib/matplotlib/tests/test_axes.py::test_markevery[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_line[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_polar[pdf]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[png]", "lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_nans[pdf]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[png]", "lib/matplotlib/tests/test_axes.py::test_marker_edges[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_single[png]", "lib/matplotlib/tests/test_axes.py::test_nan_bar_values", "lib/matplotlib/tests/test_axes.py::test_bar_ticklabel_fail", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple[png]", "lib/matplotlib/tests/test_axes.py::test_bar_tick_label_multiple_old_alignment[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_center[png]", "lib/matplotlib/tests/test_axes.py::test_bar_decimal_width[png]", "lib/matplotlib/tests/test_axes.py::test_barh_decimal_height[png]", "lib/matplotlib/tests/test_axes.py::test_bar_color_none_alpha", "lib/matplotlib/tests/test_axes.py::test_bar_edgecolor_none_alpha", "lib/matplotlib/tests/test_axes.py::test_barh_tick_label[png]", "lib/matplotlib/tests/test_axes.py::test_bar_timedelta", "lib/matplotlib/tests/test_axes.py::test_bar_datetime_start", "lib/matplotlib/tests/test_axes.py::test_boxplot_dates_pandas", "lib/matplotlib/tests/test_axes.py::test_boxplot_capwidths", "lib/matplotlib/tests/test_axes.py::test_pcolor_regression", "lib/matplotlib/tests/test_axes.py::test_bar_pandas", "lib/matplotlib/tests/test_axes.py::test_bar_pandas_indexed", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[png]", "lib/matplotlib/tests/test_axes.py::test_bar_hatches[pdf]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x-1-x-expected_labels0-x]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x1-width1-label1-expected_labels1-_nolegend_]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x2-width2-label2-expected_labels2-_nolegend_]", "lib/matplotlib/tests/test_axes.py::test_bar_labels[x3-width3-bars-expected_labels3-bars]", "lib/matplotlib/tests/test_axes.py::test_bar_labels_length", "lib/matplotlib/tests/test_axes.py::test_pandas_minimal_plot", "lib/matplotlib/tests/test_axes.py::test_hist_log[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_log_2[png]", "lib/matplotlib/tests/test_axes.py::test_hist_log_barstacked", "lib/matplotlib/tests/test_axes.py::test_hist_bar_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_float16", "lib/matplotlib/tests/test_axes.py::test_hist_step_empty[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_filled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_unequal_bins_density", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[date2num]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[datetime.datetime]", "lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets_bins[np.datetime64]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data0-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data1-1]", "lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data2-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[bar-1]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[step-2]", "lib/matplotlib/tests/test_axes.py::test_hist_zorder[stepfilled-1]", "lib/matplotlib/tests/test_axes.py::test_stairs[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_fill[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_update[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_baseline_0[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_empty", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_nan", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_mismatch", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update", "lib/matplotlib/tests/test_axes.py::test_stairs_invalid_update2", "lib/matplotlib/tests/test_axes.py::test_stairs_options[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_datetime[png]", "lib/matplotlib/tests/test_axes.py::test_stairs_edge_handling[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[png]", "lib/matplotlib/tests/test_axes.py::test_contour_hatching[pdf]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[png]", "lib/matplotlib/tests/test_axes.py::test_contour_colorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[png]", "lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist2d_density", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[pdf]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_marker[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_2D[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_decimal[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs0]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs1]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs2]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color_warning[kwargs3]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfilled", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_unfillable", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_size_arg_size", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_edgecolor_RGB", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_no_invalid_color[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_norm_vminvmax", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_point[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_different_shapes[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[0.5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case1-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[red-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[none-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[None-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case5-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[jaune-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case7-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case8-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case9-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case10-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case11-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case12-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case13-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case14-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case15-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case16-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case17-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case18-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case19-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case20-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case21-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case22-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case23-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case24-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case25-None]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case26-shape]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case27-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case28-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case29-conversion]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_color_c[png]", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_linewidths", "lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_singular_plural_arguments", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params0-expected_result0]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params1-expected_result1]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params2-expected_result2]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params3-expected_result3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params4-expected_result4]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs0-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs1-None]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs2-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs3-expected_edgecolors3]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs4-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs5-face]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs6-none]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs7-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs8-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs9-r]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs10-g]", "lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_error", "lib/matplotlib/tests/test_axes.py::test_as_mpl_axes_api", "lib/matplotlib/tests/test_axes.py::test_pyplot_axes", "lib/matplotlib/tests/test_axes.py::test_log_scales", "lib/matplotlib/tests/test_axes.py::test_log_scales_no_data", "lib/matplotlib/tests/test_axes.py::test_log_scales_invalid", "lib/matplotlib/tests/test_axes.py::test_stackplot[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[pdf]", "lib/matplotlib/tests/test_axes.py::test_bxp_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_rangewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_percentilewhis[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_xlabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_horizontal[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_with_ylabels[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_patchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompatchartist[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customoutlier[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showcustommean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custombox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custommedian[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customcap[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwhisker[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_shownotches[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nocaps[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_nobox[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_no_flier_stats[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmean[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_showmeanasline[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_scalarwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_customwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custompositions[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_widths", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_positions", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_custom_capwidth[png]", "lib/matplotlib/tests/test_axes.py::test_bxp_bad_capwidths", "lib/matplotlib/tests/test_axes.py::test_boxplot[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_custom_capwidths[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym2[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_sym[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_autorange_whiskers[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[pdf]", "lib/matplotlib/tests/test_axes.py::test_boxplot_with_CIarray[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_no_weird_whisker[png]", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_medians", "lib/matplotlib/tests/test_axes.py::test_boxplot_bad_ci", "lib/matplotlib/tests/test_axes.py::test_boxplot_zorder", "lib/matplotlib/tests/test_axes.py::test_boxplot_marker_behavior", "lib/matplotlib/tests/test_axes.py::test_boxplot_mod_artist_after_plotting[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_vert_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_baseline[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmedians[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showmeans[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showextrema[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_showall[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_10[png]", "lib/matplotlib/tests/test_axes.py::test_horiz_violinplot_custompoints_200[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_positions", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_widths", "lib/matplotlib/tests/test_axes.py::test_violinplot_bad_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_outofrange_quantiles", "lib/matplotlib/tests/test_axes.py::test_violinplot_single_list_quantiles[png]", "lib/matplotlib/tests/test_axes.py::test_violinplot_pandas_series[png]", "lib/matplotlib/tests/test_axes.py::test_manage_xticks", "lib/matplotlib/tests/test_axes.py::test_boxplot_not_single", "lib/matplotlib/tests/test_axes.py::test_tick_space_size_0", "lib/matplotlib/tests/test_axes.py::test_errorbar[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_errorbar_polar_caps[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_colorcycle", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_cycle_ecolor[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_shape", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_limits[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nonefmt", "lib/matplotlib/tests/test_axes.py::test_errorbar_line_specific_kwargs", "lib/matplotlib/tests/test_axes.py::test_errorbar_with_prop_cycle[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every_invalid", "lib/matplotlib/tests/test_axes.py::test_xerr_yerr_not_negative", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[png]", "lib/matplotlib/tests/test_axes.py::test_errorbar_every[pdf]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[elinewidth1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_linewidth_type[1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_nan[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[png]", "lib/matplotlib/tests/test_axes.py::test_hist_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_step_horiz[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_weighted[pdf]", "lib/matplotlib/tests/test_axes.py::test_stem[png]", "lib/matplotlib/tests/test_axes.py::test_stem_args", "lib/matplotlib/tests/test_axes.py::test_stem_markerfmt", "lib/matplotlib/tests/test_axes.py::test_stem_dates", "lib/matplotlib/tests/test_axes.py::test_stem_orientation[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_density[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_stepfilled_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_step_bottom_geometry", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[png]", "lib/matplotlib/tests/test_axes.py::test_hist_stacked_bar[pdf]", "lib/matplotlib/tests/test_axes.py::test_hist_barstacked_bottom_unchanged", "lib/matplotlib/tests/test_axes.py::test_hist_emptydata", "lib/matplotlib/tests/test_axes.py::test_hist_labels", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[png]", "lib/matplotlib/tests/test_axes.py::test_transparent_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[png]", "lib/matplotlib/tests/test_axes.py::test_rgba_markers[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[png]", "lib/matplotlib/tests/test_axes.py::test_mollweide_grid[pdf]", "lib/matplotlib/tests/test_axes.py::test_mollweide_forward_inverse_closure", "lib/matplotlib/tests/test_axes.py::test_mollweide_inverse_forward_closure", "lib/matplotlib/tests/test_axes.py::test_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_alpha[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot[pdf]", "lib/matplotlib/tests/test_axes.py::test_eventplot_defaults[png]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_alpha", "lib/matplotlib/tests/test_axes.py::test_eventplot_problem_kwargs[png]", "lib/matplotlib/tests/test_axes.py::test_empty_eventplot", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[None-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[vertical-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data0]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data1]", "lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[horizontal-data2]", "lib/matplotlib/tests/test_axes.py::test_eventplot_units_list[png]", "lib/matplotlib/tests/test_axes.py::test_marker_styles[png]", "lib/matplotlib/tests/test_axes.py::test_markers_fillstyle_rcparams[png]", "lib/matplotlib/tests/test_axes.py::test_vertex_markers[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[png]", "lib/matplotlib/tests/test_axes.py::test_eb_line_zorder[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_axline_loglog[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline[png]", "lib/matplotlib/tests/test_axes.py::test_axline[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[png]", "lib/matplotlib/tests/test_axes.py::test_axline_transaxes_panzoom[pdf]", "lib/matplotlib/tests/test_axes.py::test_axline_args", "lib/matplotlib/tests/test_axes.py::test_vlines[png]", "lib/matplotlib/tests/test_axes.py::test_vlines_default", "lib/matplotlib/tests/test_axes.py::test_hlines[png]", "lib/matplotlib/tests/test_axes.py::test_hlines_default", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data0]", "lib/matplotlib/tests/test_axes.py::test_lines_with_colors[png-data1]", "lib/matplotlib/tests/test_axes.py::test_vlines_hlines_blended_transform[png]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[png]", "lib/matplotlib/tests/test_axes.py::test_step_linestyle[pdf]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[png]", "lib/matplotlib/tests/test_axes.py::test_mixed_collection[pdf]", "lib/matplotlib/tests/test_axes.py::test_subplot_key_hash", "lib/matplotlib/tests/test_axes.py::test_specgram[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_magnitude[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_angle[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_fs_none", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_rcparam[png]", "lib/matplotlib/tests/test_axes.py::test_specgram_origin_kwarg", "lib/matplotlib/tests/test_axes.py::test_psd_csd[png]", "lib/matplotlib/tests/test_axes.py::test_spectrum[png]", "lib/matplotlib/tests/test_axes.py::test_psd_csd_edge_cases", "lib/matplotlib/tests/test_axes.py::test_twin_remove[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines[png]", "lib/matplotlib/tests/test_axes.py::test_twin_spines_on_top[png]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[both-True-True]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[major-True-False]", "lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor[minor-False-True]", "lib/matplotlib/tests/test_axes.py::test_grid", "lib/matplotlib/tests/test_axes.py::test_reset_grid", "lib/matplotlib/tests/test_axes.py::test_reset_ticks[png]", "lib/matplotlib/tests/test_axes.py::test_vline_limit", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvline-axhline-args0]", "lib/matplotlib/tests/test_axes.py::test_axline_minmax[axvspan-axhspan-args1]", "lib/matplotlib/tests/test_axes.py::test_empty_shared_subplots", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_1", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_2", "lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_3", "lib/matplotlib/tests/test_axes.py::test_shared_aspect_error", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args0-kwargs0-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_errors[ValueError-args1-kwargs1-Unrecognized", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args2-kwargs2-The", "lib/matplotlib/tests/test_axes.py::test_axis_errors[TypeError-args3-kwargs3-axis\\\\(\\\\)", "lib/matplotlib/tests/test_axes.py::test_axis_method_errors", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[x]", "lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[y]", "lib/matplotlib/tests/test_axes.py::test_relim_visible_only", "lib/matplotlib/tests/test_axes.py::test_text_labelsize", "lib/matplotlib/tests/test_axes.py::test_pie_default[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_0[png]", "lib/matplotlib/tests/test_axes.py::test_pie_center_radius[png]", "lib/matplotlib/tests/test_axes.py::test_pie_linewidth_2[png]", "lib/matplotlib/tests/test_axes.py::test_pie_ccw_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_frame_grid[png]", "lib/matplotlib/tests/test_axes.py::test_pie_rotatelabels_true[png]", "lib/matplotlib/tests/test_axes.py::test_pie_nolabel_but_legend[png]", "lib/matplotlib/tests/test_axes.py::test_pie_shadow[png]", "lib/matplotlib/tests/test_axes.py::test_pie_textprops", "lib/matplotlib/tests/test_axes.py::test_pie_get_negative_values", "lib/matplotlib/tests/test_axes.py::test_normalize_kwarg_pie", "lib/matplotlib/tests/test_axes.py::test_pie_hatch_single[png]", "lib/matplotlib/tests/test_axes.py::test_pie_hatch_single[pdf]", "lib/matplotlib/tests/test_axes.py::test_pie_hatch_multi[png]", "lib/matplotlib/tests/test_axes.py::test_pie_hatch_multi[pdf]", "lib/matplotlib/tests/test_axes.py::test_set_get_ticklabels[png]", "lib/matplotlib/tests/test_axes.py::test_set_ticks_kwargs_raise_error_without_labels", "lib/matplotlib/tests/test_axes.py::test_set_ticks_with_labels[png]", "lib/matplotlib/tests/test_axes.py::test_xticks_bad_args", "lib/matplotlib/tests/test_axes.py::test_subsampled_ticklabels", "lib/matplotlib/tests/test_axes.py::test_mismatched_ticklabels", "lib/matplotlib/tests/test_axes.py::test_empty_ticks_fixed_loc", "lib/matplotlib/tests/test_axes.py::test_retain_tick_visibility[png]", "lib/matplotlib/tests/test_axes.py::test_tick_label_update", "lib/matplotlib/tests/test_axes.py::test_o_marker_path_snap[png]", "lib/matplotlib/tests/test_axes.py::test_margins", "lib/matplotlib/tests/test_axes.py::test_set_margin_updates_limits", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args0-kwargs0-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args1-kwargs1-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args2-kwargs2-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[ValueError-args3-kwargs3-margin", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args4-kwargs4-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args5-kwargs5-Cannot", "lib/matplotlib/tests/test_axes.py::test_margins_errors[TypeError-args6-kwargs6-Must", "lib/matplotlib/tests/test_axes.py::test_length_one_hist", "lib/matplotlib/tests/test_axes.py::test_set_xy_bound", "lib/matplotlib/tests/test_axes.py::test_pathological_hexbin", "lib/matplotlib/tests/test_axes.py::test_color_None", "lib/matplotlib/tests/test_axes.py::test_color_alias", "lib/matplotlib/tests/test_axes.py::test_numerical_hist_label", "lib/matplotlib/tests/test_axes.py::test_unicode_hist_label", "lib/matplotlib/tests/test_axes.py::test_move_offsetlabel", "lib/matplotlib/tests/test_axes.py::test_rc_spines[png]", "lib/matplotlib/tests/test_axes.py::test_rc_grid[png]", "lib/matplotlib/tests/test_axes.py::test_rc_tick", "lib/matplotlib/tests/test_axes.py::test_rc_major_minor_tick", "lib/matplotlib/tests/test_axes.py::test_square_plot", "lib/matplotlib/tests/test_axes.py::test_bad_plot_args", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy0-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy1-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy2-AxesImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy3-PcolorImage]", "lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy4-QuadMesh]", "lib/matplotlib/tests/test_axes.py::test_shared_scale", "lib/matplotlib/tests/test_axes.py::test_shared_bool", "lib/matplotlib/tests/test_axes.py::test_violin_point_mass", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs0]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs1]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs2]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs3]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs4]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs5]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs6]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs7]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs8]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs9]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs10]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs11]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs12]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs13]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs14]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs15]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs16]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs17]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs18]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs19]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs20]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs21]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs22]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs23]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs24]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs25]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs26]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs27]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs28]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs29]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs30]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs31]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs32]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs33]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs34]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs35]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs36]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs37]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs38]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs39]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs40]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs41]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs42]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs43]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs44]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs45]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs46]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs47]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs48]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs49]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs50]", "lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs51]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[png]", "lib/matplotlib/tests/test_axes.py::test_dash_offset[pdf]", "lib/matplotlib/tests/test_axes.py::test_title_pad", "lib/matplotlib/tests/test_axes.py::test_title_location_roundtrip", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[True]", "lib/matplotlib/tests/test_axes.py::test_title_location_shared[False]", "lib/matplotlib/tests/test_axes.py::test_loglog[png]", "lib/matplotlib/tests/test_axes.py::test_loglog_nonpos[png]", "lib/matplotlib/tests/test_axes.py::test_axes_margins", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-x]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-y]", "lib/matplotlib/tests/test_axes.py::test_remove_shared_axes_relim", "lib/matplotlib/tests/test_axes.py::test_shared_axes_autoscale", "lib/matplotlib/tests/test_axes.py::test_adjust_numtick_aspect", "lib/matplotlib/tests/test_axes.py::test_auto_numticks", "lib/matplotlib/tests/test_axes.py::test_auto_numticks_log", "lib/matplotlib/tests/test_axes.py::test_broken_barh_empty", "lib/matplotlib/tests/test_axes.py::test_broken_barh_timedelta", "lib/matplotlib/tests/test_axes.py::test_pandas_pcolormesh", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_dates", "lib/matplotlib/tests/test_axes.py::test_pandas_errorbar_indexing", "lib/matplotlib/tests/test_axes.py::test_pandas_index_shape", "lib/matplotlib/tests/test_axes.py::test_pandas_indexing_hist", "lib/matplotlib/tests/test_axes.py::test_pandas_bar_align_center", "lib/matplotlib/tests/test_axes.py::test_axis_get_tick_params", "lib/matplotlib/tests/test_axes.py::test_axis_set_tick_params_labelsize_labelcolor", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_gridlines", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_ylabelside", "lib/matplotlib/tests/test_axes.py::test_axes_tick_params_xlabelside", "lib/matplotlib/tests/test_axes.py::test_none_kwargs", "lib/matplotlib/tests/test_axes.py::test_bar_uint8", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_y[png]", "lib/matplotlib/tests/test_axes.py::test_date_timezone_x_and_y[png]", "lib/matplotlib/tests/test_axes.py::test_axisbelow[png]", "lib/matplotlib/tests/test_axes.py::test_titletwiny", "lib/matplotlib/tests/test_axes.py::test_titlesetpos", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top", "lib/matplotlib/tests/test_axes.py::test_title_xticks_top_both", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[left", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[center", "lib/matplotlib/tests/test_axes.py::test_title_above_offset[both", "lib/matplotlib/tests/test_axes.py::test_title_no_move_off_page", "lib/matplotlib/tests/test_axes.py::test_offset_label_color", "lib/matplotlib/tests/test_axes.py::test_offset_text_visible", "lib/matplotlib/tests/test_axes.py::test_large_offset", "lib/matplotlib/tests/test_axes.py::test_barb_units", "lib/matplotlib/tests/test_axes.py::test_quiver_units", "lib/matplotlib/tests/test_axes.py::test_bar_color_cycle", "lib/matplotlib/tests/test_axes.py::test_tick_param_label_rotation", "lib/matplotlib/tests/test_axes.py::test_fillbetween_cycle", "lib/matplotlib/tests/test_axes.py::test_log_margins", "lib/matplotlib/tests/test_axes.py::test_color_length_mismatch", "lib/matplotlib/tests/test_axes.py::test_eventplot_legend", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args0-kwargs0-lineoffsets", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args1-kwargs1-linelengths", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args2-kwargs2-linewidths", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args3-kwargs3-linestyles", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args4-kwargs4-alpha", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args5-kwargs5-positions", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args6-kwargs6-lineoffsets", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args7-kwargs7-linelengths", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args8-kwargs8-linewidths", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args9-kwargs9-linestyles", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args10-kwargs10-alpha", "lib/matplotlib/tests/test_axes.py::test_eventplot_errors[ValueError-args11-kwargs11-colors", "lib/matplotlib/tests/test_axes.py::test_bar_broadcast_args", "lib/matplotlib/tests/test_axes.py::test_invalid_axis_limits", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-log]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-symlog]", "lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-log]", "lib/matplotlib/tests/test_axes.py::test_twinx_knows_limits", "lib/matplotlib/tests/test_axes.py::test_zero_linewidth", "lib/matplotlib/tests/test_axes.py::test_empty_errorbar_legend", "lib/matplotlib/tests/test_axes.py::test_plot_decimal[png]", "lib/matplotlib/tests/test_axes.py::test_markerfacecolor_none_alpha[png]", "lib/matplotlib/tests/test_axes.py::test_tick_padding_tightbbox", "lib/matplotlib/tests/test_axes.py::test_inset", "lib/matplotlib/tests/test_axes.py::test_zoom_inset", "lib/matplotlib/tests/test_axes.py::test_inset_polar[png]", "lib/matplotlib/tests/test_axes.py::test_inset_projection", "lib/matplotlib/tests/test_axes.py::test_inset_subclass", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[False-True]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-False]", "lib/matplotlib/tests/test_axes.py::test_indicate_inset_inverted[True-True]", "lib/matplotlib/tests/test_axes.py::test_set_position", "lib/matplotlib/tests/test_axes.py::test_spines_properbbox_after_zoom", "lib/matplotlib/tests/test_axes.py::test_limits_after_scroll_zoom", "lib/matplotlib/tests/test_axes.py::test_gettightbbox_ignore_nan", "lib/matplotlib/tests/test_axes.py::test_scatter_series_non_zero_index", "lib/matplotlib/tests/test_axes.py::test_scatter_empty_data", "lib/matplotlib/tests/test_axes.py::test_annotate_across_transforms[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_xy[png]", "lib/matplotlib/tests/test_axes.py::test_secondary_fail", "lib/matplotlib/tests/test_axes.py::test_secondary_resize", "lib/matplotlib/tests/test_axes.py::test_secondary_minorloc", "lib/matplotlib/tests/test_axes.py::test_secondary_formatter", "lib/matplotlib/tests/test_axes.py::test_secondary_repr", "lib/matplotlib/tests/test_axes.py::test_axis_options[png]", "lib/matplotlib/tests/test_axes.py::test_normal_axes", "lib/matplotlib/tests/test_axes.py::test_nodecorator", "lib/matplotlib/tests/test_axes.py::test_displaced_spine", "lib/matplotlib/tests/test_axes.py::test_tickdirs", "lib/matplotlib/tests/test_axes.py::test_minor_accountedfor", "lib/matplotlib/tests/test_axes.py::test_axis_bool_arguments[png]", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg", "lib/matplotlib/tests/test_axes.py::test_axis_extent_arg2", "lib/matplotlib/tests/test_axes.py::test_hist_auto_bins", "lib/matplotlib/tests/test_axes.py::test_hist_nan_data", "lib/matplotlib/tests/test_axes.py::test_hist_range_and_density", "lib/matplotlib/tests/test_axes.py::test_bar_errbar_zorder", "lib/matplotlib/tests/test_axes.py::test_set_ticks_inverted", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_box", "lib/matplotlib/tests/test_axes.py::test_aspect_nonlinear_adjustable_datalim", "lib/matplotlib/tests/test_axes.py::test_box_aspect", "lib/matplotlib/tests/test_axes.py::test_box_aspect_custom_position", "lib/matplotlib/tests/test_axes.py::test_bbox_aspect_axes_init", "lib/matplotlib/tests/test_axes.py::test_set_aspect_negative", "lib/matplotlib/tests/test_axes.py::test_redraw_in_frame", "lib/matplotlib/tests/test_axes.py::test_invisible_axes_events", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_markercolor", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[True-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[False-y]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-x]", "lib/matplotlib/tests/test_axes.py::test_unautoscale[None-y]", "lib/matplotlib/tests/test_axes.py::test_polar_interpolation_steps_variable_r[png]", "lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_sticky", "lib/matplotlib/tests/test_axes.py::test_xtickcolor_is_not_xticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_ytickcolor_is_not_yticklabelcolor", "lib/matplotlib/tests/test_axes.py::test_xaxis_offsetText_color", "lib/matplotlib/tests/test_axes.py::test_yaxis_offsetText_color", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[small]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[medium]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[x-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[xx-large]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[larger]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[smaller]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[8]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[10]", "lib/matplotlib/tests/test_axes.py::test_relative_ticklabel_sizes[12]", "lib/matplotlib/tests/test_axes.py::test_multiplot_autoscale", "lib/matplotlib/tests/test_axes.py::test_sharing_does_not_link_positions", "lib/matplotlib/tests/test_axes.py::test_2dcolor_plot[pdf]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_clear[png]", "lib/matplotlib/tests/test_axes.py::test_shared_axes_retick", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[left]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[center]", "lib/matplotlib/tests/test_axes.py::test_ylabel_ha_with_position[right]", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_vertical_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_yinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_horizontal_xyinverted", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_center", "lib/matplotlib/tests/test_axes.py::test_centered_bar_label_label_beyond_limits", "lib/matplotlib/tests/test_axes.py::test_bar_label_location_errorbars", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[%.2f]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[{:.2f}]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt[format]", "lib/matplotlib/tests/test_axes.py::test_bar_label_fmt_error", "lib/matplotlib/tests/test_axes.py::test_bar_label_labels", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata", "lib/matplotlib/tests/test_axes.py::test_bar_label_nan_ydata_inverted", "lib/matplotlib/tests/test_axes.py::test_nan_barlabels", "lib/matplotlib/tests/test_axes.py::test_patch_bounds", "lib/matplotlib/tests/test_axes.py::test_warn_ignored_scatter_kwargs", "lib/matplotlib/tests/test_axes.py::test_artist_sublists", "lib/matplotlib/tests/test_axes.py::test_empty_line_plots", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[None-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-f-'f'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-o+-'o\\\\+'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:--':-'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-rk-'rk'", "lib/matplotlib/tests/test_axes.py::test_plot_format_errors[data1-:o-r-':o-r'", "lib/matplotlib/tests/test_axes.py::test_plot_format", "lib/matplotlib/tests/test_axes.py::test_automatic_legend", "lib/matplotlib/tests/test_axes.py::test_plot_errors", "lib/matplotlib/tests/test_axes.py::test_clim", "lib/matplotlib/tests/test_axes.py::test_bezier_autoscale", "lib/matplotlib/tests/test_axes.py::test_small_autoscale", "lib/matplotlib/tests/test_axes.py::test_get_xticklabel", "lib/matplotlib/tests/test_axes.py::test_bar_leading_nan", "lib/matplotlib/tests/test_axes.py::test_bar_all_nan[png]", "lib/matplotlib/tests/test_axes.py::test_extent_units[png]", "lib/matplotlib/tests/test_axes.py::test_cla_clears_children_axes_and_fig", "lib/matplotlib/tests/test_axes.py::test_scatter_color_repr_error", "lib/matplotlib/tests/test_axes.py::test_zorder_and_explicit_rasterization", "lib/matplotlib/tests/test_axes.py::test_preset_clip_paths[png]", "lib/matplotlib/tests/test_axes.py::test_rc_axes_label_formatting", "lib/matplotlib/tests/test_axes.py::test_ecdf[png]", "lib/matplotlib/tests/test_axes.py::test_ecdf_invalid", "lib/matplotlib/tests/test_axes.py::test_fill_between_axes_limits", "lib/matplotlib/tests/test_axes.py::test_tick_param_labelfont", "lib/matplotlib/tests/test_axes.py::test_set_secondary_axis_color"]}
{"instance_id": "matplotlib__matplotlib-26020", "tests_passing_in_original_repo": ["lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_divider_append_axes", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_twin_axes_empty_and_removed[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_axesgrid_colorbar_log_smoketest", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_inset_colorbar_tight_layout_smoketest", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_inset_locator[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_inset_axes[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_inset_axes_complete", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_fill_facecolor[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_zooming_with_inverted_axes[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_anchored_direction_arrows[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_anchored_direction_arrows_many_args[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_axes_locatable_position", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_image_grid_each_left_label_mode_all[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_image_grid_single_bottom[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_image_grid_label_mode_deprecation_warning", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_image_grid[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_gettightbbox", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[gca-gca-big]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[gca-gca-small]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[host-host-big]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[host-host-small]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[host-parasite-big]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[host-parasite-small]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[parasite-host-big]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[parasite-host-small]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[parasite-parasite-big]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_picking_callbacks_overlap[parasite-parasite-small]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_anchored_artists[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_hbox_divider", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_vbox_divider", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_axes_class_tuple", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_grid_axes_lists", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_grid_axes_position[row]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_grid_axes_position[column]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_grid_errors[rect0-None-TypeError-Incorrect", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_grid_errors[111--1-ValueError-ngrids", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_grid_errors[111-7-ValueError-ngrids", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_divider_errors[None-TypeError-anchor", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_divider_errors[CC-ValueError-'CC'", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_divider_errors[anchor2-TypeError-anchor", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_mark_inset_unstales_viewlim[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_auto_adjustable", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_rgb_axes[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_insetposition[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_imagegrid_cbar_mode_edge[png]", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_imagegrid", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_removal", "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py::test_anchored_locator_base_call[png]"]}
{"instance_id": "mwaskom__seaborn-2848", "tests_passing_in_original_repo": ["tests/test_relational.py::TestRelationalPlotter::test_wide_df_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_df_with_nonnumeric_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_array_variables", "tests/test_relational.py::TestRelationalPlotter::test_flat_array_variables", "tests/test_relational.py::TestRelationalPlotter::test_flat_list_variables", "tests/test_relational.py::TestRelationalPlotter::test_flat_series_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_list_of_series_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_list_of_arrays_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_list_of_list_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_dict_of_series_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_dict_of_arrays_variables", "tests/test_relational.py::TestRelationalPlotter::test_wide_dict_of_lists_variables", "tests/test_relational.py::TestRelationalPlotter::test_relplot_complex", "tests/test_relational.py::TestRelationalPlotter::test_relplot_vectors[series]", "tests/test_relational.py::TestRelationalPlotter::test_relplot_vectors[numpy]", "tests/test_relational.py::TestRelationalPlotter::test_relplot_vectors[list]", "tests/test_relational.py::TestRelationalPlotter::test_relplot_wide", "tests/test_relational.py::TestRelationalPlotter::test_relplot_hues", "tests/test_relational.py::TestRelationalPlotter::test_relplot_sizes", "tests/test_relational.py::TestRelationalPlotter::test_relplot_styles", "tests/test_relational.py::TestRelationalPlotter::test_relplot_stringy_numerics", "tests/test_relational.py::TestRelationalPlotter::test_relplot_data", "tests/test_relational.py::TestRelationalPlotter::test_facet_variable_collision", "tests/test_relational.py::TestRelationalPlotter::test_ax_kwarg_removal", "tests/test_relational.py::TestLinePlotter::test_legend_data", "tests/test_relational.py::TestLinePlotter::test_plot", "tests/test_relational.py::TestLinePlotter::test_axis_labels", "tests/test_relational.py::TestScatterPlotter::test_color", "tests/test_relational.py::TestScatterPlotter::test_legend_data", "tests/test_relational.py::TestScatterPlotter::test_plot", "tests/test_relational.py::TestScatterPlotter::test_axis_labels", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_axes", "tests/test_relational.py::TestScatterPlotter::test_literal_attribute_vectors", "tests/test_relational.py::TestScatterPlotter::test_supplied_color_array", "tests/test_relational.py::TestScatterPlotter::test_linewidths", "tests/test_relational.py::TestScatterPlotter::test_size_norm_extrapolation", "tests/test_relational.py::TestScatterPlotter::test_datetime_scale", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics0]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics1]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics2]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics3]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics4]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics5]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics6]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics7]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics8]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics9]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics10]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics11]", "tests/test_relational.py::TestScatterPlotter::test_scatterplot_smoke"]}
{"instance_id": "mwaskom__seaborn-3010", "tests_passing_in_original_repo": ["tests/_stats/test_regression.py::TestPolyFit::test_no_grouper", "tests/_stats/test_regression.py::TestPolyFit::test_one_grouper"]}
{"instance_id": "mwaskom__seaborn-3190", "tests_passing_in_original_repo": ["tests/_core/test_scales.py::TestContinuous::test_coordinate_defaults", "tests/_core/test_scales.py::TestContinuous::test_coordinate_transform", "tests/_core/test_scales.py::TestContinuous::test_coordinate_transform_with_parameter", "tests/_core/test_scales.py::TestContinuous::test_coordinate_transform_error", "tests/_core/test_scales.py::TestContinuous::test_interval_defaults", "tests/_core/test_scales.py::TestContinuous::test_interval_with_range", "tests/_core/test_scales.py::TestContinuous::test_interval_with_norm", "tests/_core/test_scales.py::TestContinuous::test_interval_with_range_norm_and_transform", "tests/_core/test_scales.py::TestContinuous::test_color_defaults", "tests/_core/test_scales.py::TestContinuous::test_color_named_values", "tests/_core/test_scales.py::TestContinuous::test_color_tuple_values", "tests/_core/test_scales.py::TestContinuous::test_color_callable_values", "tests/_core/test_scales.py::TestContinuous::test_color_with_norm", "tests/_core/test_scales.py::TestContinuous::test_color_with_transform", "tests/_core/test_scales.py::TestContinuous::test_tick_locator", "tests/_core/test_scales.py::TestContinuous::test_tick_locator_input_check", "tests/_core/test_scales.py::TestContinuous::test_tick_upto", "tests/_core/test_scales.py::TestContinuous::test_tick_every", "tests/_core/test_scales.py::TestContinuous::test_tick_every_between", "tests/_core/test_scales.py::TestContinuous::test_tick_at", "tests/_core/test_scales.py::TestContinuous::test_tick_count", "tests/_core/test_scales.py::TestContinuous::test_tick_count_between", "tests/_core/test_scales.py::TestContinuous::test_tick_minor", "tests/_core/test_scales.py::TestContinuous::test_log_tick_default", "tests/_core/test_scales.py::TestContinuous::test_log_tick_upto", "tests/_core/test_scales.py::TestContinuous::test_log_tick_count", "tests/_core/test_scales.py::TestContinuous::test_log_tick_format_disabled", "tests/_core/test_scales.py::TestContinuous::test_log_tick_every", "tests/_core/test_scales.py::TestContinuous::test_symlog_tick_default", "tests/_core/test_scales.py::TestContinuous::test_label_formatter", "tests/_core/test_scales.py::TestContinuous::test_label_like_pattern", "tests/_core/test_scales.py::TestContinuous::test_label_like_string", "tests/_core/test_scales.py::TestContinuous::test_label_like_function", "tests/_core/test_scales.py::TestContinuous::test_label_base", "tests/_core/test_scales.py::TestContinuous::test_label_unit", "tests/_core/test_scales.py::TestContinuous::test_label_unit_with_sep", "tests/_core/test_scales.py::TestContinuous::test_label_empty_unit", "tests/_core/test_scales.py::TestContinuous::test_label_base_from_transform", "tests/_core/test_scales.py::TestContinuous::test_label_type_checks", "tests/_core/test_scales.py::TestNominal::test_coordinate_defaults", "tests/_core/test_scales.py::TestNominal::test_coordinate_with_order", "tests/_core/test_scales.py::TestNominal::test_coordinate_with_subset_order", "tests/_core/test_scales.py::TestNominal::test_coordinate_axis", "tests/_core/test_scales.py::TestNominal::test_coordinate_axis_with_order", "tests/_core/test_scales.py::TestNominal::test_coordinate_axis_with_subset_order", "tests/_core/test_scales.py::TestNominal::test_coordinate_axis_with_category_dtype", "tests/_core/test_scales.py::TestNominal::test_coordinate_numeric_data", "tests/_core/test_scales.py::TestNominal::test_coordinate_numeric_data_with_order", "tests/_core/test_scales.py::TestNominal::test_color_defaults", "tests/_core/test_scales.py::TestNominal::test_color_named_palette", "tests/_core/test_scales.py::TestNominal::test_color_list_palette", "tests/_core/test_scales.py::TestNominal::test_color_dict_palette", "tests/_core/test_scales.py::TestNominal::test_color_numeric_data", "tests/_core/test_scales.py::TestNominal::test_color_numeric_with_order_subset", "tests/_core/test_scales.py::TestNominal::test_color_alpha_in_palette", "tests/_core/test_scales.py::TestNominal::test_color_unknown_palette", "tests/_core/test_scales.py::TestNominal::test_object_defaults", "tests/_core/test_scales.py::TestNominal::test_object_list", "tests/_core/test_scales.py::TestNominal::test_object_dict", "tests/_core/test_scales.py::TestNominal::test_object_order", "tests/_core/test_scales.py::TestNominal::test_object_order_subset", "tests/_core/test_scales.py::TestNominal::test_objects_that_are_weird", "tests/_core/test_scales.py::TestNominal::test_alpha_default", "tests/_core/test_scales.py::TestNominal::test_fill", "tests/_core/test_scales.py::TestNominal::test_fill_dict", "tests/_core/test_scales.py::TestNominal::test_fill_nunique_warning", "tests/_core/test_scales.py::TestNominal::test_interval_defaults", "tests/_core/test_scales.py::TestNominal::test_interval_tuple", "tests/_core/test_scales.py::TestNominal::test_interval_tuple_numeric", "tests/_core/test_scales.py::TestNominal::test_interval_list", "tests/_core/test_scales.py::TestNominal::test_interval_dict", "tests/_core/test_scales.py::TestNominal::test_interval_with_transform", "tests/_core/test_scales.py::TestNominal::test_empty_data", "tests/_core/test_scales.py::TestTemporal::test_coordinate_defaults", "tests/_core/test_scales.py::TestTemporal::test_interval_defaults", "tests/_core/test_scales.py::TestTemporal::test_interval_with_range", "tests/_core/test_scales.py::TestTemporal::test_interval_with_norm", "tests/_core/test_scales.py::TestTemporal::test_color_defaults", "tests/_core/test_scales.py::TestTemporal::test_color_named_values", "tests/_core/test_scales.py::TestTemporal::test_coordinate_axis", "tests/_core/test_scales.py::TestTemporal::test_tick_locator", "tests/_core/test_scales.py::TestTemporal::test_tick_upto", "tests/_core/test_scales.py::TestTemporal::test_label_formatter", "tests/_core/test_scales.py::TestTemporal::test_label_concise"]}
{"instance_id": "mwaskom__seaborn-3407", "tests_passing_in_original_repo": ["tests/test_axisgrid.py::TestFacetGrid::test_self_data", "tests/test_axisgrid.py::TestFacetGrid::test_self_figure", "tests/test_axisgrid.py::TestFacetGrid::test_self_axes", "tests/test_axisgrid.py::TestFacetGrid::test_axes_array_size", "tests/test_axisgrid.py::TestFacetGrid::test_single_axes", "tests/test_axisgrid.py::TestFacetGrid::test_col_wrap", "tests/test_axisgrid.py::TestFacetGrid::test_normal_axes", "tests/test_axisgrid.py::TestFacetGrid::test_wrapped_axes", "tests/test_axisgrid.py::TestFacetGrid::test_axes_dict", "tests/test_axisgrid.py::TestFacetGrid::test_figure_size", "tests/test_axisgrid.py::TestFacetGrid::test_figure_size_with_legend", "tests/test_axisgrid.py::TestFacetGrid::test_legend_data", "tests/test_axisgrid.py::TestFacetGrid::test_legend_data_missing_level", "tests/test_axisgrid.py::TestFacetGrid::test_get_boolean_legend_data", "tests/test_axisgrid.py::TestFacetGrid::test_legend_tuples", "tests/test_axisgrid.py::TestFacetGrid::test_legend_options", "tests/test_axisgrid.py::TestFacetGrid::test_legendout_with_colwrap", "tests/test_axisgrid.py::TestFacetGrid::test_legend_tight_layout", "tests/test_axisgrid.py::TestFacetGrid::test_subplot_kws", "tests/test_axisgrid.py::TestFacetGrid::test_gridspec_kws", "tests/test_axisgrid.py::TestFacetGrid::test_gridspec_kws_col_wrap", "tests/test_axisgrid.py::TestFacetGrid::test_data_generator", "tests/test_axisgrid.py::TestFacetGrid::test_map", "tests/test_axisgrid.py::TestFacetGrid::test_map_dataframe", "tests/test_axisgrid.py::TestFacetGrid::test_set", "tests/test_axisgrid.py::TestFacetGrid::test_set_titles", "tests/test_axisgrid.py::TestFacetGrid::test_set_titles_margin_titles", "tests/test_axisgrid.py::TestFacetGrid::test_set_ticklabels", "tests/test_axisgrid.py::TestFacetGrid::test_set_axis_labels", "tests/test_axisgrid.py::TestFacetGrid::test_axis_lims", "tests/test_axisgrid.py::TestFacetGrid::test_data_orders", "tests/test_axisgrid.py::TestFacetGrid::test_palette", "tests/test_axisgrid.py::TestFacetGrid::test_hue_kws", "tests/test_axisgrid.py::TestFacetGrid::test_dropna", "tests/test_axisgrid.py::TestFacetGrid::test_categorical_column_missing_categories", "tests/test_axisgrid.py::TestFacetGrid::test_categorical_warning", "tests/test_axisgrid.py::TestFacetGrid::test_refline", "tests/test_axisgrid.py::TestFacetGrid::test_apply", "tests/test_axisgrid.py::TestFacetGrid::test_pipe", "tests/test_axisgrid.py::TestFacetGrid::test_tick_params", "tests/test_axisgrid.py::TestPairGrid::test_self_data", "tests/test_axisgrid.py::TestPairGrid::test_ignore_datelike_data", "tests/test_axisgrid.py::TestPairGrid::test_self_figure", "tests/test_axisgrid.py::TestPairGrid::test_self_axes", "tests/test_axisgrid.py::TestPairGrid::test_default_axes", "tests/test_axisgrid.py::TestPairGrid::test_specific_square_axes[vars0]", "tests/test_axisgrid.py::TestPairGrid::test_specific_square_axes[vars1]", "tests/test_axisgrid.py::TestPairGrid::test_remove_hue_from_default", "tests/test_axisgrid.py::TestPairGrid::test_specific_nonsquare_axes[x_vars0-y_vars0]", "tests/test_axisgrid.py::TestPairGrid::test_specific_nonsquare_axes[x_vars1-z]", "tests/test_axisgrid.py::TestPairGrid::test_specific_nonsquare_axes[x_vars2-y_vars2]", "tests/test_axisgrid.py::TestPairGrid::test_corner", "tests/test_axisgrid.py::TestPairGrid::test_size", "tests/test_axisgrid.py::TestPairGrid::test_empty_grid", "tests/test_axisgrid.py::TestPairGrid::test_map", "tests/test_axisgrid.py::TestPairGrid::test_map_nonsquare", "tests/test_axisgrid.py::TestPairGrid::test_map_lower", "tests/test_axisgrid.py::TestPairGrid::test_map_upper", "tests/test_axisgrid.py::TestPairGrid::test_map_mixed_funcsig", "tests/test_axisgrid.py::TestPairGrid::test_map_diag", "tests/test_axisgrid.py::TestPairGrid::test_map_diag_rectangular", "tests/test_axisgrid.py::TestPairGrid::test_map_diag_color", "tests/test_axisgrid.py::TestPairGrid::test_map_diag_palette", "tests/test_axisgrid.py::TestPairGrid::test_map_diag_and_offdiag", "tests/test_axisgrid.py::TestPairGrid::test_diag_sharey", "tests/test_axisgrid.py::TestPairGrid::test_map_diag_matplotlib", "tests/test_axisgrid.py::TestPairGrid::test_palette", "tests/test_axisgrid.py::TestPairGrid::test_hue_kws", "tests/test_axisgrid.py::TestPairGrid::test_hue_order", "tests/test_axisgrid.py::TestPairGrid::test_hue_order_missing_level", "tests/test_axisgrid.py::TestPairGrid::test_hue_in_map", "tests/test_axisgrid.py::TestPairGrid::test_nondefault_index", "tests/test_axisgrid.py::TestPairGrid::test_dropna[scatterplot]", "tests/test_axisgrid.py::TestPairGrid::test_dropna[scatter]", "tests/test_axisgrid.py::TestPairGrid::test_histplot_legend", "tests/test_axisgrid.py::TestPairGrid::test_pairplot", "tests/test_axisgrid.py::TestPairGrid::test_pairplot_reg", "tests/test_axisgrid.py::TestPairGrid::test_pairplot_reg_hue", "tests/test_axisgrid.py::TestPairGrid::test_pairplot_diag_kde", "tests/test_axisgrid.py::TestPairGrid::test_pairplot_kde", "tests/test_axisgrid.py::TestPairGrid::test_pairplot_hist", "tests/test_axisgrid.py::TestPairGrid::test_pairplot_markers", "tests/test_axisgrid.py::TestPairGrid::test_corner_despine", "tests/test_axisgrid.py::TestPairGrid::test_corner_set", "tests/test_axisgrid.py::TestPairGrid::test_legend", "tests/test_axisgrid.py::TestPairGrid::test_tick_params", "tests/test_axisgrid.py::TestJointGrid::test_margin_grid_from_lists", "tests/test_axisgrid.py::TestJointGrid::test_margin_grid_from_arrays", "tests/test_axisgrid.py::TestJointGrid::test_margin_grid_from_series", "tests/test_axisgrid.py::TestJointGrid::test_margin_grid_from_dataframe", "tests/test_axisgrid.py::TestJointGrid::test_margin_grid_from_dataframe_bad_variable", "tests/test_axisgrid.py::TestJointGrid::test_margin_grid_axis_labels", "tests/test_axisgrid.py::TestJointGrid::test_dropna", "tests/test_axisgrid.py::TestJointGrid::test_axlims", "tests/test_axisgrid.py::TestJointGrid::test_marginal_ticks", "tests/test_axisgrid.py::TestJointGrid::test_bivariate_plot", "tests/test_axisgrid.py::TestJointGrid::test_univariate_plot", "tests/test_axisgrid.py::TestJointGrid::test_univariate_plot_distplot", "tests/test_axisgrid.py::TestJointGrid::test_univariate_plot_matplotlib", "tests/test_axisgrid.py::TestJointGrid::test_plot", "tests/test_axisgrid.py::TestJointGrid::test_space", "tests/test_axisgrid.py::TestJointGrid::test_hue[True]", "tests/test_axisgrid.py::TestJointGrid::test_hue[False]", "tests/test_axisgrid.py::TestJointGrid::test_refline", "tests/test_axisgrid.py::TestJointPlot::test_scatter", "tests/test_axisgrid.py::TestJointPlot::test_scatter_hue", "tests/test_axisgrid.py::TestJointPlot::test_reg", "tests/test_axisgrid.py::TestJointPlot::test_resid", "tests/test_axisgrid.py::TestJointPlot::test_hist", "tests/test_axisgrid.py::TestJointPlot::test_hex", "tests/test_axisgrid.py::TestJointPlot::test_kde", "tests/test_axisgrid.py::TestJointPlot::test_kde_hue", "tests/test_axisgrid.py::TestJointPlot::test_color", "tests/test_axisgrid.py::TestJointPlot::test_palette", "tests/test_axisgrid.py::TestJointPlot::test_hex_customise", "tests/test_axisgrid.py::TestJointPlot::test_bad_kind", "tests/test_axisgrid.py::TestJointPlot::test_unsupported_hue_kind", "tests/test_axisgrid.py::TestJointPlot::test_leaky_dict", "tests/test_axisgrid.py::TestJointPlot::test_distplot_kwarg_warning", "tests/test_axisgrid.py::TestJointPlot::test_ax_warning"]}
{"instance_id": "pallets__flask-4045", "tests_passing_in_original_repo": ["tests/test_basic.py::test_method_route_no_methods", "tests/test_basic.py::test_disallow_string_for_allowed_methods", "tests/test_basic.py::test_error_handler_unknown_code", "tests/test_basic.py::test_request_locals", "tests/test_basic.py::test_exception_propagation", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-True-True-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-True-True-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-True-False-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-True-False-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-False-True-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-False-True-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-False-False-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[None-False-False-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-True-True-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-True-True-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-True-False-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-True-False-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-False-True-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-False-True-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-False-False-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[True-False-False-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-True-True-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-True-True-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-True-False-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-True-False-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-False-True-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-False-True-False]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-False-False-True]", "tests/test_basic.py::test_werkzeug_passthrough_errors[False-False-False-False]", "tests/test_basic.py::test_get_method_on_g", "tests/test_basic.py::test_g_iteration_protocol", "tests/test_basic.py::test_run_defaults", "tests/test_basic.py::test_run_server_port", "tests/test_basic.py::test_run_from_config[None-None-pocoo.org:8080-pocoo.org-8080]", "tests/test_basic.py::test_run_from_config[localhost-None-pocoo.org:8080-localhost-8080]", "tests/test_basic.py::test_run_from_config[None-80-pocoo.org:8080-pocoo.org-80]", "tests/test_basic.py::test_run_from_config[localhost-80-pocoo.org:8080-localhost-80]", "tests/test_basic.py::test_run_from_config[localhost-0-localhost:8080-localhost-0]", "tests/test_basic.py::test_run_from_config[None-None-localhost:8080-localhost-8080]", "tests/test_basic.py::test_run_from_config[None-None-localhost:0-localhost-0]", "tests/test_basic.py::test_app_freed_on_zero_refcount", "tests/test_blueprints.py::test_template_filter", "tests/test_blueprints.py::test_add_template_filter", "tests/test_blueprints.py::test_template_filter_with_name", "tests/test_blueprints.py::test_add_template_filter_with_name", "tests/test_blueprints.py::test_template_test", "tests/test_blueprints.py::test_add_template_test", "tests/test_blueprints.py::test_template_test_with_name", "tests/test_blueprints.py::test_add_template_test_with_name", "tests/test_blueprints.py::test_template_global"]}
{"instance_id": "pallets__flask-4992", "tests_passing_in_original_repo": ["tests/test_config.py::test_config_from_pyfile", "tests/test_config.py::test_config_from_object", "tests/test_config.py::test_config_from_file", "tests/test_config.py::test_from_prefixed_env", "tests/test_config.py::test_from_prefixed_env_custom_prefix", "tests/test_config.py::test_from_prefixed_env_nested", "tests/test_config.py::test_config_from_mapping", "tests/test_config.py::test_config_from_class", "tests/test_config.py::test_config_from_envvar", "tests/test_config.py::test_config_from_envvar_missing", "tests/test_config.py::test_config_missing", "tests/test_config.py::test_config_missing_file", "tests/test_config.py::test_custom_config_class", "tests/test_config.py::test_session_lifetime", "tests/test_config.py::test_get_namespace", "tests/test_config.py::test_from_pyfile_weird_encoding[utf-8]", "tests/test_config.py::test_from_pyfile_weird_encoding[iso-8859-15]", "tests/test_config.py::test_from_pyfile_weird_encoding[latin-1]"]}
{"instance_id": "pallets__flask-5063", "tests_passing_in_original_repo": ["tests/test_cli.py::test_cli_name", "tests/test_cli.py::test_find_best_app", "tests/test_cli.py::test_prepare_import[test-path0-test]", "tests/test_cli.py::test_prepare_import[test.py-path1-test]", "tests/test_cli.py::test_prepare_import[a/test-path2-test]", "tests/test_cli.py::test_prepare_import[test/__init__.py-path3-test]", "tests/test_cli.py::test_prepare_import[test/__init__-path4-test]", "tests/test_cli.py::test_prepare_import[value5-path5-cliapp.inner1]", "tests/test_cli.py::test_prepare_import[value6-path6-cliapp.inner1.inner2]", "tests/test_cli.py::test_prepare_import[test.a.b-path7-test.a.b]", "tests/test_cli.py::test_prepare_import[value8-path8-cliapp.app]", "tests/test_cli.py::test_prepare_import[value9-path9-cliapp.message.txt]", "tests/test_cli.py::test_locate_app[cliapp.app-None-testapp]", "tests/test_cli.py::test_locate_app[cliapp.app-testapp-testapp]", "tests/test_cli.py::test_locate_app[cliapp.factory-None-app]", "tests/test_cli.py::test_locate_app[cliapp.factory-create_app-app]", "tests/test_cli.py::test_locate_app[cliapp.factory-create_app()-app]", "tests/test_cli.py::test_locate_app[cliapp.factory-create_app2(\"foo\",", "tests/test_cli.py::test_locate_app[cliapp.factory-", "tests/test_cli.py::test_locate_app_raises[notanapp.py-None]", "tests/test_cli.py::test_locate_app_raises[cliapp/app-None]", "tests/test_cli.py::test_locate_app_raises[cliapp.app-notanapp]", "tests/test_cli.py::test_locate_app_raises[cliapp.factory-create_app2(\"foo\")]", "tests/test_cli.py::test_locate_app_raises[cliapp.factory-create_app(]", "tests/test_cli.py::test_locate_app_raises[cliapp.factory-no_app]", "tests/test_cli.py::test_locate_app_raises[cliapp.importerrorapp-None]", "tests/test_cli.py::test_locate_app_raises[cliapp.message.txt-None]", "tests/test_cli.py::test_locate_app_suppress_raise", "tests/test_cli.py::test_get_version", "tests/test_cli.py::test_scriptinfo", "tests/test_cli.py::test_app_cli_has_app_context", "tests/test_cli.py::test_with_appcontext", "tests/test_cli.py::test_appgroup_app_context", "tests/test_cli.py::test_flaskgroup_app_context", "tests/test_cli.py::test_flaskgroup_debug[True]", "tests/test_cli.py::test_flaskgroup_debug[False]", "tests/test_cli.py::test_flaskgroup_nested", "tests/test_cli.py::test_no_command_echo_loading_error", "tests/test_cli.py::test_help_echo_loading_error", "tests/test_cli.py::test_help_echo_exception", "tests/test_cli.py::TestRoutes::test_simple", "tests/test_cli.py::TestRoutes::test_sort", "tests/test_cli.py::TestRoutes::test_all_methods", "tests/test_cli.py::TestRoutes::test_no_routes", "tests/test_cli.py::test_load_dotenv", "tests/test_cli.py::test_dotenv_path", "tests/test_cli.py::test_dotenv_optional", "tests/test_cli.py::test_disable_dotenv_from_env", "tests/test_cli.py::test_run_cert_path", "tests/test_cli.py::test_run_cert_adhoc", "tests/test_cli.py::test_run_cert_import", "tests/test_cli.py::test_run_cert_no_ssl", "tests/test_cli.py::test_cli_blueprints", "tests/test_cli.py::test_cli_empty"]}
{"instance_id": "psf__requests-1963", "tests_passing_in_original_repo": ["test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES", "test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGEST_STREAM", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT", "test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA", "test_requests.py::RequestsTestCase::test_autoset_header_values_are_native", "test_requests.py::RequestsTestCase::test_basic_building", "test_requests.py::RequestsTestCase::test_basicauth_with_netrc", "test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files", "test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests", "test_requests.py::RequestsTestCase::test_cookie_as_dict_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keys", "test_requests.py::RequestsTestCase::test_cookie_as_dict_values", "test_requests.py::RequestsTestCase::test_cookie_parameters", "test_requests.py::RequestsTestCase::test_cookie_persists_via_api", "test_requests.py::RequestsTestCase::test_cookie_quote_wrapped", "test_requests.py::RequestsTestCase::test_cookie_removed_on_expire", "test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect", "test_requests.py::RequestsTestCase::test_custom_content_type", "test_requests.py::RequestsTestCase::test_decompress_gzip", "test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post", "test_requests.py::RequestsTestCase::test_entry_points", "test_requests.py::RequestsTestCase::test_fixes_1329", "test_requests.py::RequestsTestCase::test_generic_cookiejar_works", "test_requests.py::RequestsTestCase::test_get_auth_from_url", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars", "test_requests.py::RequestsTestCase::test_header_keys_are_native", "test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive", "test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent", "test_requests.py::RequestsTestCase::test_hook_receives_request_arguments", "test_requests.py::RequestsTestCase::test_http_error", "test_requests.py::RequestsTestCase::test_invalid_url", "test_requests.py::RequestsTestCase::test_links", "test_requests.py::RequestsTestCase::test_long_authinfo_in_url", "test_requests.py::RequestsTestCase::test_mixed_case_scheme_acceptable", "test_requests.py::RequestsTestCase::test_no_content_length", "test_requests.py::RequestsTestCase::test_oddball_schemes_dont_check_URLs", "test_requests.py::RequestsTestCase::test_param_cookiejar_works", "test_requests.py::RequestsTestCase::test_params_are_added_before_fragment", "test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive", "test_requests.py::RequestsTestCase::test_path_is_not_double_encoded", "test_requests.py::RequestsTestCase::test_prepared_from_session", "test_requests.py::RequestsTestCase::test_prepared_request_hook", "test_requests.py::RequestsTestCase::test_pyopenssl_redirect", "test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable", "test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie", "test_requests.py::RequestsTestCase::test_request_cookies_not_persisted", "test_requests.py::RequestsTestCase::test_request_ok_set", "test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden", "test_requests.py::RequestsTestCase::test_response_is_iterable", "test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks", "test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks", "test_requests.py::RequestsTestCase::test_session_pickling", "test_requests.py::RequestsTestCase::test_set_cookie_on_301", "test_requests.py::RequestsTestCase::test_status_raising", "test_requests.py::RequestsTestCase::test_time_elapsed_blank", "test_requests.py::RequestsTestCase::test_transport_adapter_ordering", "test_requests.py::RequestsTestCase::test_unicode_get", "test_requests.py::RequestsTestCase::test_unicode_header_name", "test_requests.py::RequestsTestCase::test_unicode_method_name", "test_requests.py::RequestsTestCase::test_unicode_multipart_post", "test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames", "test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect", "test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param", "test_requests.py::RequestsTestCase::test_user_agent_transfers", "test_requests.py::TestContentEncodingDetection::test_html4_pragma", "test_requests.py::TestContentEncodingDetection::test_html_charset", "test_requests.py::TestContentEncodingDetection::test_none", "test_requests.py::TestContentEncodingDetection::test_precedence", "test_requests.py::TestContentEncodingDetection::test_xhtml_pragma", "test_requests.py::TestContentEncodingDetection::test_xml", "test_requests.py::TestCaseInsensitiveDict::test_contains", "test_requests.py::TestCaseInsensitiveDict::test_delitem", "test_requests.py::TestCaseInsensitiveDict::test_docstring_example", "test_requests.py::TestCaseInsensitiveDict::test_equality", "test_requests.py::TestCaseInsensitiveDict::test_fixes_649", "test_requests.py::TestCaseInsensitiveDict::test_get", "test_requests.py::TestCaseInsensitiveDict::test_getitem", "test_requests.py::TestCaseInsensitiveDict::test_iter", "test_requests.py::TestCaseInsensitiveDict::test_iterable_init", "test_requests.py::TestCaseInsensitiveDict::test_kwargs_init", "test_requests.py::TestCaseInsensitiveDict::test_len", "test_requests.py::TestCaseInsensitiveDict::test_lower_items", "test_requests.py::TestCaseInsensitiveDict::test_mapping_init", "test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case", "test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case", "test_requests.py::TestCaseInsensitiveDict::test_setdefault", "test_requests.py::TestCaseInsensitiveDict::test_update", "test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged", "test_requests.py::UtilsTestCase::test_address_in_network", "test_requests.py::UtilsTestCase::test_dotted_netmask", "test_requests.py::UtilsTestCase::test_get_auth_from_url", "test_requests.py::UtilsTestCase::test_get_environ_proxies", "test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges", "test_requests.py::UtilsTestCase::test_is_ipv4_address", "test_requests.py::UtilsTestCase::test_is_valid_cidr", "test_requests.py::UtilsTestCase::test_super_len_io_streams", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str", "test_requests.py::TestMorselToCookieExpires::test_expires_none", "test_requests.py::TestMorselToCookieExpires::test_expires_valid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int", "test_requests.py::TestTimeout::test_stream_timeout"]}
{"instance_id": "psf__requests-2148", "tests_passing_in_original_repo": ["test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES", "test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGEST_STREAM", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT", "test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA", "test_requests.py::RequestsTestCase::test_auth_is_retained_for_redirect_on_host", "test_requests.py::RequestsTestCase::test_auth_is_stripped_on_redirect_off_host", "test_requests.py::RequestsTestCase::test_autoset_header_values_are_native", "test_requests.py::RequestsTestCase::test_basic_auth_str_is_always_native", "test_requests.py::RequestsTestCase::test_basic_building", "test_requests.py::RequestsTestCase::test_basicauth_with_netrc", "test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files", "test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests", "test_requests.py::RequestsTestCase::test_cookie_as_dict_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keys", "test_requests.py::RequestsTestCase::test_cookie_as_dict_values", "test_requests.py::RequestsTestCase::test_cookie_parameters", "test_requests.py::RequestsTestCase::test_cookie_persists_via_api", "test_requests.py::RequestsTestCase::test_cookie_quote_wrapped", "test_requests.py::RequestsTestCase::test_cookie_removed_on_expire", "test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect", "test_requests.py::RequestsTestCase::test_custom_content_type", "test_requests.py::RequestsTestCase::test_decompress_gzip", "test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post", "test_requests.py::RequestsTestCase::test_entry_points", "test_requests.py::RequestsTestCase::test_fixes_1329", "test_requests.py::RequestsTestCase::test_generic_cookiejar_works", "test_requests.py::RequestsTestCase::test_get_auth_from_url", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars", "test_requests.py::RequestsTestCase::test_header_keys_are_native", "test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive", "test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent", "test_requests.py::RequestsTestCase::test_history_is_always_a_list", "test_requests.py::RequestsTestCase::test_hook_receives_request_arguments", "test_requests.py::RequestsTestCase::test_http_error", "test_requests.py::RequestsTestCase::test_invalid_url", "test_requests.py::RequestsTestCase::test_links", "test_requests.py::RequestsTestCase::test_long_authinfo_in_url", "test_requests.py::RequestsTestCase::test_manual_redirect_with_partial_body_read", "test_requests.py::RequestsTestCase::test_mixed_case_scheme_acceptable", "test_requests.py::RequestsTestCase::test_no_content_length", "test_requests.py::RequestsTestCase::test_oddball_schemes_dont_check_URLs", "test_requests.py::RequestsTestCase::test_param_cookiejar_works", "test_requests.py::RequestsTestCase::test_params_are_added_before_fragment", "test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive", "test_requests.py::RequestsTestCase::test_path_is_not_double_encoded", "test_requests.py::RequestsTestCase::test_prepared_from_session", "test_requests.py::RequestsTestCase::test_prepared_request_hook", "test_requests.py::RequestsTestCase::test_pyopenssl_redirect", "test_requests.py::RequestsTestCase::test_redirect_with_wrong_gzipped_header", "test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable", "test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie", "test_requests.py::RequestsTestCase::test_request_cookies_not_persisted", "test_requests.py::RequestsTestCase::test_request_ok_set", "test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden", "test_requests.py::RequestsTestCase::test_response_decode_unicode", "test_requests.py::RequestsTestCase::test_response_is_iterable", "test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks", "test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks", "test_requests.py::RequestsTestCase::test_session_pickling", "test_requests.py::RequestsTestCase::test_set_cookie_on_301", "test_requests.py::RequestsTestCase::test_status_raising", "test_requests.py::RequestsTestCase::test_time_elapsed_blank", "test_requests.py::RequestsTestCase::test_transport_adapter_ordering", "test_requests.py::RequestsTestCase::test_unicode_get", "test_requests.py::RequestsTestCase::test_unicode_header_name", "test_requests.py::RequestsTestCase::test_unicode_method_name", "test_requests.py::RequestsTestCase::test_unicode_multipart_post", "test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames", "test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect", "test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param", "test_requests.py::RequestsTestCase::test_user_agent_transfers", "test_requests.py::TestContentEncodingDetection::test_html4_pragma", "test_requests.py::TestContentEncodingDetection::test_html_charset", "test_requests.py::TestContentEncodingDetection::test_none", "test_requests.py::TestContentEncodingDetection::test_precedence", "test_requests.py::TestContentEncodingDetection::test_xhtml_pragma", "test_requests.py::TestContentEncodingDetection::test_xml", "test_requests.py::TestCaseInsensitiveDict::test_contains", "test_requests.py::TestCaseInsensitiveDict::test_delitem", "test_requests.py::TestCaseInsensitiveDict::test_docstring_example", "test_requests.py::TestCaseInsensitiveDict::test_equality", "test_requests.py::TestCaseInsensitiveDict::test_fixes_649", "test_requests.py::TestCaseInsensitiveDict::test_get", "test_requests.py::TestCaseInsensitiveDict::test_getitem", "test_requests.py::TestCaseInsensitiveDict::test_iter", "test_requests.py::TestCaseInsensitiveDict::test_iterable_init", "test_requests.py::TestCaseInsensitiveDict::test_kwargs_init", "test_requests.py::TestCaseInsensitiveDict::test_len", "test_requests.py::TestCaseInsensitiveDict::test_lower_items", "test_requests.py::TestCaseInsensitiveDict::test_mapping_init", "test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case", "test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case", "test_requests.py::TestCaseInsensitiveDict::test_setdefault", "test_requests.py::TestCaseInsensitiveDict::test_update", "test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged", "test_requests.py::UtilsTestCase::test_address_in_network", "test_requests.py::UtilsTestCase::test_dotted_netmask", "test_requests.py::UtilsTestCase::test_get_auth_from_url", "test_requests.py::UtilsTestCase::test_get_environ_proxies", "test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges", "test_requests.py::UtilsTestCase::test_is_ipv4_address", "test_requests.py::UtilsTestCase::test_is_valid_cidr", "test_requests.py::UtilsTestCase::test_super_len_io_streams", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str", "test_requests.py::TestMorselToCookieExpires::test_expires_none", "test_requests.py::TestMorselToCookieExpires::test_expires_valid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int", "test_requests.py::TestTimeout::test_stream_timeout", "test_requests.py::TestRedirects::test_requests_are_updated_each_time", "test_requests.py::test_data_argument_accepts_tuples", "test_requests.py::test_prepared_request_empty_copy", "test_requests.py::test_prepared_request_no_cookies_copy", "test_requests.py::test_prepared_request_complete_copy"]}
{"instance_id": "psf__requests-2317", "tests_passing_in_original_repo": ["test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES", "test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGEST_STREAM", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT", "test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA", "test_requests.py::RequestsTestCase::test_auth_is_stripped_on_redirect_off_host", "test_requests.py::RequestsTestCase::test_autoset_header_values_are_native", "test_requests.py::RequestsTestCase::test_basic_auth_str_is_always_native", "test_requests.py::RequestsTestCase::test_basic_building", "test_requests.py::RequestsTestCase::test_basicauth_with_netrc", "test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files", "test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests", "test_requests.py::RequestsTestCase::test_connection_error", "test_requests.py::RequestsTestCase::test_cookie_as_dict_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keys", "test_requests.py::RequestsTestCase::test_cookie_as_dict_values", "test_requests.py::RequestsTestCase::test_cookie_parameters", "test_requests.py::RequestsTestCase::test_cookie_persists_via_api", "test_requests.py::RequestsTestCase::test_cookie_quote_wrapped", "test_requests.py::RequestsTestCase::test_cookie_removed_on_expire", "test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect", "test_requests.py::RequestsTestCase::test_custom_content_type", "test_requests.py::RequestsTestCase::test_decompress_gzip", "test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post", "test_requests.py::RequestsTestCase::test_entry_points", "test_requests.py::RequestsTestCase::test_fixes_1329", "test_requests.py::RequestsTestCase::test_generic_cookiejar_works", "test_requests.py::RequestsTestCase::test_get_auth_from_url", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars", "test_requests.py::RequestsTestCase::test_header_keys_are_native", "test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive", "test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent", "test_requests.py::RequestsTestCase::test_history_is_always_a_list", "test_requests.py::RequestsTestCase::test_hook_receives_request_arguments", "test_requests.py::RequestsTestCase::test_http_error", "test_requests.py::RequestsTestCase::test_invalid_url", "test_requests.py::RequestsTestCase::test_json_param_post_content_type_works", "test_requests.py::RequestsTestCase::test_links", "test_requests.py::RequestsTestCase::test_long_authinfo_in_url", "test_requests.py::RequestsTestCase::test_manual_redirect_with_partial_body_read", "test_requests.py::RequestsTestCase::test_mixed_case_scheme_acceptable", "test_requests.py::RequestsTestCase::test_no_content_length", "test_requests.py::RequestsTestCase::test_nonhttp_schemes_dont_check_URLs", "test_requests.py::RequestsTestCase::test_param_cookiejar_works", "test_requests.py::RequestsTestCase::test_params_are_added_before_fragment", "test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive", "test_requests.py::RequestsTestCase::test_path_is_not_double_encoded", "test_requests.py::RequestsTestCase::test_prepare_request_with_bytestring_url", "test_requests.py::RequestsTestCase::test_prepared_from_session", "test_requests.py::RequestsTestCase::test_prepared_request_hook", "test_requests.py::RequestsTestCase::test_pyopenssl_redirect", "test_requests.py::RequestsTestCase::test_redirect_with_wrong_gzipped_header", "test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable", "test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie", "test_requests.py::RequestsTestCase::test_request_cookies_not_persisted", "test_requests.py::RequestsTestCase::test_request_ok_set", "test_requests.py::RequestsTestCase::test_requests_history_is_saved", "test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden", "test_requests.py::RequestsTestCase::test_response_decode_unicode", "test_requests.py::RequestsTestCase::test_response_is_iterable", "test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks", "test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks", "test_requests.py::RequestsTestCase::test_session_pickling", "test_requests.py::RequestsTestCase::test_set_cookie_on_301", "test_requests.py::RequestsTestCase::test_status_raising", "test_requests.py::RequestsTestCase::test_time_elapsed_blank", "test_requests.py::RequestsTestCase::test_transport_adapter_ordering", "test_requests.py::RequestsTestCase::test_unicode_get", "test_requests.py::RequestsTestCase::test_unicode_header_name", "test_requests.py::RequestsTestCase::test_unicode_method_name", "test_requests.py::RequestsTestCase::test_unicode_multipart_post", "test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames", "test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect", "test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param", "test_requests.py::RequestsTestCase::test_user_agent_transfers", "test_requests.py::TestContentEncodingDetection::test_html4_pragma", "test_requests.py::TestContentEncodingDetection::test_html_charset", "test_requests.py::TestContentEncodingDetection::test_none", "test_requests.py::TestContentEncodingDetection::test_precedence", "test_requests.py::TestContentEncodingDetection::test_xhtml_pragma", "test_requests.py::TestContentEncodingDetection::test_xml", "test_requests.py::TestCaseInsensitiveDict::test_contains", "test_requests.py::TestCaseInsensitiveDict::test_delitem", "test_requests.py::TestCaseInsensitiveDict::test_docstring_example", "test_requests.py::TestCaseInsensitiveDict::test_equality", "test_requests.py::TestCaseInsensitiveDict::test_fixes_649", "test_requests.py::TestCaseInsensitiveDict::test_get", "test_requests.py::TestCaseInsensitiveDict::test_getitem", "test_requests.py::TestCaseInsensitiveDict::test_iter", "test_requests.py::TestCaseInsensitiveDict::test_iterable_init", "test_requests.py::TestCaseInsensitiveDict::test_kwargs_init", "test_requests.py::TestCaseInsensitiveDict::test_len", "test_requests.py::TestCaseInsensitiveDict::test_lower_items", "test_requests.py::TestCaseInsensitiveDict::test_mapping_init", "test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case", "test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case", "test_requests.py::TestCaseInsensitiveDict::test_setdefault", "test_requests.py::TestCaseInsensitiveDict::test_update", "test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged", "test_requests.py::UtilsTestCase::test_address_in_network", "test_requests.py::UtilsTestCase::test_dotted_netmask", "test_requests.py::UtilsTestCase::test_get_auth_from_url", "test_requests.py::UtilsTestCase::test_get_environ_proxies", "test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges", "test_requests.py::UtilsTestCase::test_is_ipv4_address", "test_requests.py::UtilsTestCase::test_is_valid_cidr", "test_requests.py::UtilsTestCase::test_super_len_io_streams", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str", "test_requests.py::TestMorselToCookieExpires::test_expires_none", "test_requests.py::TestMorselToCookieExpires::test_expires_valid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int", "test_requests.py::TestTimeout::test_stream_timeout", "test_requests.py::TestTimeout::test_invalid_timeout", "test_requests.py::TestTimeout::test_none_timeout", "test_requests.py::TestTimeout::test_read_timeout", "test_requests.py::TestTimeout::test_connect_timeout", "test_requests.py::TestTimeout::test_total_timeout_connect", "test_requests.py::TestRedirects::test_requests_are_updated_each_time", "test_requests.py::test_data_argument_accepts_tuples", "test_requests.py::test_prepared_request_empty_copy", "test_requests.py::test_prepared_request_no_cookies_copy", "test_requests.py::test_prepared_request_complete_copy", "test_requests.py::test_prepare_unicode_url"]}
{"instance_id": "psf__requests-2674", "tests_passing_in_original_repo": ["test_requests.py::RequestsTestCase::test_BASICAUTH_TUPLE_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_QUOTES_QOP_VALUE", "test_requests.py::RequestsTestCase::test_DIGESTAUTH_WRONG_HTTP_401_GET", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_RETURNS_COOKIE", "test_requests.py::RequestsTestCase::test_DIGEST_AUTH_SETS_SESSION_COOKIES", "test_requests.py::RequestsTestCase::test_DIGEST_HTTP_200_OK_GET", "test_requests.py::RequestsTestCase::test_DIGEST_STREAM", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_ALTERNATIVE", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_GET_WITH_PARAMS", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_HEAD", "test_requests.py::RequestsTestCase::test_HTTP_200_OK_PUT", "test_requests.py::RequestsTestCase::test_HTTP_302_ALLOW_REDIRECT_GET", "test_requests.py::RequestsTestCase::test_LocationParseError", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES", "test_requests.py::RequestsTestCase::test_POSTBIN_GET_POST_FILES_WITH_DATA", "test_requests.py::RequestsTestCase::test_auth_is_retained_for_redirect_on_host", "test_requests.py::RequestsTestCase::test_auth_is_stripped_on_redirect_off_host", "test_requests.py::RequestsTestCase::test_autoset_header_values_are_native", "test_requests.py::RequestsTestCase::test_basic_auth_str_is_always_native", "test_requests.py::RequestsTestCase::test_basic_building", "test_requests.py::RequestsTestCase::test_basicauth_with_netrc", "test_requests.py::RequestsTestCase::test_can_send_bytes_bytearray_objects_with_files", "test_requests.py::RequestsTestCase::test_can_send_file_object_with_non_string_filename", "test_requests.py::RequestsTestCase::test_can_send_nonstring_objects_with_files", "test_requests.py::RequestsTestCase::test_cannot_send_unprepared_requests", "test_requests.py::RequestsTestCase::test_connection_error_invalid_domain", "test_requests.py::RequestsTestCase::test_connection_error_invalid_port", "test_requests.py::RequestsTestCase::test_cookie_as_dict_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_items", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keeps_len", "test_requests.py::RequestsTestCase::test_cookie_as_dict_keys", "test_requests.py::RequestsTestCase::test_cookie_as_dict_values", "test_requests.py::RequestsTestCase::test_cookie_parameters", "test_requests.py::RequestsTestCase::test_cookie_persists_via_api", "test_requests.py::RequestsTestCase::test_cookie_quote_wrapped", "test_requests.py::RequestsTestCase::test_cookie_removed_on_expire", "test_requests.py::RequestsTestCase::test_cookie_sent_on_redirect", "test_requests.py::RequestsTestCase::test_custom_content_type", "test_requests.py::RequestsTestCase::test_decompress_gzip", "test_requests.py::RequestsTestCase::test_different_encodings_dont_break_post", "test_requests.py::RequestsTestCase::test_entry_points", "test_requests.py::RequestsTestCase::test_fixes_1329", "test_requests.py::RequestsTestCase::test_generic_cookiejar_works", "test_requests.py::RequestsTestCase::test_get_auth_from_url", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_hashes", "test_requests.py::RequestsTestCase::test_get_auth_from_url_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_not_encoded_spaces", "test_requests.py::RequestsTestCase::test_get_auth_from_url_percent_chars", "test_requests.py::RequestsTestCase::test_header_keys_are_native", "test_requests.py::RequestsTestCase::test_header_remove_is_case_insensitive", "test_requests.py::RequestsTestCase::test_headers_on_session_with_None_are_not_sent", "test_requests.py::RequestsTestCase::test_history_is_always_a_list", "test_requests.py::RequestsTestCase::test_hook_receives_request_arguments", "test_requests.py::RequestsTestCase::test_http_error", "test_requests.py::RequestsTestCase::test_invalid_url", "test_requests.py::RequestsTestCase::test_json_param_post_content_type_works", "test_requests.py::RequestsTestCase::test_links", "test_requests.py::RequestsTestCase::test_long_authinfo_in_url", "test_requests.py::RequestsTestCase::test_manual_redirect_with_partial_body_read", "test_requests.py::RequestsTestCase::test_mixed_case_scheme_acceptable", "test_requests.py::RequestsTestCase::test_no_content_length", "test_requests.py::RequestsTestCase::test_nonhttp_schemes_dont_check_URLs", "test_requests.py::RequestsTestCase::test_override_content_length", "test_requests.py::RequestsTestCase::test_param_cookiejar_works", "test_requests.py::RequestsTestCase::test_params_are_added_before_fragment", "test_requests.py::RequestsTestCase::test_params_are_merged_case_sensitive", "test_requests.py::RequestsTestCase::test_path_is_not_double_encoded", "test_requests.py::RequestsTestCase::test_prepare_request_with_bytestring_url", "test_requests.py::RequestsTestCase::test_prepared_from_session", "test_requests.py::RequestsTestCase::test_prepared_request_hook", "test_requests.py::RequestsTestCase::test_pyopenssl_redirect", "test_requests.py::RequestsTestCase::test_redirect_with_wrong_gzipped_header", "test_requests.py::RequestsTestCase::test_request_and_response_are_pickleable", "test_requests.py::RequestsTestCase::test_request_cookie_overrides_session_cookie", "test_requests.py::RequestsTestCase::test_request_cookies_not_persisted", "test_requests.py::RequestsTestCase::test_request_ok_set", "test_requests.py::RequestsTestCase::test_requests_history_is_saved", "test_requests.py::RequestsTestCase::test_requests_in_history_are_not_overridden", "test_requests.py::RequestsTestCase::test_response_decode_unicode", "test_requests.py::RequestsTestCase::test_response_is_iterable", "test_requests.py::RequestsTestCase::test_response_iter_lines", "test_requests.py::RequestsTestCase::test_session_hooks_are_overriden_by_request_hooks", "test_requests.py::RequestsTestCase::test_session_hooks_are_used_with_no_request_hooks", "test_requests.py::RequestsTestCase::test_session_pickling", "test_requests.py::RequestsTestCase::test_set_cookie_on_301", "test_requests.py::RequestsTestCase::test_status_raising", "test_requests.py::RequestsTestCase::test_time_elapsed_blank", "test_requests.py::RequestsTestCase::test_transport_adapter_ordering", "test_requests.py::RequestsTestCase::test_unconsumed_session_response_closes_connection", "test_requests.py::RequestsTestCase::test_unicode_get", "test_requests.py::RequestsTestCase::test_unicode_header_name", "test_requests.py::RequestsTestCase::test_unicode_method_name", "test_requests.py::RequestsTestCase::test_unicode_multipart_post", "test_requests.py::RequestsTestCase::test_unicode_multipart_post_fieldnames", "test_requests.py::RequestsTestCase::test_uppercase_scheme_redirect", "test_requests.py::RequestsTestCase::test_urlencoded_get_query_multivalued_param", "test_requests.py::RequestsTestCase::test_user_agent_transfers", "test_requests.py::TestContentEncodingDetection::test_html4_pragma", "test_requests.py::TestContentEncodingDetection::test_html_charset", "test_requests.py::TestContentEncodingDetection::test_none", "test_requests.py::TestContentEncodingDetection::test_precedence", "test_requests.py::TestContentEncodingDetection::test_xhtml_pragma", "test_requests.py::TestContentEncodingDetection::test_xml", "test_requests.py::TestCaseInsensitiveDict::test_contains", "test_requests.py::TestCaseInsensitiveDict::test_copy", "test_requests.py::TestCaseInsensitiveDict::test_delitem", "test_requests.py::TestCaseInsensitiveDict::test_docstring_example", "test_requests.py::TestCaseInsensitiveDict::test_equality", "test_requests.py::TestCaseInsensitiveDict::test_fixes_649", "test_requests.py::TestCaseInsensitiveDict::test_get", "test_requests.py::TestCaseInsensitiveDict::test_getitem", "test_requests.py::TestCaseInsensitiveDict::test_iter", "test_requests.py::TestCaseInsensitiveDict::test_iterable_init", "test_requests.py::TestCaseInsensitiveDict::test_kwargs_init", "test_requests.py::TestCaseInsensitiveDict::test_len", "test_requests.py::TestCaseInsensitiveDict::test_lower_items", "test_requests.py::TestCaseInsensitiveDict::test_mapping_init", "test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case", "test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case", "test_requests.py::TestCaseInsensitiveDict::test_repr", "test_requests.py::TestCaseInsensitiveDict::test_setdefault", "test_requests.py::TestCaseInsensitiveDict::test_update", "test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged", "test_requests.py::UtilsTestCase::test_address_in_network", "test_requests.py::UtilsTestCase::test_dotted_netmask", "test_requests.py::UtilsTestCase::test_get_auth_from_url", "test_requests.py::UtilsTestCase::test_get_environ_proxies", "test_requests.py::UtilsTestCase::test_get_environ_proxies_ip_ranges", "test_requests.py::UtilsTestCase::test_guess_filename_when_filename_is_an_int", "test_requests.py::UtilsTestCase::test_guess_filename_when_int", "test_requests.py::UtilsTestCase::test_guess_filename_with_file_like_obj", "test_requests.py::UtilsTestCase::test_guess_filename_with_unicode_name", "test_requests.py::UtilsTestCase::test_is_ipv4_address", "test_requests.py::UtilsTestCase::test_is_valid_cidr", "test_requests.py::UtilsTestCase::test_requote_uri_properly_requotes", "test_requests.py::UtilsTestCase::test_requote_uri_with_unquoted_percents", "test_requests.py::UtilsTestCase::test_super_len_io_streams", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int", "test_requests.py::TestMorselToCookieExpires::test_expires_invalid_str", "test_requests.py::TestMorselToCookieExpires::test_expires_none", "test_requests.py::TestMorselToCookieExpires::test_expires_valid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str", "test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int", "test_requests.py::TestTimeout::test_stream_timeout", "test_requests.py::TestTimeout::test_invalid_timeout", "test_requests.py::TestTimeout::test_none_timeout", "test_requests.py::TestTimeout::test_read_timeout", "test_requests.py::TestTimeout::test_connect_timeout", "test_requests.py::TestTimeout::test_total_timeout_connect", "test_requests.py::TestTimeout::test_encoded_methods", "test_requests.py::TestRedirects::test_requests_are_updated_each_time", "test_requests.py::test_data_argument_accepts_tuples", "test_requests.py::test_prepared_request_empty_copy", "test_requests.py::test_prepared_request_no_cookies_copy", "test_requests.py::test_prepared_request_complete_copy", "test_requests.py::test_prepare_unicode_url", "test_requests.py::test_urllib3_retries", "test_requests.py::test_vendor_aliases"]}
{"instance_id": "psf__requests-3362", "tests_passing_in_original_repo": ["tests/test_requests.py::TestRequests::test_entry_points", "tests/test_requests.py::TestRequests::test_invalid_url[MissingSchema-hiwpefhipowhefopw]", "tests/test_requests.py::TestRequests::test_invalid_url[InvalidSchema-localhost:3128]", "tests/test_requests.py::TestRequests::test_invalid_url[InvalidSchema-localhost.localdomain:3128/]", "tests/test_requests.py::TestRequests::test_invalid_url[InvalidSchema-10.122.1.1:3128/]", "tests/test_requests.py::TestRequests::test_invalid_url[InvalidURL-http://]", "tests/test_requests.py::TestRequests::test_basic_building", "tests/test_requests.py::TestRequests::test_path_is_not_double_encoded", "tests/test_requests.py::TestRequests::test_params_are_added_before_fragment[http://example.com/path#fragment-http://example.com/path?a=b#fragment]", "tests/test_requests.py::TestRequests::test_params_are_added_before_fragment[http://example.com/path?key=value#fragment-http://example.com/path?key=value&a=b#fragment]", "tests/test_requests.py::TestRequests::test_params_original_order_is_preserved_by_default", "tests/test_requests.py::TestRequests::test_params_bytes_are_encoded", "tests/test_requests.py::TestRequests::test_binary_put", "tests/test_requests.py::TestRequests::test_errors[http://doesnotexist.google.com-ConnectionError]", "tests/test_requests.py::TestRequests::test_errors[http://localhost:1-ConnectionError]", "tests/test_requests.py::TestRequests::test_errors[http://fe80::5054:ff:fe5a:fc0-InvalidURL]", "tests/test_requests.py::TestRequests::test_proxy_error", "tests/test_requests.py::TestRequests::test_non_prepared_request_error", "tests/test_requests.py::TestRequests::test_prepare_request_with_bytestring_url", "tests/test_requests.py::TestRequests::test_links", "tests/test_requests.py::TestRequests::test_cookie_parameters", "tests/test_requests.py::TestRequests::test_cookie_as_dict_keeps_len", "tests/test_requests.py::TestRequests::test_cookie_as_dict_keeps_items", "tests/test_requests.py::TestRequests::test_cookie_as_dict_keys", "tests/test_requests.py::TestRequests::test_cookie_as_dict_values", "tests/test_requests.py::TestRequests::test_cookie_as_dict_items", "tests/test_requests.py::TestRequests::test_cookie_duplicate_names_different_domains", "tests/test_requests.py::TestRequests::test_cookie_duplicate_names_raises_cookie_conflict_error", "tests/test_requests.py::TestRequests::test_response_is_iterable", "tests/test_requests.py::TestRequests::test_response_decode_unicode", "tests/test_requests.py::TestRequests::test_response_chunk_size_int", "tests/test_requests.py::TestRequests::test_http_error", "tests/test_requests.py::TestRequests::test_transport_adapter_ordering", "tests/test_requests.py::TestRequests::test_long_authinfo_in_url", "tests/test_requests.py::TestRequests::test_nonhttp_schemes_dont_check_URLs", "tests/test_requests.py::TestRequests::test_basic_auth_str_is_always_native", "tests/test_requests.py::TestCaseInsensitiveDict::test_init[cid0]", "tests/test_requests.py::TestCaseInsensitiveDict::test_init[cid1]", "tests/test_requests.py::TestCaseInsensitiveDict::test_init[cid2]", "tests/test_requests.py::TestCaseInsensitiveDict::test_docstring_example", "tests/test_requests.py::TestCaseInsensitiveDict::test_len", "tests/test_requests.py::TestCaseInsensitiveDict::test_getitem", "tests/test_requests.py::TestCaseInsensitiveDict::test_fixes_649", "tests/test_requests.py::TestCaseInsensitiveDict::test_delitem", "tests/test_requests.py::TestCaseInsensitiveDict::test_contains", "tests/test_requests.py::TestCaseInsensitiveDict::test_get", "tests/test_requests.py::TestCaseInsensitiveDict::test_update", "tests/test_requests.py::TestCaseInsensitiveDict::test_update_retains_unchanged", "tests/test_requests.py::TestCaseInsensitiveDict::test_iter", "tests/test_requests.py::TestCaseInsensitiveDict::test_equality", "tests/test_requests.py::TestCaseInsensitiveDict::test_setdefault", "tests/test_requests.py::TestCaseInsensitiveDict::test_lower_items", "tests/test_requests.py::TestCaseInsensitiveDict::test_preserve_key_case", "tests/test_requests.py::TestCaseInsensitiveDict::test_preserve_last_key_case", "tests/test_requests.py::TestCaseInsensitiveDict::test_copy", "tests/test_requests.py::TestMorselToCookieExpires::test_expires_valid_str", "tests/test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int[100-TypeError]", "tests/test_requests.py::TestMorselToCookieExpires::test_expires_invalid_int[woops-ValueError]", "tests/test_requests.py::TestMorselToCookieExpires::test_expires_none", "tests/test_requests.py::TestMorselToCookieMaxAge::test_max_age_valid_int", "tests/test_requests.py::TestMorselToCookieMaxAge::test_max_age_invalid_str", "tests/test_requests.py::TestTimeout::test_connect_timeout", "tests/test_requests.py::TestTimeout::test_total_timeout_connect", "tests/test_requests.py::test_json_encodes_as_bytes", "tests/test_requests.py::test_proxy_env_vars_override_default[http_proxy-http://example.com-socks5://proxy.com:9876]", "tests/test_requests.py::test_proxy_env_vars_override_default[https_proxy-https://example.com-socks5://proxy.com:9876]", "tests/test_requests.py::test_proxy_env_vars_override_default[all_proxy-http://example.com-socks5://proxy.com:9876]", "tests/test_requests.py::test_proxy_env_vars_override_default[all_proxy-https://example.com-socks5://proxy.com:9876]", "tests/test_requests.py::test_data_argument_accepts_tuples[data0]", "tests/test_requests.py::test_data_argument_accepts_tuples[data1]", "tests/test_requests.py::test_data_argument_accepts_tuples[data2]", "tests/test_requests.py::test_prepared_copy[None]", "tests/test_requests.py::test_prepared_copy[kwargs1]", "tests/test_requests.py::test_prepared_copy[kwargs2]", "tests/test_requests.py::test_prepared_copy[kwargs3]", "tests/test_requests.py::test_vendor_aliases"]}
{"instance_id": "psf__requests-863", "tests_passing_in_original_repo": ["tests/test_requests.py::RequestsTestSuite::test_BASICAUTH_HTTP_200_OK_GET", "tests/test_requests.py::RequestsTestSuite::test_BASICAUTH_TUPLE_HTTP_200_OK_GET", "tests/test_requests.py::RequestsTestSuite::test_GET_no_redirect", "tests/test_requests.py::RequestsTestSuite::test_HEAD_no_redirect", "tests/test_requests.py::RequestsTestSuite::test_HTTP_200_OK_GET", "tests/test_requests.py::RequestsTestSuite::test_HTTP_200_OK_GET_WITH_MIXED_PARAMS", "tests/test_requests.py::RequestsTestSuite::test_HTTP_200_OK_GET_WITH_PARAMS", "tests/test_requests.py::RequestsTestSuite::test_HTTP_200_OK_HEAD", "tests/test_requests.py::RequestsTestSuite::test_HTTP_200_OK_PUT", "tests/test_requests.py::RequestsTestSuite::test_HTTP_302_ALLOW_REDIRECT_GET", "tests/test_requests.py::RequestsTestSuite::test_HTTP_302_GET", "tests/test_requests.py::RequestsTestSuite::test_POSTBIN_GET_POST_FILES", "tests/test_requests.py::RequestsTestSuite::test_POSTBIN_GET_POST_FILES_STRINGS", "tests/test_requests.py::RequestsTestSuite::test_POSTBIN_GET_POST_FILES_WITH_HEADERS", "tests/test_requests.py::RequestsTestSuite::test_POSTBIN_GET_POST_FILES_WITH_PARAMS", "tests/test_requests.py::RequestsTestSuite::test_accept_objects_with_string_representations_as_urls", "tests/test_requests.py::RequestsTestSuite::test_bytes_files", "tests/test_requests.py::RequestsTestSuite::test_cached_response", "tests/test_requests.py::RequestsTestSuite::test_can_have_none_in_header_values", "tests/test_requests.py::RequestsTestSuite::test_connection_error", "tests/test_requests.py::RequestsTestSuite::test_connection_error_with_safe_mode", "tests/test_requests.py::RequestsTestSuite::test_connection_keepalive_and_close", "tests/test_requests.py::RequestsTestSuite::test_danger_mode_redirects", "tests/test_requests.py::RequestsTestSuite::test_decompress_gzip", "tests/test_requests.py::RequestsTestSuite::test_default_status_raising", "tests/test_requests.py::RequestsTestSuite::test_empty_response", "tests/test_requests.py::RequestsTestSuite::test_entry_points", "tests/test_requests.py::RequestsTestSuite::test_file_post_data", "tests/test_requests.py::RequestsTestSuite::test_head_content", "tests/test_requests.py::RequestsTestSuite::test_httpauth_recursion", "tests/test_requests.py::RequestsTestSuite::test_invalid_url", "tests/test_requests.py::RequestsTestSuite::test_invalid_urls_throw_requests_exception", "tests/test_requests.py::RequestsTestSuite::test_iter_lines", "tests/test_requests.py::RequestsTestSuite::test_max_redirects", "tests/test_requests.py::RequestsTestSuite::test_multiple_hooks", "tests/test_requests.py::RequestsTestSuite::test_none_vals_in_data_are_deleted", "tests/test_requests.py::RequestsTestSuite::test_nonurlencoded_post_data", "tests/test_requests.py::RequestsTestSuite::test_nonurlencoded_postdata", "tests/test_requests.py::RequestsTestSuite::test_nonzero_evaluation", "tests/test_requests.py::RequestsTestSuite::test_params_accepts_kv_list", "tests/test_requests.py::RequestsTestSuite::test_params_are_added_before_fragment", "tests/test_requests.py::RequestsTestSuite::test_path_is_not_double_encoded", "tests/test_requests.py::RequestsTestSuite::test_permissive_iter_content", "tests/test_requests.py::RequestsTestSuite::test_post_fields_with_multiple_values_and_files", "tests/test_requests.py::RequestsTestSuite::test_post_fields_with_multiple_values_and_files_as_tuples", "tests/test_requests.py::RequestsTestSuite::test_prefetch_redirect_bug", "tests/test_requests.py::RequestsTestSuite::test_prefetch_return_response_interaction", "tests/test_requests.py::RequestsTestSuite::test_redirect_history", "tests/test_requests.py::RequestsTestSuite::test_relative_redirect_history", "tests/test_requests.py::RequestsTestSuite::test_request_ok_set", "tests/test_requests.py::RequestsTestSuite::test_response_has_unicode_url", "tests/test_requests.py::RequestsTestSuite::test_response_sent", "tests/test_requests.py::RequestsTestSuite::test_session_persistent_headers", "tests/test_requests.py::RequestsTestSuite::test_session_persistent_params", "tests/test_requests.py::RequestsTestSuite::test_session_pickling", "tests/test_requests.py::RequestsTestSuite::test_single_hook", "tests/test_requests.py::RequestsTestSuite::test_status_raising", "tests/test_requests.py::RequestsTestSuite::test_unicode_get", "tests/test_requests.py::RequestsTestSuite::test_upload_binary_data", "tests/test_requests.py::RequestsTestSuite::test_urlencoded_get_query_multivalued_param", "tests/test_requests.py::RequestsTestSuite::test_urlencoded_post_data", "tests/test_requests.py::RequestsTestSuite::test_urlencoded_post_query_and_data", "tests/test_requests.py::RequestsTestSuite::test_urlencoded_post_query_multivalued_and_data", "tests/test_requests.py::RequestsTestSuite::test_urlencoded_post_querystring", "tests/test_requests.py::RequestsTestSuite::test_urlencoded_post_querystring_multivalued", "tests/test_requests.py::RequestsTestSuite::test_useful_exception_for_invalid_port", "tests/test_requests.py::RequestsTestSuite::test_useful_exception_for_invalid_scheme", "tests/test_requests.py::RequestsTestSuite::test_user_agent_transfers"]}
{"instance_id": "pydata__xarray-3364", "tests_passing_in_original_repo": ["xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_1d", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_2d", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_3d", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_single_dataset", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_redundant_nesting", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_ignore_empty_list", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_uneven_depth_input", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_uneven_length_input", "xarray/tests/test_combine.py::TestTileIDsFromNestedList::test_infer_from_datasets", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_1d", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_2d", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_no_dimension_coords", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_coord_not_monotonic", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_coord_monotonically_decreasing", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_no_concatenation_needed", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_2d_plus_bystander_dim", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_string_coords", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_lexicographic_sort_string_coords", "xarray/tests/test_combine.py::TestTileIDsFromCoords::test_datetime_coords", "xarray/tests/test_combine.py::TestNewTileIDs::test_new_tile_id[old_id0-new_id0]", "xarray/tests/test_combine.py::TestNewTileIDs::test_new_tile_id[old_id1-new_id1]", "xarray/tests/test_combine.py::TestNewTileIDs::test_new_tile_id[old_id2-new_id2]", "xarray/tests/test_combine.py::TestNewTileIDs::test_new_tile_id[old_id3-new_id3]", "xarray/tests/test_combine.py::TestNewTileIDs::test_new_tile_id[old_id4-new_id4]", "xarray/tests/test_combine.py::TestNewTileIDs::test_get_new_tile_ids", "xarray/tests/test_combine.py::TestCombineND::test_concat_once[dim1]", "xarray/tests/test_combine.py::TestCombineND::test_concat_once[new_dim]", "xarray/tests/test_combine.py::TestCombineND::test_concat_only_first_dim", "xarray/tests/test_combine.py::TestCombineND::test_concat_twice[dim1]", "xarray/tests/test_combine.py::TestCombineND::test_concat_twice[new_dim]", "xarray/tests/test_combine.py::TestCheckShapeTileIDs::test_check_depths", "xarray/tests/test_combine.py::TestCheckShapeTileIDs::test_check_lengths", "xarray/tests/test_combine.py::TestNestedCombine::test_nested_concat", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_join[outer-expected0]", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_join[inner-expected1]", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_join[left-expected2]", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_join[right-expected3]", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_join_exact", "xarray/tests/test_combine.py::TestNestedCombine::test_empty_input", "xarray/tests/test_combine.py::TestNestedCombine::test_nested_concat_along_new_dim", "xarray/tests/test_combine.py::TestNestedCombine::test_nested_merge", "xarray/tests/test_combine.py::TestNestedCombine::test_concat_multiple_dims", "xarray/tests/test_combine.py::TestNestedCombine::test_concat_name_symmetry", "xarray/tests/test_combine.py::TestNestedCombine::test_concat_one_dim_merge_another", "xarray/tests/test_combine.py::TestNestedCombine::test_auto_combine_2d", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_missing_data_new_dim", "xarray/tests/test_combine.py::TestNestedCombine::test_invalid_hypercube_input", "xarray/tests/test_combine.py::TestNestedCombine::test_merge_one_dim_concat_another", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_concat_over_redundant_nesting", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_fill_value[fill_value0]", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_fill_value[2]", "xarray/tests/test_combine.py::TestNestedCombine::test_combine_nested_fill_value[2.0]", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_by_coords", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_coords_join[outer-expected0]", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_coords_join[inner-expected1]", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_coords_join[left-expected2]", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_coords_join[right-expected3]", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_coords_join_exact", "xarray/tests/test_combine.py::TestCombineAuto::test_infer_order_from_coords", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_leaving_bystander_dimensions", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_by_coords_previously_failed", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_by_coords_still_fails", "xarray/tests/test_combine.py::TestCombineAuto::test_combine_by_coords_no_concat", "xarray/tests/test_combine.py::TestCombineAuto::test_check_for_impossible_ordering", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_previously_failed", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_still_fails", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_no_concat", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_order_by_appearance_not_coords", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_fill_value[fill_value0]", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_fill_value[2]", "xarray/tests/test_combine.py::TestAutoCombineOldAPI::test_auto_combine_fill_value[2.0]", "xarray/tests/test_combine.py::TestAutoCombineDeprecation::test_auto_combine_with_concat_dim", "xarray/tests/test_combine.py::TestAutoCombineDeprecation::test_auto_combine_with_merge_and_concat", "xarray/tests/test_combine.py::TestAutoCombineDeprecation::test_auto_combine_with_coords", "xarray/tests/test_combine.py::TestAutoCombineDeprecation::test_auto_combine_without_coords", "xarray/tests/test_concat.py::test_concat_compat", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_simple[dim1-different]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_simple[dim1-minimal]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_simple[dim2-different]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_simple[dim2-minimal]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_2", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords_kwarg[dim1-different]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords_kwarg[dim1-minimal]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords_kwarg[dim1-all]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords_kwarg[dim2-different]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords_kwarg[dim2-minimal]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords_kwarg[dim2-all]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_dim_precedence", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_data_vars", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_coords", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_constant_index", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_size0", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_autoalign", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_errors", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_join_kwarg", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_promote_shape", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_do_not_promote", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_dim_is_variable", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_multiindex", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_fill_value[fill_value0]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_fill_value[2]", "xarray/tests/test_concat.py::TestConcatDataset::test_concat_fill_value[2.0]", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat_encoding", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat_lazy", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat_fill_value[fill_value0]", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat_fill_value[2]", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat_fill_value[2.0]", "xarray/tests/test_concat.py::TestConcatDataArray::test_concat_join_kwarg"]}
{"instance_id": "pydata__xarray-4094", "tests_passing_in_original_repo": ["xarray/tests/test_dataset.py::TestDataset::test_repr", "xarray/tests/test_dataset.py::TestDataset::test_repr_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_repr_period_index", "xarray/tests/test_dataset.py::TestDataset::test_unicode_data", "xarray/tests/test_dataset.py::TestDataset::test_repr_nep18", "xarray/tests/test_dataset.py::TestDataset::test_info", "xarray/tests/test_dataset.py::TestDataset::test_constructor", "xarray/tests/test_dataset.py::TestDataset::test_constructor_invalid_dims", "xarray/tests/test_dataset.py::TestDataset::test_constructor_1d", "xarray/tests/test_dataset.py::TestDataset::test_constructor_0d", "xarray/tests/test_dataset.py::TestDataset::test_constructor_deprecated", "xarray/tests/test_dataset.py::TestDataset::test_constructor_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_sequence", "xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_single", "xarray/tests/test_dataset.py::TestDataset::test_constructor_compat", "xarray/tests/test_dataset.py::TestDataset::test_constructor_with_coords", "xarray/tests/test_dataset.py::TestDataset::test_properties", "xarray/tests/test_dataset.py::TestDataset::test_asarray", "xarray/tests/test_dataset.py::TestDataset::test_get_index", "xarray/tests/test_dataset.py::TestDataset::test_attr_access", "xarray/tests/test_dataset.py::TestDataset::test_variable", "xarray/tests/test_dataset.py::TestDataset::test_modify_inplace", "xarray/tests/test_dataset.py::TestDataset::test_coords_properties", "xarray/tests/test_dataset.py::TestDataset::test_coords_modify", "xarray/tests/test_dataset.py::TestDataset::test_update_index", "xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_with_new_dimension", "xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_coords_set", "xarray/tests/test_dataset.py::TestDataset::test_coords_to_dataset", "xarray/tests/test_dataset.py::TestDataset::test_coords_merge", "xarray/tests/test_dataset.py::TestDataset::test_coords_merge_mismatched_shape", "xarray/tests/test_dataset.py::TestDataset::test_data_vars_properties", "xarray/tests/test_dataset.py::TestDataset::test_equals_and_identical", "xarray/tests/test_dataset.py::TestDataset::test_equals_failures", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_equals", "xarray/tests/test_dataset.py::TestDataset::test_attrs", "xarray/tests/test_dataset.py::TestDataset::test_chunk", "xarray/tests/test_dataset.py::TestDataset::test_dask_is_lazy", "xarray/tests/test_dataset.py::TestDataset::test_isel", "xarray/tests/test_dataset.py::TestDataset::test_isel_fancy", "xarray/tests/test_dataset.py::TestDataset::test_isel_dataarray", "xarray/tests/test_dataset.py::TestDataset::test_sel", "xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray", "xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray_mindex", "xarray/tests/test_dataset.py::TestDataset::test_categorical_index", "xarray/tests/test_dataset.py::TestDataset::test_categorical_reindex", "xarray/tests/test_dataset.py::TestDataset::test_sel_drop", "xarray/tests/test_dataset.py::TestDataset::test_isel_drop", "xarray/tests/test_dataset.py::TestDataset::test_head", "xarray/tests/test_dataset.py::TestDataset::test_tail", "xarray/tests/test_dataset.py::TestDataset::test_thin", "xarray/tests/test_dataset.py::TestDataset::test_sel_fancy", "xarray/tests/test_dataset.py::TestDataset::test_sel_method", "xarray/tests/test_dataset.py::TestDataset::test_loc", "xarray/tests/test_dataset.py::TestDataset::test_selection_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_like", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like", "xarray/tests/test_dataset.py::TestDataset::test_reindex", "xarray/tests/test_dataset.py::TestDataset::test_reindex_warning", "xarray/tests/test_dataset.py::TestDataset::test_reindex_variables_copied", "xarray/tests/test_dataset.py::TestDataset::test_reindex_method", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_align", "xarray/tests/test_dataset.py::TestDataset::test_align_exact", "xarray/tests/test_dataset.py::TestDataset::test_align_override", "xarray/tests/test_dataset.py::TestDataset::test_align_exclude", "xarray/tests/test_dataset.py::TestDataset::test_align_nocopy", "xarray/tests/test_dataset.py::TestDataset::test_align_indexes", "xarray/tests/test_dataset.py::TestDataset::test_align_non_unique", "xarray/tests/test_dataset.py::TestDataset::test_broadcast", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_nocopy", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_exclude", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_misaligned", "xarray/tests/test_dataset.py::TestDataset::test_variable_indexing", "xarray/tests/test_dataset.py::TestDataset::test_drop_variables", "xarray/tests/test_dataset.py::TestDataset::test_drop_index_labels", "xarray/tests/test_dataset.py::TestDataset::test_drop_labels_by_keyword", "xarray/tests/test_dataset.py::TestDataset::test_drop_dims", "xarray/tests/test_dataset.py::TestDataset::test_copy", "xarray/tests/test_dataset.py::TestDataset::test_copy_with_data", "xarray/tests/test_dataset.py::TestDataset::test_copy_with_data_errors", "xarray/tests/test_dataset.py::TestDataset::test_rename", "xarray/tests/test_dataset.py::TestDataset::test_rename_old_name", "xarray/tests/test_dataset.py::TestDataset::test_rename_same_name", "xarray/tests/test_dataset.py::TestDataset::test_rename_inplace", "xarray/tests/test_dataset.py::TestDataset::test_rename_dims", "xarray/tests/test_dataset.py::TestDataset::test_rename_vars", "xarray/tests/test_dataset.py::TestDataset::test_rename_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_CFTimeIndex_type", "xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_DatetimeIndex_type", "xarray/tests/test_dataset.py::TestDataset::test_swap_dims", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_error", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_int", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_coords", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_existing_scalar_coord", "xarray/tests/test_dataset.py::TestDataset::test_isel_expand_dims_roundtrip", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_mixed_int_and_coords", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_kwargs_python36plus", "xarray/tests/test_dataset.py::TestDataset::test_set_index", "xarray/tests/test_dataset.py::TestDataset::test_reset_index", "xarray/tests/test_dataset.py::TestDataset::test_reset_index_keep_attrs", "xarray/tests/test_dataset.py::TestDataset::test_reorder_levels", "xarray/tests/test_dataset.py::TestDataset::test_stack", "xarray/tests/test_dataset.py::TestDataset::test_unstack", "xarray/tests/test_dataset.py::TestDataset::test_unstack_errors", "xarray/tests/test_dataset.py::TestDataset::test_unstack_fill_value", "xarray/tests/test_dataset.py::TestDataset::test_unstack_sparse", "xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_fast", "xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_slow", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_invalid_sample_dims", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_name", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_dtype_dims", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset_different_dimension", "xarray/tests/test_dataset.py::TestDataset::test_update", "xarray/tests/test_dataset.py::TestDataset::test_update_overwrite_coords", "xarray/tests/test_dataset.py::TestDataset::test_update_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_getitem", "xarray/tests/test_dataset.py::TestDataset::test_getitem_hashable", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_default_coords", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_time", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_same_name", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_time_season", "xarray/tests/test_dataset.py::TestDataset::test_slice_virtual_variable", "xarray/tests/test_dataset.py::TestDataset::test_setitem", "xarray/tests/test_dataset.py::TestDataset::test_setitem_pandas", "xarray/tests/test_dataset.py::TestDataset::test_setitem_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_setitem_dimension_override", "xarray/tests/test_dataset.py::TestDataset::test_setitem_with_coords", "xarray/tests/test_dataset.py::TestDataset::test_setitem_align_new_indexes", "xarray/tests/test_dataset.py::TestDataset::test_assign", "xarray/tests/test_dataset.py::TestDataset::test_assign_coords", "xarray/tests/test_dataset.py::TestDataset::test_assign_attrs", "xarray/tests/test_dataset.py::TestDataset::test_assign_multiindex_level", "xarray/tests/test_dataset.py::TestDataset::test_merge_multiindex_level", "xarray/tests/test_dataset.py::TestDataset::test_setitem_original_non_unique_index", "xarray/tests/test_dataset.py::TestDataset::test_setitem_both_non_unique_index", "xarray/tests/test_dataset.py::TestDataset::test_setitem_multiindex_level", "xarray/tests/test_dataset.py::TestDataset::test_delitem", "xarray/tests/test_dataset.py::TestDataset::test_squeeze", "xarray/tests/test_dataset.py::TestDataset::test_squeeze_drop", "xarray/tests/test_dataset.py::TestDataset::test_groupby", "xarray/tests/test_dataset.py::TestDataset::test_groupby_returns_new_type", "xarray/tests/test_dataset.py::TestDataset::test_groupby_iter", "xarray/tests/test_dataset.py::TestDataset::test_groupby_errors", "xarray/tests/test_dataset.py::TestDataset::test_groupby_reduce", "xarray/tests/test_dataset.py::TestDataset::test_groupby_math", "xarray/tests/test_dataset.py::TestDataset::test_groupby_math_virtual", "xarray/tests/test_dataset.py::TestDataset::test_groupby_nan", "xarray/tests/test_dataset.py::TestDataset::test_groupby_order", "xarray/tests/test_dataset.py::TestDataset::test_resample_and_first", "xarray/tests/test_dataset.py::TestDataset::test_resample_min_count", "xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_with_keep_attrs", "xarray/tests/test_dataset.py::TestDataset::test_resample_loffset", "xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_discarding_attrs", "xarray/tests/test_dataset.py::TestDataset::test_resample_by_last_discarding_attrs", "xarray/tests/test_dataset.py::TestDataset::test_resample_drop_nondim_coords", "xarray/tests/test_dataset.py::TestDataset::test_resample_old_api", "xarray/tests/test_dataset.py::TestDataset::test_resample_ds_da_are_the_same", "xarray/tests/test_dataset.py::TestDataset::test_ds_resample_apply_func_args", "xarray/tests/test_dataset.py::TestDataset::test_to_array", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dataframe", "xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_sparse", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_empty_dataframe", "xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_non_unique_columns", "xarray/tests/test_dataset.py::TestDataset::test_convert_dataframe_with_many_types_and_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_time_dim", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_nan_nat", "xarray/tests/test_dataset.py::TestDataset::test_to_dict_with_numpy_attrs", "xarray/tests/test_dataset.py::TestDataset::test_pickle", "xarray/tests/test_dataset.py::TestDataset::test_lazy_load", "xarray/tests/test_dataset.py::TestDataset::test_dropna", "xarray/tests/test_dataset.py::TestDataset::test_fillna", "xarray/tests/test_dataset.py::TestDataset::test_where", "xarray/tests/test_dataset.py::TestDataset::test_where_other", "xarray/tests/test_dataset.py::TestDataset::test_where_drop", "xarray/tests/test_dataset.py::TestDataset::test_where_drop_empty", "xarray/tests/test_dataset.py::TestDataset::test_where_drop_no_indexes", "xarray/tests/test_dataset.py::TestDataset::test_reduce", "xarray/tests/test_dataset.py::TestDataset::test_reduce_coords", "xarray/tests/test_dataset.py::TestDataset::test_mean_uint_dtype", "xarray/tests/test_dataset.py::TestDataset::test_reduce_bad_dim", "xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum", "xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum_test_dims", "xarray/tests/test_dataset.py::TestDataset::test_reduce_non_numeric", "xarray/tests/test_dataset.py::TestDataset::test_reduce_strings", "xarray/tests/test_dataset.py::TestDataset::test_reduce_dtypes", "xarray/tests/test_dataset.py::TestDataset::test_reduce_keep_attrs", "xarray/tests/test_dataset.py::TestDataset::test_reduce_argmin", "xarray/tests/test_dataset.py::TestDataset::test_reduce_scalars", "xarray/tests/test_dataset.py::TestDataset::test_reduce_only_one_axis", "xarray/tests/test_dataset.py::TestDataset::test_reduce_no_axis", "xarray/tests/test_dataset.py::TestDataset::test_reduce_keepdims", "xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-False]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-False]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-False]", "xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[False]", "xarray/tests/test_dataset.py::TestDataset::test_rank", "xarray/tests/test_dataset.py::TestDataset::test_count", "xarray/tests/test_dataset.py::TestDataset::test_map", "xarray/tests/test_dataset.py::TestDataset::test_apply_pending_deprecated_map", "xarray/tests/test_dataset.py::TestDataset::test_dataset_number_math", "xarray/tests/test_dataset.py::TestDataset::test_unary_ops", "xarray/tests/test_dataset.py::TestDataset::test_dataset_array_math", "xarray/tests/test_dataset.py::TestDataset::test_dataset_dataset_math", "xarray/tests/test_dataset.py::TestDataset::test_dataset_math_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_dataset_math_errors", "xarray/tests/test_dataset.py::TestDataset::test_dataset_transpose", "xarray/tests/test_dataset.py::TestDataset::test_dataset_ellipsis_transpose_different_ordered_vars", "xarray/tests/test_dataset.py::TestDataset::test_dataset_retains_period_index_on_transpose", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_simple", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_label", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n2", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_n_neg", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_label_str", "xarray/tests/test_dataset.py::TestDataset::test_shift[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_shift[2]", "xarray/tests/test_dataset.py::TestDataset::test_shift[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_roll_coords", "xarray/tests/test_dataset.py::TestDataset::test_roll_no_coords", "xarray/tests/test_dataset.py::TestDataset::test_roll_coords_none", "xarray/tests/test_dataset.py::TestDataset::test_roll_multidim", "xarray/tests/test_dataset.py::TestDataset::test_real_and_imag", "xarray/tests/test_dataset.py::TestDataset::test_setattr_raises", "xarray/tests/test_dataset.py::TestDataset::test_filter_by_attrs", "xarray/tests/test_dataset.py::TestDataset::test_binary_op_propagate_indexes", "xarray/tests/test_dataset.py::TestDataset::test_binary_op_join_setting", "xarray/tests/test_dataset.py::TestDataset::test_full_like", "xarray/tests/test_dataset.py::TestDataset::test_combine_first", "xarray/tests/test_dataset.py::TestDataset::test_sortby", "xarray/tests/test_dataset.py::TestDataset::test_attribute_access", "xarray/tests/test_dataset.py::TestDataset::test_ipython_key_completion", "xarray/tests/test_dataset.py::TestDataset::test_polyfit_output", "xarray/tests/test_dataset.py::TestDataset::test_pad", "xarray/tests/test_dataset.py::test_isin[test_elements0]", "xarray/tests/test_dataset.py::test_isin[test_elements1]", "xarray/tests/test_dataset.py::test_isin[test_elements2]", "xarray/tests/test_dataset.py::test_isin_dask[test_elements0]", "xarray/tests/test_dataset.py::test_isin_dask[test_elements1]", "xarray/tests/test_dataset.py::test_isin_dask[test_elements2]", "xarray/tests/test_dataset.py::test_isin_dataset", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords0]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords1]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords2]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords3]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords4]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords5]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords6]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords7]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords8]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords9]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords0]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords1]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords2]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords3]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords4]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords5]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords6]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords7]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords8]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords9]", "xarray/tests/test_dataset.py::test_error_message_on_set_supplied", "xarray/tests/test_dataset.py::test_constructor_raises_with_invalid_coords[unaligned_coords0]", "xarray/tests/test_dataset.py::test_dir_expected_attrs[None]", "xarray/tests/test_dataset.py::test_dir_non_string[None]", "xarray/tests/test_dataset.py::test_dir_unicode[None]", "xarray/tests/test_dataset.py::test_coarsen_absent_dims_error[1]", "xarray/tests/test_dataset.py::test_coarsen[1-trim-left-True]", "xarray/tests/test_dataset.py::test_coarsen[1-trim-left-False]", "xarray/tests/test_dataset.py::test_coarsen[1-pad-right-True]", "xarray/tests/test_dataset.py::test_coarsen[1-pad-right-False]", "xarray/tests/test_dataset.py::test_coarsen_coords[1-True]", "xarray/tests/test_dataset.py::test_coarsen_coords[1-False]", "xarray/tests/test_dataset.py::test_coarsen_coords_cftime", "xarray/tests/test_dataset.py::test_coarsen_keep_attrs", "xarray/tests/test_dataset.py::test_rolling_keep_attrs", "xarray/tests/test_dataset.py::test_rolling_properties[1]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-median]", "xarray/tests/test_dataset.py::test_rolling_exp[1]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-False]", "xarray/tests/test_dataset.py::test_rolling_construct[1-True]", "xarray/tests/test_dataset.py::test_rolling_construct[1-False]", "xarray/tests/test_dataset.py::test_rolling_construct[2-True]", "xarray/tests/test_dataset.py::test_rolling_construct[2-False]", "xarray/tests/test_dataset.py::test_rolling_construct[3-True]", "xarray/tests/test_dataset.py::test_rolling_construct[3-False]", "xarray/tests/test_dataset.py::test_rolling_construct[4-True]", "xarray/tests/test_dataset.py::test_rolling_construct[4-False]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-2]", "xarray/tests/test_dataset.py::test_raise_no_warning_for_nan_in_binary_ops", "xarray/tests/test_dataset.py::test_differentiate[1-True]", "xarray/tests/test_dataset.py::test_differentiate[1-False]", "xarray/tests/test_dataset.py::test_differentiate[2-True]", "xarray/tests/test_dataset.py::test_differentiate[2-False]", "xarray/tests/test_dataset.py::test_differentiate_datetime[True]", "xarray/tests/test_dataset.py::test_differentiate_datetime[False]", "xarray/tests/test_dataset.py::test_differentiate_cftime[True]", "xarray/tests/test_dataset.py::test_differentiate_cftime[False]", "xarray/tests/test_dataset.py::test_integrate[True]", "xarray/tests/test_dataset.py::test_integrate[False]", "xarray/tests/test_dataset.py::test_trapz_datetime[np-True]", "xarray/tests/test_dataset.py::test_trapz_datetime[np-False]", "xarray/tests/test_dataset.py::test_trapz_datetime[cftime-True]", "xarray/tests/test_dataset.py::test_trapz_datetime[cftime-False]", "xarray/tests/test_dataset.py::test_no_dict", "xarray/tests/test_dataset.py::test_subclass_slots", "xarray/tests/test_dataset.py::test_weakref"]}
{"instance_id": "pydata__xarray-4248", "tests_passing_in_original_repo": ["xarray/tests/test_formatting.py::TestFormatting::test_get_indexer_at_least_n_items", "xarray/tests/test_formatting.py::TestFormatting::test_first_n_items", "xarray/tests/test_formatting.py::TestFormatting::test_last_n_items", "xarray/tests/test_formatting.py::TestFormatting::test_last_item", "xarray/tests/test_formatting.py::TestFormatting::test_format_item", "xarray/tests/test_formatting.py::TestFormatting::test_format_items", "xarray/tests/test_formatting.py::TestFormatting::test_format_array_flat", "xarray/tests/test_formatting.py::TestFormatting::test_pretty_print", "xarray/tests/test_formatting.py::TestFormatting::test_maybe_truncate", "xarray/tests/test_formatting.py::TestFormatting::test_format_timestamp_out_of_bounds", "xarray/tests/test_formatting.py::TestFormatting::test_attribute_repr", "xarray/tests/test_formatting.py::TestFormatting::test_diff_array_repr", "xarray/tests/test_formatting.py::TestFormatting::test_diff_attrs_repr_with_array", "xarray/tests/test_formatting.py::TestFormatting::test_diff_dataset_repr", "xarray/tests/test_formatting.py::TestFormatting::test_array_repr", "xarray/tests/test_formatting.py::test_set_numpy_options", "xarray/tests/test_formatting.py::test_short_numpy_repr", "xarray/tests/test_formatting.py::test_large_array_repr_length"]}
{"instance_id": "pydata__xarray-4493", "tests_passing_in_original_repo": ["xarray/tests/test_dask.py::test_raise_if_dask_computes", "xarray/tests/test_dask.py::TestVariable::test_basics", "xarray/tests/test_dask.py::TestVariable::test_copy", "xarray/tests/test_dask.py::TestVariable::test_chunk", "xarray/tests/test_dask.py::TestVariable::test_indexing", "xarray/tests/test_dask.py::TestVariable::test_squeeze", "xarray/tests/test_dask.py::TestVariable::test_equals", "xarray/tests/test_dask.py::TestVariable::test_transpose", "xarray/tests/test_dask.py::TestVariable::test_shift", "xarray/tests/test_dask.py::TestVariable::test_roll", "xarray/tests/test_dask.py::TestVariable::test_unary_op", "xarray/tests/test_dask.py::TestVariable::test_binary_op", "xarray/tests/test_dask.py::TestVariable::test_repr", "xarray/tests/test_dask.py::TestVariable::test_pickle", "xarray/tests/test_dask.py::TestVariable::test_reduce", "xarray/tests/test_dask.py::TestVariable::test_missing_values", "xarray/tests/test_dask.py::TestVariable::test_concat", "xarray/tests/test_dask.py::TestVariable::test_missing_methods", "xarray/tests/test_dask.py::TestVariable::test_univariate_ufunc", "xarray/tests/test_dask.py::TestVariable::test_bivariate_ufunc", "xarray/tests/test_dask.py::TestVariable::test_compute", "xarray/tests/test_dask.py::TestVariable::test_persist", "xarray/tests/test_dask.py::TestVariable::test_tokenize_duck_dask_array", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_rechunk", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_new_chunk", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_lazy_dataset", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_lazy_array", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_compute", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_persist", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_groupby", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_rolling", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_groupby_first", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_reindex", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_to_dataset_roundtrip", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_merge", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_ufuncs", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_where_dispatching", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_simultaneous_compute", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_stack", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dot", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dataarray_repr", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dataset_repr", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dataarray_pickle", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dataset_pickle", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dataarray_getattr", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_dataset_getattr", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_values", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_from_dask_variable", "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_tokenize_duck_dask_array", "xarray/tests/test_dask.py::TestToDaskDataFrame::test_to_dask_dataframe", "xarray/tests/test_dask.py::TestToDaskDataFrame::test_to_dask_dataframe_2D", "xarray/tests/test_dask.py::TestToDaskDataFrame::test_to_dask_dataframe_coordinates", "xarray/tests/test_dask.py::TestToDaskDataFrame::test_to_dask_dataframe_not_daskarray", "xarray/tests/test_dask.py::TestToDaskDataFrame::test_to_dask_dataframe_no_coordinate", "xarray/tests/test_dask.py::TestToDaskDataFrame::test_to_dask_dataframe_dim_order", "xarray/tests/test_dask.py::test_dask_kwargs_variable[load]", "xarray/tests/test_dask.py::test_dask_kwargs_variable[compute]", "xarray/tests/test_dask.py::test_dask_kwargs_dataarray[load]", "xarray/tests/test_dask.py::test_dask_kwargs_dataarray[compute]", "xarray/tests/test_dask.py::test_dask_kwargs_dataarray[persist]", "xarray/tests/test_dask.py::test_dask_kwargs_dataset[load]", "xarray/tests/test_dask.py::test_dask_kwargs_dataset[compute]", "xarray/tests/test_dask.py::test_dask_kwargs_dataset[persist]", "xarray/tests/test_dask.py::test_persist_Dataset[<lambda>0]", "xarray/tests/test_dask.py::test_persist_DataArray[<lambda>0]", "xarray/tests/test_dask.py::test_persist_DataArray[<lambda>1]", "xarray/tests/test_dask.py::test_dataarray_with_dask_coords", "xarray/tests/test_dask.py::test_basic_compute", "xarray/tests/test_dask.py::test_dask_layers_and_dependencies", "xarray/tests/test_dask.py::test_unify_chunks", "xarray/tests/test_dask.py::test_unify_chunks_shallow_copy[<lambda>0-obj0]", "xarray/tests/test_dask.py::test_unify_chunks_shallow_copy[<lambda>0-obj1]", "xarray/tests/test_dask.py::test_unify_chunks_shallow_copy[<lambda>1-obj0]", "xarray/tests/test_dask.py::test_unify_chunks_shallow_copy[<lambda>1-obj1]", "xarray/tests/test_dask.py::test_auto_chunk_da[obj0]", "xarray/tests/test_dask.py::test_make_meta", "xarray/tests/test_dask.py::test_identical_coords_no_computes", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>0-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>0-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>0-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>0-obj3]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>1-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>1-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>1-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>1-obj3]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>2-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>2-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>2-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>2-obj3]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>3-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>3-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>3-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>3-obj3]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>4-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>4-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>4-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>4-obj3]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>5-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>5-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>5-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>5-obj3]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>6-obj0]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>6-obj1]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>6-obj2]", "xarray/tests/test_dask.py::test_token_changes_on_transform[<lambda>6-obj3]", "xarray/tests/test_dask.py::test_token_changes_when_data_changes[obj0]", "xarray/tests/test_dask.py::test_token_changes_when_data_changes[obj1]", "xarray/tests/test_dask.py::test_token_changes_when_data_changes[obj2]", "xarray/tests/test_dask.py::test_token_changes_when_data_changes[obj3]", "xarray/tests/test_dask.py::test_token_changes_when_buffer_changes[obj0]", "xarray/tests/test_dask.py::test_token_changes_when_buffer_changes[obj1]", "xarray/tests/test_dask.py::test_token_identical[obj0-<lambda>0]", "xarray/tests/test_dask.py::test_token_identical[obj0-<lambda>1]", "xarray/tests/test_dask.py::test_token_identical[obj0-<lambda>2]", "xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]", "xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>1]", "xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]", "xarray/tests/test_dask.py::test_token_identical[obj2-<lambda>0]", "xarray/tests/test_dask.py::test_token_identical[obj2-<lambda>1]", "xarray/tests/test_dask.py::test_token_identical[obj2-<lambda>2]", "xarray/tests/test_dask.py::test_recursive_token", "xarray/tests/test_dask.py::test_normalize_token_with_backend", "xarray/tests/test_dask.py::test_lazy_array_equiv_variables[broadcast_equals]", "xarray/tests/test_dask.py::test_lazy_array_equiv_variables[equals]", "xarray/tests/test_dask.py::test_lazy_array_equiv_variables[identical]", "xarray/tests/test_dask.py::test_lazy_array_equiv_variables[no_conflicts]", "xarray/tests/test_dask.py::test_lazy_array_equiv_merge[broadcast_equals]", "xarray/tests/test_dask.py::test_lazy_array_equiv_merge[equals]", "xarray/tests/test_dask.py::test_lazy_array_equiv_merge[identical]", "xarray/tests/test_dask.py::test_lazy_array_equiv_merge[no_conflicts]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>0-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>0-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>1-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>1-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>2-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>2-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>3-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>3-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>4-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>4-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>5-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>5-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>6-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>6-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>7-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>7-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>8-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>8-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>9-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>9-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>10-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>10-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>11-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>11-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>12-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>12-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>13-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>13-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>14-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>14-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>15-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>15-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>16-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>16-obj1]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>17-obj0]", "xarray/tests/test_dask.py::test_transforms_pass_lazy_array_equiv[<lambda>17-obj1]", "xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv", "xarray/tests/test_dask.py::test_optimize", "xarray/tests/test_dataset.py::TestDataset::test_repr", "xarray/tests/test_dataset.py::TestDataset::test_repr_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_repr_period_index", "xarray/tests/test_dataset.py::TestDataset::test_unicode_data", "xarray/tests/test_dataset.py::TestDataset::test_repr_nep18", "xarray/tests/test_dataset.py::TestDataset::test_info", "xarray/tests/test_dataset.py::TestDataset::test_constructor", "xarray/tests/test_dataset.py::TestDataset::test_constructor_invalid_dims", "xarray/tests/test_dataset.py::TestDataset::test_constructor_1d", "xarray/tests/test_dataset.py::TestDataset::test_constructor_0d", "xarray/tests/test_dataset.py::TestDataset::test_constructor_deprecated", "xarray/tests/test_dataset.py::TestDataset::test_constructor_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_sequence", "xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_single", "xarray/tests/test_dataset.py::TestDataset::test_constructor_compat", "xarray/tests/test_dataset.py::TestDataset::test_constructor_with_coords", "xarray/tests/test_dataset.py::TestDataset::test_properties", "xarray/tests/test_dataset.py::TestDataset::test_asarray", "xarray/tests/test_dataset.py::TestDataset::test_get_index", "xarray/tests/test_dataset.py::TestDataset::test_attr_access", "xarray/tests/test_dataset.py::TestDataset::test_variable", "xarray/tests/test_dataset.py::TestDataset::test_modify_inplace", "xarray/tests/test_dataset.py::TestDataset::test_coords_properties", "xarray/tests/test_dataset.py::TestDataset::test_coords_modify", "xarray/tests/test_dataset.py::TestDataset::test_update_index", "xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_with_new_dimension", "xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_coords_set", "xarray/tests/test_dataset.py::TestDataset::test_coords_to_dataset", "xarray/tests/test_dataset.py::TestDataset::test_coords_merge", "xarray/tests/test_dataset.py::TestDataset::test_coords_merge_mismatched_shape", "xarray/tests/test_dataset.py::TestDataset::test_data_vars_properties", "xarray/tests/test_dataset.py::TestDataset::test_equals_and_identical", "xarray/tests/test_dataset.py::TestDataset::test_equals_failures", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_equals", "xarray/tests/test_dataset.py::TestDataset::test_attrs", "xarray/tests/test_dataset.py::TestDataset::test_chunk", "xarray/tests/test_dataset.py::TestDataset::test_dask_is_lazy", "xarray/tests/test_dataset.py::TestDataset::test_isel", "xarray/tests/test_dataset.py::TestDataset::test_isel_fancy", "xarray/tests/test_dataset.py::TestDataset::test_isel_dataarray", "xarray/tests/test_dataset.py::TestDataset::test_sel", "xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray", "xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray_mindex", "xarray/tests/test_dataset.py::TestDataset::test_categorical_index", "xarray/tests/test_dataset.py::TestDataset::test_categorical_reindex", "xarray/tests/test_dataset.py::TestDataset::test_sel_drop", "xarray/tests/test_dataset.py::TestDataset::test_isel_drop", "xarray/tests/test_dataset.py::TestDataset::test_head", "xarray/tests/test_dataset.py::TestDataset::test_tail", "xarray/tests/test_dataset.py::TestDataset::test_thin", "xarray/tests/test_dataset.py::TestDataset::test_sel_fancy", "xarray/tests/test_dataset.py::TestDataset::test_sel_method", "xarray/tests/test_dataset.py::TestDataset::test_loc", "xarray/tests/test_dataset.py::TestDataset::test_selection_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_like", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like", "xarray/tests/test_dataset.py::TestDataset::test_reindex", "xarray/tests/test_dataset.py::TestDataset::test_reindex_warning", "xarray/tests/test_dataset.py::TestDataset::test_reindex_variables_copied", "xarray/tests/test_dataset.py::TestDataset::test_reindex_method", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[fill_value3]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[fill_value3]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_str_dtype[str]", "xarray/tests/test_dataset.py::TestDataset::test_reindex_str_dtype[bytes]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[fill_value3]", "xarray/tests/test_dataset.py::TestDataset::test_align", "xarray/tests/test_dataset.py::TestDataset::test_align_exact", "xarray/tests/test_dataset.py::TestDataset::test_align_override", "xarray/tests/test_dataset.py::TestDataset::test_align_exclude", "xarray/tests/test_dataset.py::TestDataset::test_align_nocopy", "xarray/tests/test_dataset.py::TestDataset::test_align_indexes", "xarray/tests/test_dataset.py::TestDataset::test_align_non_unique", "xarray/tests/test_dataset.py::TestDataset::test_align_str_dtype", "xarray/tests/test_dataset.py::TestDataset::test_broadcast", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_nocopy", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_exclude", "xarray/tests/test_dataset.py::TestDataset::test_broadcast_misaligned", "xarray/tests/test_dataset.py::TestDataset::test_variable_indexing", "xarray/tests/test_dataset.py::TestDataset::test_drop_variables", "xarray/tests/test_dataset.py::TestDataset::test_drop_index_labels", "xarray/tests/test_dataset.py::TestDataset::test_drop_labels_by_keyword", "xarray/tests/test_dataset.py::TestDataset::test_drop_labels_by_position", "xarray/tests/test_dataset.py::TestDataset::test_drop_dims", "xarray/tests/test_dataset.py::TestDataset::test_copy", "xarray/tests/test_dataset.py::TestDataset::test_copy_with_data", "xarray/tests/test_dataset.py::TestDataset::test_copy_with_data_errors", "xarray/tests/test_dataset.py::TestDataset::test_rename", "xarray/tests/test_dataset.py::TestDataset::test_rename_old_name", "xarray/tests/test_dataset.py::TestDataset::test_rename_same_name", "xarray/tests/test_dataset.py::TestDataset::test_rename_dims", "xarray/tests/test_dataset.py::TestDataset::test_rename_vars", "xarray/tests/test_dataset.py::TestDataset::test_rename_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_CFTimeIndex_type", "xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_DatetimeIndex_type", "xarray/tests/test_dataset.py::TestDataset::test_swap_dims", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_error", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_int", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_coords", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_existing_scalar_coord", "xarray/tests/test_dataset.py::TestDataset::test_isel_expand_dims_roundtrip", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_mixed_int_and_coords", "xarray/tests/test_dataset.py::TestDataset::test_expand_dims_kwargs_python36plus", "xarray/tests/test_dataset.py::TestDataset::test_set_index", "xarray/tests/test_dataset.py::TestDataset::test_reset_index", "xarray/tests/test_dataset.py::TestDataset::test_reset_index_keep_attrs", "xarray/tests/test_dataset.py::TestDataset::test_reorder_levels", "xarray/tests/test_dataset.py::TestDataset::test_stack", "xarray/tests/test_dataset.py::TestDataset::test_unstack", "xarray/tests/test_dataset.py::TestDataset::test_unstack_errors", "xarray/tests/test_dataset.py::TestDataset::test_unstack_fill_value", "xarray/tests/test_dataset.py::TestDataset::test_unstack_sparse", "xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_fast", "xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_slow", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_invalid_sample_dims", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_name", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_dtype_dims", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset", "xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset_different_dimension", "xarray/tests/test_dataset.py::TestDataset::test_update", "xarray/tests/test_dataset.py::TestDataset::test_update_overwrite_coords", "xarray/tests/test_dataset.py::TestDataset::test_update_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_getitem", "xarray/tests/test_dataset.py::TestDataset::test_getitem_hashable", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_default_coords", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_time", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_same_name", "xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_time_season", "xarray/tests/test_dataset.py::TestDataset::test_slice_virtual_variable", "xarray/tests/test_dataset.py::TestDataset::test_setitem", "xarray/tests/test_dataset.py::TestDataset::test_setitem_pandas", "xarray/tests/test_dataset.py::TestDataset::test_setitem_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_setitem_dimension_override", "xarray/tests/test_dataset.py::TestDataset::test_setitem_with_coords", "xarray/tests/test_dataset.py::TestDataset::test_setitem_align_new_indexes", "xarray/tests/test_dataset.py::TestDataset::test_setitem_str_dtype[str]", "xarray/tests/test_dataset.py::TestDataset::test_setitem_str_dtype[bytes]", "xarray/tests/test_dataset.py::TestDataset::test_assign", "xarray/tests/test_dataset.py::TestDataset::test_assign_coords", "xarray/tests/test_dataset.py::TestDataset::test_assign_attrs", "xarray/tests/test_dataset.py::TestDataset::test_assign_multiindex_level", "xarray/tests/test_dataset.py::TestDataset::test_merge_multiindex_level", "xarray/tests/test_dataset.py::TestDataset::test_setitem_original_non_unique_index", "xarray/tests/test_dataset.py::TestDataset::test_setitem_both_non_unique_index", "xarray/tests/test_dataset.py::TestDataset::test_setitem_multiindex_level", "xarray/tests/test_dataset.py::TestDataset::test_delitem", "xarray/tests/test_dataset.py::TestDataset::test_squeeze", "xarray/tests/test_dataset.py::TestDataset::test_squeeze_drop", "xarray/tests/test_dataset.py::TestDataset::test_groupby", "xarray/tests/test_dataset.py::TestDataset::test_groupby_returns_new_type", "xarray/tests/test_dataset.py::TestDataset::test_groupby_iter", "xarray/tests/test_dataset.py::TestDataset::test_groupby_errors", "xarray/tests/test_dataset.py::TestDataset::test_groupby_reduce", "xarray/tests/test_dataset.py::TestDataset::test_groupby_math", "xarray/tests/test_dataset.py::TestDataset::test_groupby_math_virtual", "xarray/tests/test_dataset.py::TestDataset::test_groupby_nan", "xarray/tests/test_dataset.py::TestDataset::test_groupby_order", "xarray/tests/test_dataset.py::TestDataset::test_resample_and_first", "xarray/tests/test_dataset.py::TestDataset::test_resample_min_count", "xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_with_keep_attrs", "xarray/tests/test_dataset.py::TestDataset::test_resample_loffset", "xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_discarding_attrs", "xarray/tests/test_dataset.py::TestDataset::test_resample_by_last_discarding_attrs", "xarray/tests/test_dataset.py::TestDataset::test_resample_drop_nondim_coords", "xarray/tests/test_dataset.py::TestDataset::test_resample_old_api", "xarray/tests/test_dataset.py::TestDataset::test_resample_ds_da_are_the_same", "xarray/tests/test_dataset.py::TestDataset::test_ds_resample_apply_func_args", "xarray/tests/test_dataset.py::TestDataset::test_to_array", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dataframe", "xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_sparse", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_empty_dataframe", "xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_unsorted_levels", "xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_non_unique_columns", "xarray/tests/test_dataset.py::TestDataset::test_convert_dataframe_with_many_types_and_multiindex", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_time_dim", "xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_nan_nat", "xarray/tests/test_dataset.py::TestDataset::test_to_dict_with_numpy_attrs", "xarray/tests/test_dataset.py::TestDataset::test_pickle", "xarray/tests/test_dataset.py::TestDataset::test_lazy_load", "xarray/tests/test_dataset.py::TestDataset::test_dropna", "xarray/tests/test_dataset.py::TestDataset::test_fillna", "xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[<lambda>0]", "xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[<lambda>1]", "xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[absolute]", "xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[abs]", "xarray/tests/test_dataset.py::TestDataset::test_where", "xarray/tests/test_dataset.py::TestDataset::test_where_other", "xarray/tests/test_dataset.py::TestDataset::test_where_drop", "xarray/tests/test_dataset.py::TestDataset::test_where_drop_empty", "xarray/tests/test_dataset.py::TestDataset::test_where_drop_no_indexes", "xarray/tests/test_dataset.py::TestDataset::test_reduce", "xarray/tests/test_dataset.py::TestDataset::test_reduce_coords", "xarray/tests/test_dataset.py::TestDataset::test_mean_uint_dtype", "xarray/tests/test_dataset.py::TestDataset::test_reduce_bad_dim", "xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum", "xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum_test_dims", "xarray/tests/test_dataset.py::TestDataset::test_reduce_non_numeric", "xarray/tests/test_dataset.py::TestDataset::test_reduce_strings", "xarray/tests/test_dataset.py::TestDataset::test_reduce_dtypes", "xarray/tests/test_dataset.py::TestDataset::test_reduce_keep_attrs", "xarray/tests/test_dataset.py::TestDataset::test_reduce_argmin", "xarray/tests/test_dataset.py::TestDataset::test_reduce_scalars", "xarray/tests/test_dataset.py::TestDataset::test_reduce_only_one_axis", "xarray/tests/test_dataset.py::TestDataset::test_reduce_no_axis", "xarray/tests/test_dataset.py::TestDataset::test_reduce_keepdims", "xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-False]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-False]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-False]", "xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[True]", "xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[False]", "xarray/tests/test_dataset.py::TestDataset::test_rank", "xarray/tests/test_dataset.py::TestDataset::test_count", "xarray/tests/test_dataset.py::TestDataset::test_map", "xarray/tests/test_dataset.py::TestDataset::test_apply_pending_deprecated_map", "xarray/tests/test_dataset.py::TestDataset::test_dataset_number_math", "xarray/tests/test_dataset.py::TestDataset::test_unary_ops", "xarray/tests/test_dataset.py::TestDataset::test_dataset_array_math", "xarray/tests/test_dataset.py::TestDataset::test_dataset_dataset_math", "xarray/tests/test_dataset.py::TestDataset::test_dataset_math_auto_align", "xarray/tests/test_dataset.py::TestDataset::test_dataset_math_errors", "xarray/tests/test_dataset.py::TestDataset::test_dataset_transpose", "xarray/tests/test_dataset.py::TestDataset::test_dataset_ellipsis_transpose_different_ordered_vars", "xarray/tests/test_dataset.py::TestDataset::test_dataset_retains_period_index_on_transpose", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_simple", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_label", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n2", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_n_neg", "xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_label_str", "xarray/tests/test_dataset.py::TestDataset::test_shift[fill_value0]", "xarray/tests/test_dataset.py::TestDataset::test_shift[2]", "xarray/tests/test_dataset.py::TestDataset::test_shift[2.0]", "xarray/tests/test_dataset.py::TestDataset::test_shift[fill_value3]", "xarray/tests/test_dataset.py::TestDataset::test_roll_coords", "xarray/tests/test_dataset.py::TestDataset::test_roll_no_coords", "xarray/tests/test_dataset.py::TestDataset::test_roll_coords_none", "xarray/tests/test_dataset.py::TestDataset::test_roll_multidim", "xarray/tests/test_dataset.py::TestDataset::test_real_and_imag", "xarray/tests/test_dataset.py::TestDataset::test_setattr_raises", "xarray/tests/test_dataset.py::TestDataset::test_filter_by_attrs", "xarray/tests/test_dataset.py::TestDataset::test_binary_op_propagate_indexes", "xarray/tests/test_dataset.py::TestDataset::test_binary_op_join_setting", "xarray/tests/test_dataset.py::TestDataset::test_full_like", "xarray/tests/test_dataset.py::TestDataset::test_combine_first", "xarray/tests/test_dataset.py::TestDataset::test_sortby", "xarray/tests/test_dataset.py::TestDataset::test_attribute_access", "xarray/tests/test_dataset.py::TestDataset::test_ipython_key_completion", "xarray/tests/test_dataset.py::TestDataset::test_polyfit_output", "xarray/tests/test_dataset.py::TestDataset::test_pad", "xarray/tests/test_dataset.py::TestDataset::test_astype_attrs", "xarray/tests/test_dataset.py::test_isin[test_elements0]", "xarray/tests/test_dataset.py::test_isin[test_elements1]", "xarray/tests/test_dataset.py::test_isin[test_elements2]", "xarray/tests/test_dataset.py::test_isin_dask[test_elements0]", "xarray/tests/test_dataset.py::test_isin_dask[test_elements1]", "xarray/tests/test_dataset.py::test_isin_dask[test_elements2]", "xarray/tests/test_dataset.py::test_isin_dataset", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords0]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords1]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords2]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords3]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords4]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords5]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords6]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords7]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords8]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords9]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords0]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords1]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords2]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords3]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords4]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords5]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords6]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords7]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords8]", "xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords9]", "xarray/tests/test_dataset.py::test_error_message_on_set_supplied", "xarray/tests/test_dataset.py::test_constructor_raises_with_invalid_coords[unaligned_coords0]", "xarray/tests/test_dataset.py::test_dir_expected_attrs[None]", "xarray/tests/test_dataset.py::test_dir_non_string[None]", "xarray/tests/test_dataset.py::test_dir_unicode[None]", "xarray/tests/test_dataset.py::test_coarsen_absent_dims_error[1]", "xarray/tests/test_dataset.py::test_coarsen[1-trim-left-True]", "xarray/tests/test_dataset.py::test_coarsen[1-trim-left-False]", "xarray/tests/test_dataset.py::test_coarsen[1-pad-right-True]", "xarray/tests/test_dataset.py::test_coarsen[1-pad-right-False]", "xarray/tests/test_dataset.py::test_coarsen_coords[1-True]", "xarray/tests/test_dataset.py::test_coarsen_coords[1-False]", "xarray/tests/test_dataset.py::test_coarsen_coords_cftime", "xarray/tests/test_dataset.py::test_coarsen_keep_attrs", "xarray/tests/test_dataset.py::test_rolling_keep_attrs[reduce-argument0]", "xarray/tests/test_dataset.py::test_rolling_keep_attrs[mean-argument1]", "xarray/tests/test_dataset.py::test_rolling_keep_attrs[construct-argument2]", "xarray/tests/test_dataset.py::test_rolling_keep_attrs[count-argument3]", "xarray/tests/test_dataset.py::test_rolling_keep_attrs_deprecated", "xarray/tests/test_dataset.py::test_rolling_properties[1]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-median]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-sum]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-mean]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-std]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-var]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-min]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-max]", "xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-median]", "xarray/tests/test_dataset.py::test_rolling_exp[1]", "xarray/tests/test_dataset.py::test_rolling_exp_keep_attrs[1]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-False]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-True]", "xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-False]", "xarray/tests/test_dataset.py::test_rolling_construct[1-True]", "xarray/tests/test_dataset.py::test_rolling_construct[1-False]", "xarray/tests/test_dataset.py::test_rolling_construct[2-True]", "xarray/tests/test_dataset.py::test_rolling_construct[2-False]", "xarray/tests/test_dataset.py::test_rolling_construct[3-True]", "xarray/tests/test_dataset.py::test_rolling_construct[3-False]", "xarray/tests/test_dataset.py::test_rolling_construct[4-True]", "xarray/tests/test_dataset.py::test_rolling_construct[4-False]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-2]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-1]", "xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-None-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-None-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-1-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-1-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-None-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-None-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-1-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-1-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-None-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-None-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-1-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-1-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-None-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-None-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-1-True-2]", "xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-1-False-2]", "xarray/tests/test_dataset.py::test_ndrolling_construct[True-nan-True]", "xarray/tests/test_dataset.py::test_ndrolling_construct[True-nan-False]", "xarray/tests/test_dataset.py::test_ndrolling_construct[True-nan-center2]", "xarray/tests/test_dataset.py::test_ndrolling_construct[True-0.0-True]", "xarray/tests/test_dataset.py::test_ndrolling_construct[True-0.0-False]", "xarray/tests/test_dataset.py::test_ndrolling_construct[True-0.0-center2]", "xarray/tests/test_dataset.py::test_ndrolling_construct[False-nan-True]", "xarray/tests/test_dataset.py::test_ndrolling_construct[False-nan-False]", "xarray/tests/test_dataset.py::test_ndrolling_construct[False-nan-center2]", "xarray/tests/test_dataset.py::test_ndrolling_construct[False-0.0-True]", "xarray/tests/test_dataset.py::test_ndrolling_construct[False-0.0-False]", "xarray/tests/test_dataset.py::test_ndrolling_construct[False-0.0-center2]", "xarray/tests/test_dataset.py::test_raise_no_warning_for_nan_in_binary_ops", "xarray/tests/test_dataset.py::test_raise_no_warning_assert_close[2]", "xarray/tests/test_dataset.py::test_differentiate[1-True]", "xarray/tests/test_dataset.py::test_differentiate[1-False]", "xarray/tests/test_dataset.py::test_differentiate[2-True]", "xarray/tests/test_dataset.py::test_differentiate[2-False]", "xarray/tests/test_dataset.py::test_differentiate_datetime[True]", "xarray/tests/test_dataset.py::test_differentiate_datetime[False]", "xarray/tests/test_dataset.py::test_differentiate_cftime[True]", "xarray/tests/test_dataset.py::test_differentiate_cftime[False]", "xarray/tests/test_dataset.py::test_integrate[True]", "xarray/tests/test_dataset.py::test_integrate[False]", "xarray/tests/test_dataset.py::test_trapz_datetime[np-True]", "xarray/tests/test_dataset.py::test_trapz_datetime[np-False]", "xarray/tests/test_dataset.py::test_trapz_datetime[cftime-True]", "xarray/tests/test_dataset.py::test_trapz_datetime[cftime-False]", "xarray/tests/test_dataset.py::test_no_dict", "xarray/tests/test_dataset.py::test_subclass_slots", "xarray/tests/test_dataset.py::test_weakref", "xarray/tests/test_dataset.py::test_deepcopy_obj_array", "xarray/tests/test_interp.py::test_keywargs", "xarray/tests/test_interp.py::test_interpolate_1d[0-x-linear]", "xarray/tests/test_interp.py::test_interpolate_1d[0-x-cubic]", "xarray/tests/test_interp.py::test_interpolate_1d[0-y-linear]", "xarray/tests/test_interp.py::test_interpolate_1d[0-y-cubic]", "xarray/tests/test_interp.py::test_interpolate_1d[1-x-linear]", "xarray/tests/test_interp.py::test_interpolate_1d[1-x-cubic]", "xarray/tests/test_interp.py::test_interpolate_1d[1-y-linear]", "xarray/tests/test_interp.py::test_interpolate_1d[1-y-cubic]", "xarray/tests/test_interp.py::test_interpolate_1d_methods[cubic]", "xarray/tests/test_interp.py::test_interpolate_1d_methods[zero]", "xarray/tests/test_interp.py::test_interpolate_vectorize[False]", "xarray/tests/test_interp.py::test_interpolate_vectorize[True]", "xarray/tests/test_interp.py::test_interpolate_nd[3]", "xarray/tests/test_interp.py::test_interpolate_nd[4]", "xarray/tests/test_interp.py::test_interpolate_nd_nd", "xarray/tests/test_interp.py::test_interpolate_nd_with_nan", "xarray/tests/test_interp.py::test_interpolate_scalar[0-linear]", "xarray/tests/test_interp.py::test_interpolate_scalar[1-linear]", "xarray/tests/test_interp.py::test_interpolate_nd_scalar[3-linear]", "xarray/tests/test_interp.py::test_interpolate_nd_scalar[4-linear]", "xarray/tests/test_interp.py::test_nans[True]", "xarray/tests/test_interp.py::test_nans[False]", "xarray/tests/test_interp.py::test_errors[True]", "xarray/tests/test_interp.py::test_errors[False]", "xarray/tests/test_interp.py::test_dtype", "xarray/tests/test_interp.py::test_sorted", "xarray/tests/test_interp.py::test_dimension_wo_coords", "xarray/tests/test_interp.py::test_dataset", "xarray/tests/test_interp.py::test_interpolate_dimorder[0]", "xarray/tests/test_interp.py::test_interpolate_dimorder[3]", "xarray/tests/test_interp.py::test_interp_like", "xarray/tests/test_interp.py::test_datetime[x_new0-expected0]", "xarray/tests/test_interp.py::test_datetime[x_new1-expected1]", "xarray/tests/test_interp.py::test_datetime[x_new2-expected2]", "xarray/tests/test_interp.py::test_datetime[x_new3-expected3]", "xarray/tests/test_interp.py::test_datetime[x_new4-0.5]", "xarray/tests/test_interp.py::test_datetime_single_string", "xarray/tests/test_interp.py::test_cftime", "xarray/tests/test_interp.py::test_cftime_type_error", "xarray/tests/test_interp.py::test_cftime_list_of_strings", "xarray/tests/test_interp.py::test_cftime_single_string", "xarray/tests/test_interp.py::test_datetime_to_non_datetime_error", "xarray/tests/test_interp.py::test_cftime_to_non_cftime_error", "xarray/tests/test_interp.py::test_datetime_interp_noerror", "xarray/tests/test_interp.py::test_3641", "xarray/tests/test_interp.py::test_decompose[nearest]", "xarray/tests/test_interp.py::test_decompose[linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-0-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-0-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-1-1-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-0-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-1-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[2-2-2-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-0-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-1-1-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-0-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-1-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-2-2-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-0-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-1-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-2-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-True-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-True-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-True-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-True-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-True-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-True-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-nearest]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-zero]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-quadratic]", "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-cubic]", "xarray/tests/test_interp.py::test_interpolate_chunk_advanced[linear]", "xarray/tests/test_interp.py::test_interpolate_chunk_advanced[nearest]", "xarray/tests/test_variable.py::TestVariable::test_properties", "xarray/tests/test_variable.py::TestVariable::test_attrs", "xarray/tests/test_variable.py::TestVariable::test_getitem_dict", "xarray/tests/test_variable.py::TestVariable::test_getitem_1d", "xarray/tests/test_variable.py::TestVariable::test_getitem_1d_fancy", "xarray/tests/test_variable.py::TestVariable::test_getitem_with_mask", "xarray/tests/test_variable.py::TestVariable::test_getitem_with_mask_size_zero", "xarray/tests/test_variable.py::TestVariable::test_getitem_with_mask_nd_indexer", "xarray/tests/test_variable.py::TestVariable::test_index_0d_int", "xarray/tests/test_variable.py::TestVariable::test_index_0d_float", "xarray/tests/test_variable.py::TestVariable::test_index_0d_string", "xarray/tests/test_variable.py::TestVariable::test_index_0d_datetime", "xarray/tests/test_variable.py::TestVariable::test_index_0d_timedelta64", "xarray/tests/test_variable.py::TestVariable::test_index_0d_not_a_time", "xarray/tests/test_variable.py::TestVariable::test_index_0d_object", "xarray/tests/test_variable.py::TestVariable::test_0d_object_array_with_list", "xarray/tests/test_variable.py::TestVariable::test_index_and_concat_datetime", "xarray/tests/test_variable.py::TestVariable::test_0d_time_data", "xarray/tests/test_variable.py::TestVariable::test_datetime64_conversion", "xarray/tests/test_variable.py::TestVariable::test_timedelta64_conversion", "xarray/tests/test_variable.py::TestVariable::test_object_conversion", "xarray/tests/test_variable.py::TestVariable::test_datetime64_valid_range", "xarray/tests/test_variable.py::TestVariable::test_pandas_data", "xarray/tests/test_variable.py::TestVariable::test_pandas_period_index", "xarray/tests/test_variable.py::TestVariable::test_1d_math", "xarray/tests/test_variable.py::TestVariable::test_1d_reduce", "xarray/tests/test_variable.py::TestVariable::test_array_interface", "xarray/tests/test_variable.py::TestVariable::test___array__", "xarray/tests/test_variable.py::TestVariable::test_equals_all_dtypes", "xarray/tests/test_variable.py::TestVariable::test_eq_all_dtypes", "xarray/tests/test_variable.py::TestVariable::test_encoding_preserved", "xarray/tests/test_variable.py::TestVariable::test_concat", "xarray/tests/test_variable.py::TestVariable::test_concat_attrs", "xarray/tests/test_variable.py::TestVariable::test_concat_fixed_len_str", "xarray/tests/test_variable.py::TestVariable::test_concat_number_strings", "xarray/tests/test_variable.py::TestVariable::test_concat_mixed_dtypes", "xarray/tests/test_variable.py::TestVariable::test_copy[float-True]", "xarray/tests/test_variable.py::TestVariable::test_copy[float-False]", "xarray/tests/test_variable.py::TestVariable::test_copy[int-True]", "xarray/tests/test_variable.py::TestVariable::test_copy[int-False]", "xarray/tests/test_variable.py::TestVariable::test_copy[str-True]", "xarray/tests/test_variable.py::TestVariable::test_copy[str-False]", "xarray/tests/test_variable.py::TestVariable::test_copy_index", "xarray/tests/test_variable.py::TestVariable::test_copy_with_data", "xarray/tests/test_variable.py::TestVariable::test_copy_with_data_errors", "xarray/tests/test_variable.py::TestVariable::test_copy_index_with_data", "xarray/tests/test_variable.py::TestVariable::test_copy_index_with_data_errors", "xarray/tests/test_variable.py::TestVariable::test_replace", "xarray/tests/test_variable.py::TestVariable::test_real_and_imag", "xarray/tests/test_variable.py::TestVariable::test_aggregate_complex", "xarray/tests/test_variable.py::TestVariable::test_pandas_cateogrical_dtype", "xarray/tests/test_variable.py::TestVariable::test_pandas_datetime64_with_tz", "xarray/tests/test_variable.py::TestVariable::test_multiindex", "xarray/tests/test_variable.py::TestVariable::test_load", "xarray/tests/test_variable.py::TestVariable::test_getitem_advanced", "xarray/tests/test_variable.py::TestVariable::test_getitem_uint_1d", "xarray/tests/test_variable.py::TestVariable::test_getitem_uint", "xarray/tests/test_variable.py::TestVariable::test_getitem_0d_array", "xarray/tests/test_variable.py::TestVariable::test_getitem_fancy", "xarray/tests/test_variable.py::TestVariable::test_getitem_error", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg0-np_arg0-mean]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg0-np_arg0-edge]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg0-np_arg0-maximum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg0-np_arg0-minimum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg0-np_arg0-symmetric]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg0-np_arg0-wrap]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg1-np_arg1-mean]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg1-np_arg1-edge]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg1-np_arg1-maximum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg1-np_arg1-minimum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg1-np_arg1-symmetric]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg1-np_arg1-wrap]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg2-np_arg2-mean]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg2-np_arg2-edge]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg2-np_arg2-maximum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg2-np_arg2-minimum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg2-np_arg2-symmetric]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg2-np_arg2-wrap]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg3-np_arg3-mean]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg3-np_arg3-edge]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg3-np_arg3-maximum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg3-np_arg3-minimum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg3-np_arg3-symmetric]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg3-np_arg3-wrap]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg4-np_arg4-mean]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg4-np_arg4-edge]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg4-np_arg4-maximum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg4-np_arg4-minimum]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg4-np_arg4-symmetric]", "xarray/tests/test_variable.py::TestVariable::test_pad[xr_arg4-np_arg4-wrap]", "xarray/tests/test_variable.py::TestVariable::test_pad_constant_values[xr_arg0-np_arg0]", "xarray/tests/test_variable.py::TestVariable::test_pad_constant_values[xr_arg1-np_arg1]", "xarray/tests/test_variable.py::TestVariable::test_pad_constant_values[xr_arg2-np_arg2]", "xarray/tests/test_variable.py::TestVariable::test_pad_constant_values[xr_arg3-np_arg3]", "xarray/tests/test_variable.py::TestVariable::test_pad_constant_values[xr_arg4-np_arg4]", "xarray/tests/test_variable.py::TestVariable::test_rolling_window", "xarray/tests/test_variable.py::TestVariable::test_data_and_values", "xarray/tests/test_variable.py::TestVariable::test_numpy_same_methods", "xarray/tests/test_variable.py::TestVariable::test_datetime64_conversion_scalar", "xarray/tests/test_variable.py::TestVariable::test_timedelta64_conversion_scalar", "xarray/tests/test_variable.py::TestVariable::test_0d_str", "xarray/tests/test_variable.py::TestVariable::test_0d_datetime", "xarray/tests/test_variable.py::TestVariable::test_0d_timedelta", "xarray/tests/test_variable.py::TestVariable::test_equals_and_identical", "xarray/tests/test_variable.py::TestVariable::test_broadcast_equals", "xarray/tests/test_variable.py::TestVariable::test_no_conflicts", "xarray/tests/test_variable.py::TestVariable::test_as_variable", "xarray/tests/test_variable.py::TestVariable::test_repr", "xarray/tests/test_variable.py::TestVariable::test_repr_lazy_data", "xarray/tests/test_variable.py::TestVariable::test_detect_indexer_type", "xarray/tests/test_variable.py::TestVariable::test_indexer_type", "xarray/tests/test_variable.py::TestVariable::test_items", "xarray/tests/test_variable.py::TestVariable::test_getitem_basic", "xarray/tests/test_variable.py::TestVariable::test_getitem_with_mask_2d_input", "xarray/tests/test_variable.py::TestVariable::test_isel", "xarray/tests/test_variable.py::TestVariable::test_index_0d_numpy_string", "xarray/tests/test_variable.py::TestVariable::test_indexing_0d_unicode", "xarray/tests/test_variable.py::TestVariable::test_shift[fill_value0]", "xarray/tests/test_variable.py::TestVariable::test_shift[2]", "xarray/tests/test_variable.py::TestVariable::test_shift[2.0]", "xarray/tests/test_variable.py::TestVariable::test_shift2d", "xarray/tests/test_variable.py::TestVariable::test_roll", "xarray/tests/test_variable.py::TestVariable::test_roll_consistency", "xarray/tests/test_variable.py::TestVariable::test_transpose", "xarray/tests/test_variable.py::TestVariable::test_transpose_0d", "xarray/tests/test_variable.py::TestVariable::test_squeeze", "xarray/tests/test_variable.py::TestVariable::test_get_axis_num", "xarray/tests/test_variable.py::TestVariable::test_set_dims", "xarray/tests/test_variable.py::TestVariable::test_set_dims_object_dtype", "xarray/tests/test_variable.py::TestVariable::test_stack", "xarray/tests/test_variable.py::TestVariable::test_stack_errors", "xarray/tests/test_variable.py::TestVariable::test_unstack", "xarray/tests/test_variable.py::TestVariable::test_unstack_errors", "xarray/tests/test_variable.py::TestVariable::test_unstack_2d", "xarray/tests/test_variable.py::TestVariable::test_stack_unstack_consistency", "xarray/tests/test_variable.py::TestVariable::test_broadcasting_math", "xarray/tests/test_variable.py::TestVariable::test_broadcasting_failures", "xarray/tests/test_variable.py::TestVariable::test_inplace_math", "xarray/tests/test_variable.py::TestVariable::test_reduce", "xarray/tests/test_variable.py::TestVariable::test_quantile[None-None-0.25-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[None-None-0.25-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[None-None-q1-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[None-None-q1-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[None-None-q2-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[None-None-q2-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[0-x-0.25-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[0-x-0.25-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[0-x-q1-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[0-x-q1-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[0-x-q2-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[0-x-q2-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis2-dim2-0.25-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis2-dim2-0.25-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis2-dim2-q1-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis2-dim2-q1-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis2-dim2-q2-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis2-dim2-q2-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis3-dim3-0.25-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis3-dim3-0.25-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis3-dim3-q1-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis3-dim3-q1-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis3-dim3-q2-True]", "xarray/tests/test_variable.py::TestVariable::test_quantile[axis3-dim3-q2-False]", "xarray/tests/test_variable.py::TestVariable::test_quantile_dask[1-y-0.25]", "xarray/tests/test_variable.py::TestVariable::test_quantile_dask[1-y-q1]", "xarray/tests/test_variable.py::TestVariable::test_quantile_dask[1-y-q2]", "xarray/tests/test_variable.py::TestVariable::test_quantile_dask[axis1-dim1-0.25]", "xarray/tests/test_variable.py::TestVariable::test_quantile_dask[axis1-dim1-q1]", "xarray/tests/test_variable.py::TestVariable::test_quantile_dask[axis1-dim1-q2]", "xarray/tests/test_variable.py::TestVariable::test_quantile_chunked_dim_error", "xarray/tests/test_variable.py::TestVariable::test_quantile_out_of_bounds[-0.1]", "xarray/tests/test_variable.py::TestVariable::test_quantile_out_of_bounds[1.1]", "xarray/tests/test_variable.py::TestVariable::test_quantile_out_of_bounds[q2]", "xarray/tests/test_variable.py::TestVariable::test_quantile_out_of_bounds[q3]", "xarray/tests/test_variable.py::TestVariable::test_rank_dask_raises", "xarray/tests/test_variable.py::TestVariable::test_rank", "xarray/tests/test_variable.py::TestVariable::test_big_endian_reduce", "xarray/tests/test_variable.py::TestVariable::test_reduce_funcs", "xarray/tests/test_variable.py::TestVariable::test_reduce_keepdims", "xarray/tests/test_variable.py::TestVariable::test_reduce_keepdims_dask", "xarray/tests/test_variable.py::TestVariable::test_reduce_keep_attrs", "xarray/tests/test_variable.py::TestVariable::test_binary_ops_keep_attrs", "xarray/tests/test_variable.py::TestVariable::test_count", "xarray/tests/test_variable.py::TestVariable::test_setitem", "xarray/tests/test_variable.py::TestVariable::test_setitem_fancy", "xarray/tests/test_variable.py::TestVariable::test_coarsen", "xarray/tests/test_variable.py::TestVariable::test_coarsen_2d", "xarray/tests/test_variable.py::TestVariable::test_coarsen_keep_attrs", "xarray/tests/test_variable.py::TestVariableWithDask::test_properties", "xarray/tests/test_variable.py::TestVariableWithDask::test_attrs", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_dict", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_1d", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_with_mask", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_with_mask_size_zero", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_int", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_float", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_string", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_timedelta64", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_not_a_time", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_object", "xarray/tests/test_variable.py::TestVariableWithDask::test_index_and_concat_datetime", "xarray/tests/test_variable.py::TestVariableWithDask::test_0d_time_data", "xarray/tests/test_variable.py::TestVariableWithDask::test_datetime64_conversion", "xarray/tests/test_variable.py::TestVariableWithDask::test_timedelta64_conversion", "xarray/tests/test_variable.py::TestVariableWithDask::test_object_conversion", "xarray/tests/test_variable.py::TestVariableWithDask::test_datetime64_valid_range", "xarray/tests/test_variable.py::TestVariableWithDask::test_pandas_data", "xarray/tests/test_variable.py::TestVariableWithDask::test_pandas_period_index", "xarray/tests/test_variable.py::TestVariableWithDask::test_1d_math", "xarray/tests/test_variable.py::TestVariableWithDask::test_1d_reduce", "xarray/tests/test_variable.py::TestVariableWithDask::test___array__", "xarray/tests/test_variable.py::TestVariableWithDask::test_equals_all_dtypes", "xarray/tests/test_variable.py::TestVariableWithDask::test_encoding_preserved", "xarray/tests/test_variable.py::TestVariableWithDask::test_concat", "xarray/tests/test_variable.py::TestVariableWithDask::test_concat_attrs", "xarray/tests/test_variable.py::TestVariableWithDask::test_concat_fixed_len_str", "xarray/tests/test_variable.py::TestVariableWithDask::test_concat_number_strings", "xarray/tests/test_variable.py::TestVariableWithDask::test_concat_mixed_dtypes", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy[float-True]", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy[float-False]", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy[int-True]", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy[int-False]", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy[str-True]", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy[str-False]", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy_with_data", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy_with_data_errors", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy_index_with_data", "xarray/tests/test_variable.py::TestVariableWithDask::test_copy_index_with_data_errors", "xarray/tests/test_variable.py::TestVariableWithDask::test_replace", "xarray/tests/test_variable.py::TestVariableWithDask::test_real_and_imag", "xarray/tests/test_variable.py::TestVariableWithDask::test_aggregate_complex", "xarray/tests/test_variable.py::TestVariableWithDask::test_pandas_cateogrical_dtype", "xarray/tests/test_variable.py::TestVariableWithDask::test_pandas_datetime64_with_tz", "xarray/tests/test_variable.py::TestVariableWithDask::test_multiindex", "xarray/tests/test_variable.py::TestVariableWithDask::test_load", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_advanced", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_uint_1d", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_uint", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_0d_array", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_error", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg0-np_arg0-mean]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg0-np_arg0-edge]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg0-np_arg0-maximum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg0-np_arg0-minimum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg0-np_arg0-symmetric]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg0-np_arg0-wrap]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg1-np_arg1-mean]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg1-np_arg1-edge]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg1-np_arg1-maximum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg1-np_arg1-minimum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg1-np_arg1-symmetric]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg1-np_arg1-wrap]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg2-np_arg2-mean]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg2-np_arg2-edge]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg2-np_arg2-maximum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg2-np_arg2-minimum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg2-np_arg2-symmetric]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg2-np_arg2-wrap]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg3-np_arg3-mean]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg3-np_arg3-edge]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg3-np_arg3-maximum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg3-np_arg3-minimum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg3-np_arg3-symmetric]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg3-np_arg3-wrap]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg4-np_arg4-mean]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg4-np_arg4-edge]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg4-np_arg4-maximum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg4-np_arg4-minimum]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg4-np_arg4-symmetric]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad[xr_arg4-np_arg4-wrap]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad_constant_values[xr_arg0-np_arg0]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad_constant_values[xr_arg1-np_arg1]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad_constant_values[xr_arg2-np_arg2]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad_constant_values[xr_arg3-np_arg3]", "xarray/tests/test_variable.py::TestVariableWithDask::test_pad_constant_values[xr_arg4-np_arg4]", "xarray/tests/test_variable.py::TestVariableWithDask::test_rolling_window", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_fancy", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_1d_fancy", "xarray/tests/test_variable.py::TestVariableWithDask::test_getitem_with_mask_nd_indexer", "xarray/tests/test_variable.py::TestVariableWithSparse::test_as_sparse", "xarray/tests/test_variable.py::TestIndexVariable::test_properties", "xarray/tests/test_variable.py::TestIndexVariable::test_attrs", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_dict", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_1d", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_1d_fancy", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_with_mask", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_with_mask_size_zero", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_with_mask_nd_indexer", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_int", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_float", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_string", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_datetime", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_timedelta64", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_not_a_time", "xarray/tests/test_variable.py::TestIndexVariable::test_index_0d_object", "xarray/tests/test_variable.py::TestIndexVariable::test_0d_object_array_with_list", "xarray/tests/test_variable.py::TestIndexVariable::test_index_and_concat_datetime", "xarray/tests/test_variable.py::TestIndexVariable::test_0d_time_data", "xarray/tests/test_variable.py::TestIndexVariable::test_datetime64_conversion", "xarray/tests/test_variable.py::TestIndexVariable::test_timedelta64_conversion", "xarray/tests/test_variable.py::TestIndexVariable::test_object_conversion", "xarray/tests/test_variable.py::TestIndexVariable::test_datetime64_valid_range", "xarray/tests/test_variable.py::TestIndexVariable::test_pandas_data", "xarray/tests/test_variable.py::TestIndexVariable::test_pandas_period_index", "xarray/tests/test_variable.py::TestIndexVariable::test_1d_math", "xarray/tests/test_variable.py::TestIndexVariable::test_1d_reduce", "xarray/tests/test_variable.py::TestIndexVariable::test_array_interface", "xarray/tests/test_variable.py::TestIndexVariable::test___array__", "xarray/tests/test_variable.py::TestIndexVariable::test_equals_all_dtypes", "xarray/tests/test_variable.py::TestIndexVariable::test_eq_all_dtypes", "xarray/tests/test_variable.py::TestIndexVariable::test_encoding_preserved", "xarray/tests/test_variable.py::TestIndexVariable::test_concat", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_attrs", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_fixed_len_str", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_number_strings", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_mixed_dtypes", "xarray/tests/test_variable.py::TestIndexVariable::test_copy[float-True]", "xarray/tests/test_variable.py::TestIndexVariable::test_copy[float-False]", "xarray/tests/test_variable.py::TestIndexVariable::test_copy[int-True]", "xarray/tests/test_variable.py::TestIndexVariable::test_copy[int-False]", "xarray/tests/test_variable.py::TestIndexVariable::test_copy[str-True]", "xarray/tests/test_variable.py::TestIndexVariable::test_copy[str-False]", "xarray/tests/test_variable.py::TestIndexVariable::test_copy_index", "xarray/tests/test_variable.py::TestIndexVariable::test_copy_with_data", "xarray/tests/test_variable.py::TestIndexVariable::test_copy_with_data_errors", "xarray/tests/test_variable.py::TestIndexVariable::test_copy_index_with_data", "xarray/tests/test_variable.py::TestIndexVariable::test_copy_index_with_data_errors", "xarray/tests/test_variable.py::TestIndexVariable::test_replace", "xarray/tests/test_variable.py::TestIndexVariable::test_real_and_imag", "xarray/tests/test_variable.py::TestIndexVariable::test_aggregate_complex", "xarray/tests/test_variable.py::TestIndexVariable::test_pandas_cateogrical_dtype", "xarray/tests/test_variable.py::TestIndexVariable::test_pandas_datetime64_with_tz", "xarray/tests/test_variable.py::TestIndexVariable::test_multiindex", "xarray/tests/test_variable.py::TestIndexVariable::test_load", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_uint_1d", "xarray/tests/test_variable.py::TestIndexVariable::test_getitem_0d_array", "xarray/tests/test_variable.py::TestIndexVariable::test_init", "xarray/tests/test_variable.py::TestIndexVariable::test_to_index", "xarray/tests/test_variable.py::TestIndexVariable::test_multiindex_default_level_names", "xarray/tests/test_variable.py::TestIndexVariable::test_data", "xarray/tests/test_variable.py::TestIndexVariable::test_name", "xarray/tests/test_variable.py::TestIndexVariable::test_level_names", "xarray/tests/test_variable.py::TestIndexVariable::test_get_level_variable", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_periods", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_multiindex", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_str_dtype[str]", "xarray/tests/test_variable.py::TestIndexVariable::test_concat_str_dtype[bytes]", "xarray/tests/test_variable.py::TestIndexVariable::test_coordinate_alias", "xarray/tests/test_variable.py::TestIndexVariable::test_datetime64", "xarray/tests/test_variable.py::TestAsCompatibleData::test_unchanged_types", "xarray/tests/test_variable.py::TestAsCompatibleData::test_converted_types", "xarray/tests/test_variable.py::TestAsCompatibleData::test_masked_array", "xarray/tests/test_variable.py::TestAsCompatibleData::test_datetime", "xarray/tests/test_variable.py::TestAsCompatibleData::test_full_like", "xarray/tests/test_variable.py::TestAsCompatibleData::test_full_like_dask", "xarray/tests/test_variable.py::TestAsCompatibleData::test_zeros_like", "xarray/tests/test_variable.py::TestAsCompatibleData::test_ones_like", "xarray/tests/test_variable.py::TestAsCompatibleData::test_unsupported_type", "xarray/tests/test_variable.py::test_raise_no_warning_for_nan_in_binary_ops", "xarray/tests/test_variable.py::TestBackendIndexing::test_NumpyIndexingAdapter", "xarray/tests/test_variable.py::TestBackendIndexing::test_LazilyOuterIndexedArray", "xarray/tests/test_variable.py::TestBackendIndexing::test_CopyOnWriteArray", "xarray/tests/test_variable.py::TestBackendIndexing::test_MemoryCachedArray", "xarray/tests/test_variable.py::TestBackendIndexing::test_DaskIndexingAdapter"]}
{"instance_id": "pydata__xarray-5131", "tests_passing_in_original_repo": ["xarray/tests/test_groupby.py::test_consolidate_slices", "xarray/tests/test_groupby.py::test_groupby_dims_property", "xarray/tests/test_groupby.py::test_multi_index_groupby_map", "xarray/tests/test_groupby.py::test_multi_index_groupby_sum", "xarray/tests/test_groupby.py::test_groupby_da_datetime", "xarray/tests/test_groupby.py::test_groupby_duplicate_coordinate_labels", "xarray/tests/test_groupby.py::test_groupby_input_mutation", "xarray/tests/test_groupby.py::test_groupby_map_shrink_groups[obj0]", "xarray/tests/test_groupby.py::test_groupby_map_shrink_groups[obj1]", "xarray/tests/test_groupby.py::test_groupby_map_change_group_size[obj0]", "xarray/tests/test_groupby.py::test_groupby_map_change_group_size[obj1]", "xarray/tests/test_groupby.py::test_da_groupby_map_func_args", "xarray/tests/test_groupby.py::test_ds_groupby_map_func_args", "xarray/tests/test_groupby.py::test_da_groupby_empty", "xarray/tests/test_groupby.py::test_da_groupby_quantile", "xarray/tests/test_groupby.py::test_ds_groupby_quantile", "xarray/tests/test_groupby.py::test_da_groupby_assign_coords", "xarray/tests/test_groupby.py::test_groupby_repr[obj0-x]", "xarray/tests/test_groupby.py::test_groupby_repr[obj0-y]", "xarray/tests/test_groupby.py::test_groupby_repr[obj0-z]", "xarray/tests/test_groupby.py::test_groupby_repr[obj0-month]", "xarray/tests/test_groupby.py::test_groupby_repr[obj1-x]", "xarray/tests/test_groupby.py::test_groupby_repr[obj1-y]", "xarray/tests/test_groupby.py::test_groupby_repr[obj1-z]", "xarray/tests/test_groupby.py::test_groupby_repr[obj1-month]", "xarray/tests/test_groupby.py::test_groupby_repr_datetime[obj0]", "xarray/tests/test_groupby.py::test_groupby_repr_datetime[obj1]", "xarray/tests/test_groupby.py::test_groupby_drops_nans", "xarray/tests/test_groupby.py::test_groupby_grouping_errors", "xarray/tests/test_groupby.py::test_groupby_reduce_dimension_error", "xarray/tests/test_groupby.py::test_groupby_multiple_string_args", "xarray/tests/test_groupby.py::test_groupby_bins_timeseries", "xarray/tests/test_groupby.py::test_groupby_none_group_name", "xarray/tests/test_groupby.py::test_groupby_getitem"]}
{"instance_id": "pylint-dev__pylint-5859", "tests_passing_in_original_repo": ["tests/checkers/unittest_misc.py::TestFixme::test_fixme_with_message", "tests/checkers/unittest_misc.py::TestFixme::test_todo_without_message", "tests/checkers/unittest_misc.py::TestFixme::test_xxx_without_space", "tests/checkers/unittest_misc.py::TestFixme::test_xxx_middle", "tests/checkers/unittest_misc.py::TestFixme::test_without_space_fixme", "tests/checkers/unittest_misc.py::TestFixme::test_absent_codetag", "tests/checkers/unittest_misc.py::TestFixme::test_other_present_codetag", "tests/checkers/unittest_misc.py::TestFixme::test_issue_2321_should_not_trigger", "tests/checkers/unittest_misc.py::TestFixme::test_issue_2321_should_trigger", "tests/checkers/unittest_misc.py::TestFixme::test_dont_trigger_on_todoist"]}
{"instance_id": "pylint-dev__pylint-6506", "tests_passing_in_original_repo": ["tests/config/test_config.py::test_can_read_toml_env_variable", "tests/config/test_config.py::test_unknown_message_id", "tests/config/test_config.py::test_unknown_option_name", "tests/config/test_config.py::test_unknown_short_option_name", "tests/config/test_config.py::test_unknown_confidence", "tests/config/test_config.py::test_unknown_yes_no", "tests/config/test_config.py::test_unknown_py_version", "tests/config/test_config.py::test_short_verbose"]}
{"instance_id": "pylint-dev__pylint-7080", "tests_passing_in_original_repo": ["tests/test_self.py::TestRunTC::test_pkginfo", "tests/test_self.py::TestRunTC::test_all", "tests/test_self.py::TestRunTC::test_no_ext_file", "tests/test_self.py::TestRunTC::test_w0704_ignored", "tests/test_self.py::TestRunTC::test_exit_zero", "tests/test_self.py::TestRunTC::test_nonexistent_config_file", "tests/test_self.py::TestRunTC::test_error_missing_arguments", "tests/test_self.py::TestRunTC::test_no_out_encoding", "tests/test_self.py::TestRunTC::test_parallel_execution", "tests/test_self.py::TestRunTC::test_parallel_execution_missing_arguments", "tests/test_self.py::TestRunTC::test_enable_all_works", "tests/test_self.py::TestRunTC::test_wrong_import_position_when_others_disabled", "tests/test_self.py::TestRunTC::test_import_itself_not_accounted_for_relative_imports", "tests/test_self.py::TestRunTC::test_reject_empty_indent_strings", "tests/test_self.py::TestRunTC::test_json_report_when_file_has_syntax_error", "tests/test_self.py::TestRunTC::test_json_report_when_file_is_missing", "tests/test_self.py::TestRunTC::test_json_report_does_not_escape_quotes", "tests/test_self.py::TestRunTC::test_information_category_disabled_by_default", "tests/test_self.py::TestRunTC::test_error_mode_shows_no_score", "tests/test_self.py::TestRunTC::test_evaluation_score_shown_by_default", "tests/test_self.py::TestRunTC::test_confidence_levels", "tests/test_self.py::TestRunTC::test_bom_marker", "tests/test_self.py::TestRunTC::test_pylintrc_plugin_duplicate_options", "tests/test_self.py::TestRunTC::test_pylintrc_comments_in_values", "tests/test_self.py::TestRunTC::test_no_crash_with_formatting_regex_defaults", "tests/test_self.py::TestRunTC::test_getdefaultencoding_crashes_with_lc_ctype_utf8", "tests/test_self.py::TestRunTC::test_parseable_file_path", "tests/test_self.py::TestRunTC::test_stdin[/mymodule.py]", "tests/test_self.py::TestRunTC::test_stdin[mymodule.py-mymodule-mymodule.py]", "tests/test_self.py::TestRunTC::test_stdin_missing_modulename", "tests/test_self.py::TestRunTC::test_relative_imports[False]", "tests/test_self.py::TestRunTC::test_relative_imports[True]", "tests/test_self.py::TestRunTC::test_stdin_syntaxerror", "tests/test_self.py::TestRunTC::test_version", "tests/test_self.py::TestRunTC::test_fail_under", "tests/test_self.py::TestRunTC::test_fail_on[-10-missing-function-docstring-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[6-missing-function-docstring-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[7.5-missing-function-docstring-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[7.6-missing-function-docstring-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[-11-missing-function-docstring-fail_under_minus10.py-22]", "tests/test_self.py::TestRunTC::test_fail_on[-10-missing-function-docstring-fail_under_minus10.py-22]", "tests/test_self.py::TestRunTC::test_fail_on[-9-missing-function-docstring-fail_under_minus10.py-22]", "tests/test_self.py::TestRunTC::test_fail_on[-5-missing-function-docstring-fail_under_minus10.py-22]", "tests/test_self.py::TestRunTC::test_fail_on[-10-broad-except-fail_under_plus7_5.py-0]", "tests/test_self.py::TestRunTC::test_fail_on[6-broad-except-fail_under_plus7_5.py-0]", "tests/test_self.py::TestRunTC::test_fail_on[7.5-broad-except-fail_under_plus7_5.py-0]", "tests/test_self.py::TestRunTC::test_fail_on[7.6-broad-except-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[-11-broad-except-fail_under_minus10.py-0]", "tests/test_self.py::TestRunTC::test_fail_on[-10-broad-except-fail_under_minus10.py-0]", "tests/test_self.py::TestRunTC::test_fail_on[-9-broad-except-fail_under_minus10.py-22]", "tests/test_self.py::TestRunTC::test_fail_on[-5-broad-except-fail_under_minus10.py-22]", "tests/test_self.py::TestRunTC::test_fail_on[-10-C0116-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[-10-C-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[-10-fake1,C,fake2-fail_under_plus7_5.py-16]", "tests/test_self.py::TestRunTC::test_fail_on[-10-C0115-fail_under_plus7_5.py-0]", "tests/test_self.py::TestRunTC::test_fail_on_edge_case[opts0-0]", "tests/test_self.py::TestRunTC::test_fail_on_edge_case[opts1-0]", "tests/test_self.py::TestRunTC::test_fail_on_edge_case[opts2-16]", "tests/test_self.py::TestRunTC::test_fail_on_edge_case[opts3-16]", "tests/test_self.py::TestRunTC::test_modify_sys_path", "tests/test_self.py::TestRunTC::test_do_not_import_files_from_local_directory", "tests/test_self.py::TestRunTC::test_do_not_import_files_from_local_directory_with_pythonpath", "tests/test_self.py::TestRunTC::test_import_plugin_from_local_directory_if_pythonpath_cwd", "tests/test_self.py::TestRunTC::test_allow_import_of_files_found_in_modules_during_parallel_check", "tests/test_self.py::TestRunTC::test_can_list_directories_without_dunder_init", "tests/test_self.py::TestRunTC::test_jobs_score", "tests/test_self.py::TestRunTC::test_regression_parallel_mode_without_filepath", "tests/test_self.py::TestRunTC::test_output_file_valid_path", "tests/test_self.py::TestRunTC::test_output_file_invalid_path_exits_with_code_32", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args0-0]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args1-0]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args2-0]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args3-6]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args4-6]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args5-22]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args6-22]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args7-6]", "tests/test_self.py::TestRunTC::test_fail_on_exit_code[args8-22]", "tests/test_self.py::TestRunTC::test_one_module_fatal_error", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args0-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args1-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args2-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args3-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args4-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args5-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args6-0]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args7-1]", "tests/test_self.py::TestRunTC::test_fail_on_info_only_exit_code[args8-1]", "tests/test_self.py::TestRunTC::test_output_file_can_be_combined_with_output_format_option[text-tests/regrtest_data/unused_variable.py:4:4:", "tests/test_self.py::TestRunTC::test_output_file_can_be_combined_with_output_format_option[parseable-tests/regrtest_data/unused_variable.py:4:", "tests/test_self.py::TestRunTC::test_output_file_can_be_combined_with_output_format_option[msvs-tests/regrtest_data/unused_variable.py(4):", "tests/test_self.py::TestRunTC::test_output_file_can_be_combined_with_output_format_option[colorized-tests/regrtest_data/unused_variable.py:4:4:", "tests/test_self.py::TestRunTC::test_output_file_can_be_combined_with_output_format_option[json-\"message\":", "tests/test_self.py::TestRunTC::test_output_file_can_be_combined_with_custom_reporter", "tests/test_self.py::TestRunTC::test_output_file_specified_in_rcfile", "tests/test_self.py::TestRunTC::test_load_text_repoter_if_not_provided", "tests/test_self.py::TestRunTC::test_regex_paths_csv_validator", "tests/test_self.py::TestRunTC::test_max_inferred_for_complicated_class_hierarchy", "tests/test_self.py::TestRunTC::test_regression_recursive", "tests/test_self.py::TestRunTC::test_recursive", "tests/test_self.py::TestRunTC::test_ignore_recursive", "tests/test_self.py::TestRunTC::test_ignore_pattern_recursive", "tests/test_self.py::TestRunTC::test_ignore_path_recursive", "tests/test_self.py::TestRunTC::test_recursive_current_dir", "tests/test_self.py::TestRunTC::test_regression_recursive_current_dir", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command0-Emittable", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command1-Enabled", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command2-nonascii-checker]", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command3-Confidence(name='HIGH',", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command4-pylint.extensions.empty_comment]", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command5-Pylint", "tests/test_self.py::TestCallbackOptions::test_output_of_callback_options[command6-Environment", "tests/test_self.py::TestCallbackOptions::test_help_msg[args0-:unreachable", "tests/test_self.py::TestCallbackOptions::test_help_msg[args1-No", "tests/test_self.py::TestCallbackOptions::test_help_msg[args2---help-msg:", "tests/test_self.py::TestCallbackOptions::test_generate_rcfile", "tests/test_self.py::TestCallbackOptions::test_generate_config_disable_symbolic_names", "tests/test_self.py::TestCallbackOptions::test_errors_only", "tests/test_self.py::TestCallbackOptions::test_errors_only_functions_as_disable", "tests/test_self.py::TestCallbackOptions::test_verbose", "tests/test_self.py::TestCallbackOptions::test_enable_all_extensions"]}
{"instance_id": "pylint-dev__pylint-7114", "tests_passing_in_original_repo": ["tests/checkers/unittest_imports.py::TestImportsChecker::test_relative_beyond_top_level", "tests/checkers/unittest_imports.py::TestImportsChecker::test_relative_beyond_top_level_two", "tests/checkers/unittest_imports.py::TestImportsChecker::test_relative_beyond_top_level_three", "tests/checkers/unittest_imports.py::TestImportsChecker::test_relative_beyond_top_level_four", "tests/lint/unittest_lint.py::test_no_args", "tests/lint/unittest_lint.py::test_one_arg[case0]", "tests/lint/unittest_lint.py::test_one_arg[case1]", "tests/lint/unittest_lint.py::test_one_arg[case2]", "tests/lint/unittest_lint.py::test_one_arg[case3]", "tests/lint/unittest_lint.py::test_one_arg[case4]", "tests/lint/unittest_lint.py::test_two_similar_args[case0]", "tests/lint/unittest_lint.py::test_two_similar_args[case1]", "tests/lint/unittest_lint.py::test_two_similar_args[case2]", "tests/lint/unittest_lint.py::test_two_similar_args[case3]", "tests/lint/unittest_lint.py::test_more_args[case0]", "tests/lint/unittest_lint.py::test_more_args[case1]", "tests/lint/unittest_lint.py::test_more_args[case2]", "tests/lint/unittest_lint.py::test_pylint_visit_method_taken_in_account", "tests/lint/unittest_lint.py::test_enable_message", "tests/lint/unittest_lint.py::test_enable_message_category", "tests/lint/unittest_lint.py::test_message_state_scope", "tests/lint/unittest_lint.py::test_enable_message_block", "tests/lint/unittest_lint.py::test_enable_by_symbol", "tests/lint/unittest_lint.py::test_enable_report", "tests/lint/unittest_lint.py::test_report_output_format_aliased", "tests/lint/unittest_lint.py::test_set_unsupported_reporter", "tests/lint/unittest_lint.py::test_set_option_1", "tests/lint/unittest_lint.py::test_set_option_2", "tests/lint/unittest_lint.py::test_enable_checkers", "tests/lint/unittest_lint.py::test_errors_only", "tests/lint/unittest_lint.py::test_disable_similar", "tests/lint/unittest_lint.py::test_disable_alot", "tests/lint/unittest_lint.py::test_addmessage", "tests/lint/unittest_lint.py::test_addmessage_invalid", "tests/lint/unittest_lint.py::test_load_plugin_command_line", "tests/lint/unittest_lint.py::test_load_plugin_config_file", "tests/lint/unittest_lint.py::test_load_plugin_configuration", "tests/lint/unittest_lint.py::test_init_hooks_called_before_load_plugins", "tests/lint/unittest_lint.py::test_analyze_explicit_script", "tests/lint/unittest_lint.py::test_full_documentation", "tests/lint/unittest_lint.py::test_list_msgs_enabled", "tests/lint/unittest_lint.py::test_pylint_home", "tests/lint/unittest_lint.py::test_pylint_home_from_environ", "tests/lint/unittest_lint.py::test_warn_about_old_home", "tests/lint/unittest_lint.py::test_pylintrc", "tests/lint/unittest_lint.py::test_pylintrc_parentdir", "tests/lint/unittest_lint.py::test_pylintrc_parentdir_no_package", "tests/lint/unittest_lint.py::test_custom_should_analyze_file", "tests/lint/unittest_lint.py::test_multiprocessing[1]", "tests/lint/unittest_lint.py::test_multiprocessing[2]", "tests/lint/unittest_lint.py::test_filename_with__init__", "tests/lint/unittest_lint.py::test_by_module_statement_value", "tests/lint/unittest_lint.py::test_recursive_ignore[--ignore-failing.py]", "tests/lint/unittest_lint.py::test_recursive_ignore[--ignore-ignored_subdirectory]", "tests/lint/unittest_lint.py::test_recursive_ignore[--ignore-patterns-failing.*]", "tests/lint/unittest_lint.py::test_recursive_ignore[--ignore-patterns-ignored_*]", "tests/lint/unittest_lint.py::test_recursive_ignore[--ignore-paths-.*directory/ignored.*]", "tests/lint/unittest_lint.py::test_recursive_ignore[--ignore-paths-.*ignored.*/failing.*]", "tests/lint/unittest_lint.py::test_import_sibling_module_from_namespace", "tests/lint/unittest_lint.py::test_lint_namespace_package_under_dir"]}
{"instance_id": "pylint-dev__pylint-7228", "tests_passing_in_original_repo": ["tests/config/test_config.py::test_can_read_toml_env_variable", "tests/config/test_config.py::test_unknown_message_id", "tests/config/test_config.py::test_unknown_option_name", "tests/config/test_config.py::test_unknown_short_option_name", "tests/config/test_config.py::test_unknown_confidence", "tests/config/test_config.py::test_empty_confidence", "tests/config/test_config.py::test_unknown_yes_no", "tests/config/test_config.py::test_unknown_py_version", "tests/config/test_config.py::test_short_verbose", "tests/config/test_config.py::test_argument_separator"]}
{"instance_id": "pylint-dev__pylint-7993", "tests_passing_in_original_repo": ["tests/reporters/unittest_reporting.py::test_template_option", "tests/reporters/unittest_reporting.py::test_template_option_default", "tests/reporters/unittest_reporting.py::test_template_option_end_line", "tests/reporters/unittest_reporting.py::test_template_option_non_existing", "tests/reporters/unittest_reporting.py::test_deprecation_set_output", "tests/reporters/unittest_reporting.py::test_parseable_output_deprecated", "tests/reporters/unittest_reporting.py::test_parseable_output_regression", "tests/reporters/unittest_reporting.py::test_multi_format_output", "tests/reporters/unittest_reporting.py::test_multi_reporter_independant_messages", "tests/reporters/unittest_reporting.py::test_display_results_is_renamed"]}
{"instance_id": "pytest-dev__pytest-11143", "tests_passing_in_original_repo": ["testing/test_assertrewrite.py::TestAssertionRewrite::test_place_initial_imports", "testing/test_assertrewrite.py::TestAssertionRewrite::test_location_is_set", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite", "testing/test_assertrewrite.py::TestAssertionRewrite::test_name", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertrepr_compare_same_width", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_if_hasattr_fails", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_already_has_message", "testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop", "testing/test_assertrewrite.py::TestAssertionRewrite::test_short_circuit_evaluation", "testing/test_assertrewrite.py::TestAssertionRewrite::test_unary_op", "testing/test_assertrewrite.py::TestAssertionRewrite::test_binary_op", "testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop_percent", "testing/test_assertrewrite.py::TestAssertionRewrite::test_call", "testing/test_assertrewrite.py::TestAssertionRewrite::test_attribute", "testing/test_assertrewrite.py::TestAssertionRewrite::test_comparisons", "testing/test_assertrewrite.py::TestAssertionRewrite::test_len", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_reprcompare", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_raising__bool__in_comparison", "testing/test_assertrewrite.py::TestAssertionRewrite::test_formatchar", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr_non_ascii", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc_more_invalid", "testing/test_assertrewrite.py::test_get_assertion_exprs[trivial]", "testing/test_assertrewrite.py::test_get_assertion_exprs[assert", "testing/test_assertrewrite.py::test_get_assertion_exprs[multiple", "testing/test_assertrewrite.py::test_get_assertion_exprs[latin1", "testing/test_assertrewrite.py::test_get_assertion_exprs[utf-8", "testing/test_assertrewrite.py::test_get_assertion_exprs[multi-line", "testing/test_assertrewrite.py::test_get_assertion_exprs[multi", "testing/test_assertrewrite.py::test_get_assertion_exprs[backslash", "testing/test_assertrewrite.py::test_get_assertion_exprs[assertion", "testing/test_assertrewrite.py::test_get_assertion_exprs[escaped", "testing/test_assertrewrite.py::test_get_assertion_exprs[no", "testing/test_assertrewrite.py::test_try_makedirs", "testing/test_assertrewrite.py::TestPyCacheDir::test_get_cache_dir[c:/tmp/pycs-d:/projects/src/foo.py-c:/tmp/pycs/projects/src]", "testing/test_assertrewrite.py::TestPyCacheDir::test_get_cache_dir[None-d:/projects/src/foo.py-d:/projects/src/__pycache__]", "testing/test_assertrewrite.py::TestPyCacheDir::test_get_cache_dir[/tmp/pycs-/home/projects/src/foo.py-/tmp/pycs/home/projects/src]", "testing/test_assertrewrite.py::TestPyCacheDir::test_get_cache_dir[None-/home/projects/src/foo.py-/home/projects/src/__pycache__]", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_get_maxsize_for_saferepr[0-240]", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_get_maxsize_for_saferepr[1-2400]", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_get_maxsize_for_saferepr[2-None]", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_get_maxsize_for_saferepr[3-None]", "testing/test_assertrewrite.py::TestAssertionRewrite::test_rewrites_plugin_as_a_package", "testing/test_assertrewrite.py::TestAssertionRewrite::test_honors_pep_235", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_multiline", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_tuple", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_expr", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_escape", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_messages_bytes", "testing/test_assertrewrite.py::TestAssertionRewrite::test_at_operator_issue1290", "testing/test_assertrewrite.py::TestAssertionRewrite::test_starred_with_side_effect", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_a_file", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_readonly", "testing/test_assertrewrite.py::TestRewriteOnImport::test_zipfile", "testing/test_assertrewrite.py::TestRewriteOnImport::test_load_resource_via_files_with_rewrite", "testing/test_assertrewrite.py::TestRewriteOnImport::test_readonly", "testing/test_assertrewrite.py::TestRewriteOnImport::test_orphaned_pyc_file", "testing/test_assertrewrite.py::TestRewriteOnImport::test_package", "testing/test_assertrewrite.py::TestRewriteOnImport::test_translate_newlines", "testing/test_assertrewrite.py::TestRewriteOnImport::test_package_without__init__py", "testing/test_assertrewrite.py::TestRewriteOnImport::test_remember_rewritten_modules", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_sys_meta_path_munged", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_write_pyc", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc_success", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_is_same_and_reloads", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_get_data_support", "testing/test_assertrewrite.py::test_issue731", "testing/test_assertrewrite.py::TestIssue925::test_simple_case", "testing/test_assertrewrite.py::TestIssue925::test_long_case", "testing/test_assertrewrite.py::TestIssue925::test_many_brackets", "testing/test_assertrewrite.py::TestIssue2121::test_rewrite_python_files_contain_subdirs", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_dont_rewrite", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_inline_walrus_operator", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_inline_walrus_operator_reverse", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_no_variable_name_conflict", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_true_assertion_and_changes_variable_value", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_fail_assertion", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_boolean_composite", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_compare_boolean_fails", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_boolean_none_fails", "testing/test_assertrewrite.py::TestIssue10743::test_assertion_walrus_operator_value_changes_cleared_after_each_test", "testing/test_assertrewrite.py::TestIssue11028::test_assertion_walrus_operator_in_operand", "testing/test_assertrewrite.py::TestIssue11028::test_assertion_walrus_operator_in_operand_json_dumps", "testing/test_assertrewrite.py::TestIssue11028::test_assertion_walrus_operator_equals_operand_function", "testing/test_assertrewrite.py::TestIssue11028::test_assertion_walrus_operator_equals_operand_function_keyword_arg", "testing/test_assertrewrite.py::TestIssue11028::test_assertion_walrus_operator_equals_operand_function_arg_as_function", "testing/test_assertrewrite.py::TestIssue11028::test_assertion_walrus_operator_gt_operand_function", "testing/test_assertrewrite.py::test_source_mtime_long_long[-1]", "testing/test_assertrewrite.py::test_source_mtime_long_long[1]", "testing/test_assertrewrite.py::test_rewrite_infinite_recursion", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_basic", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_pattern_contains_subdirectories", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_cwd_changed", "testing/test_assertrewrite.py::TestAssertionPass::test_option_default", "testing/test_assertrewrite.py::TestAssertionPass::test_hook_call", "testing/test_assertrewrite.py::TestAssertionPass::test_hook_call_with_parens", "testing/test_assertrewrite.py::TestAssertionPass::test_hook_not_called_without_hookimpl", "testing/test_assertrewrite.py::TestAssertionPass::test_hook_not_called_without_cmd_option", "testing/test_assertrewrite.py::TestPyCacheDir::test_sys_pycache_prefix_integration", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_default_verbosity", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_increased_verbosity", "testing/test_assertrewrite.py::TestReprSizeVerbosity::test_max_increased_verbosity", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_plugin", "testing/test_assertrewrite.py::TestRewriteOnImport::test_dont_write_bytecode", "testing/test_assertrewrite.py::TestRewriteOnImport::test_cached_pyc_includes_pytest_version", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pyc_vs_pyo", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_module_imported_from_conftest", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins_env_var", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_resources_provider_for_loader"]}
{"instance_id": "pytest-dev__pytest-11148", "tests_passing_in_original_repo": ["testing/acceptance_test.py::TestGeneralUsage::test_docstring_on_hookspec", "testing/acceptance_test.py::TestInvocationVariants::test_invoke_with_invalid_type", "testing/acceptance_test.py::TestInvocationVariants::test_invoke_plugin_api", "testing/acceptance_test.py::TestInvocationVariants::test_core_backward_compatibility", "testing/acceptance_test.py::TestInvocationVariants::test_has_plugin", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[*.py-foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[*.py-bar/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[test_*.py-foo/test_foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[tests/*.py-tests/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[/c/*.py-/c/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[/c/foo/*.py-/c/foo/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[tests/**/test*.py-tests/foo/test_foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[tests/**/doc/test*.py-tests/foo/bar/doc/test_foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching[tests/**/doc/**/test*.py-tests/foo/doc/bar/test_foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_matching_abspath", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[*.py-foo.pyc]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[*.py-foo/foo.pyc]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[tests/*.py-foo/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[/c/*.py-/d/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[/c/foo/*.py-/d/foo/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[tests/**/test*.py-tests/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[tests/**/test*.py-foo/test_foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[tests/**/doc/test*.py-tests/foo/bar/doc/foo.py]", "testing/test_pathlib.py::TestFNMatcherPort::test_not_matching[tests/**/doc/test*.py-tests/foo/bar/test_foo.py]", "testing/test_pathlib.py::TestImportPath::test_smoke_test", "testing/test_pathlib.py::TestImportPath::test_import_path_missing_file", "testing/test_pathlib.py::TestImportPath::test_renamed_dir_creates_mismatch", "testing/test_pathlib.py::TestImportPath::test_messy_name", "testing/test_pathlib.py::TestImportPath::test_dir", "testing/test_pathlib.py::TestImportPath::test_a", "testing/test_pathlib.py::TestImportPath::test_b", "testing/test_pathlib.py::TestImportPath::test_c", "testing/test_pathlib.py::TestImportPath::test_d", "testing/test_pathlib.py::TestImportPath::test_import_after", "testing/test_pathlib.py::TestImportPath::test_check_filepath_consistency", "testing/test_pathlib.py::TestImportPath::test_issue131_on__init__", "testing/test_pathlib.py::TestImportPath::test_ensuresyspath_append", "testing/test_pathlib.py::TestImportPath::test_invalid_path", "testing/test_pathlib.py::TestImportPath::test_importmode_importlib", "testing/test_pathlib.py::TestImportPath::test_importmode_twice_is_different_module", "testing/test_pathlib.py::TestImportPath::test_no_meta_path_found", "testing/test_pathlib.py::test_resolve_package_path", "testing/test_pathlib.py::test_package_unimportable", "testing/test_pathlib.py::test_access_denied_during_cleanup", "testing/test_pathlib.py::test_long_path_during_cleanup", "testing/test_pathlib.py::test_get_extended_length_path_str", "testing/test_pathlib.py::test_suppress_error_removing_lock", "testing/test_pathlib.py::test_bestrelpath", "testing/test_pathlib.py::test_commonpath", "testing/test_pathlib.py::test_visit_ignores_errors", "testing/test_pathlib.py::TestImportLibMode::test_importmode_importlib_with_dataclass", "testing/test_pathlib.py::TestImportLibMode::test_importmode_importlib_with_pickle", "testing/test_pathlib.py::TestImportLibMode::test_importmode_importlib_with_pickle_separate_modules", "testing/test_pathlib.py::TestImportLibMode::test_module_name_from_path", "testing/test_pathlib.py::TestImportLibMode::test_insert_missing_modules", "testing/test_pathlib.py::TestImportLibMode::test_parent_contains_child_module_attribute", "testing/acceptance_test.py::TestGeneralUsage::test_config_error", "testing/acceptance_test.py::TestGeneralUsage::test_root_conftest_syntax_error", "testing/acceptance_test.py::TestGeneralUsage::test_early_hook_error_issue38_1", "testing/acceptance_test.py::TestGeneralUsage::test_early_hook_configure_error_issue38", "testing/acceptance_test.py::TestGeneralUsage::test_file_not_found", "testing/acceptance_test.py::TestGeneralUsage::test_file_not_found_unconfigure_issue143", "testing/acceptance_test.py::TestGeneralUsage::test_config_preparse_plugin_option", "testing/acceptance_test.py::TestGeneralUsage::test_early_load_setuptools_name[True]", "testing/acceptance_test.py::TestGeneralUsage::test_early_load_setuptools_name[False]", "testing/acceptance_test.py::TestGeneralUsage::test_assertion_rewrite[prepend]", "testing/acceptance_test.py::TestGeneralUsage::test_assertion_rewrite[append]", "testing/acceptance_test.py::TestGeneralUsage::test_assertion_rewrite[importlib]", "testing/acceptance_test.py::TestGeneralUsage::test_nested_import_error", "testing/acceptance_test.py::TestGeneralUsage::test_not_collectable_arguments", "testing/acceptance_test.py::TestGeneralUsage::test_better_reporting_on_conftest_load_failure", "testing/acceptance_test.py::TestGeneralUsage::test_early_skip", "testing/acceptance_test.py::TestGeneralUsage::test_issue88_initial_file_multinodes", "testing/acceptance_test.py::TestGeneralUsage::test_issue93_initialnode_importing_capturing", "testing/acceptance_test.py::TestGeneralUsage::test_conftest_printing_shows_if_error", "testing/acceptance_test.py::TestGeneralUsage::test_issue109_sibling_conftests_not_loaded", "testing/acceptance_test.py::TestGeneralUsage::test_directory_skipped", "testing/acceptance_test.py::TestGeneralUsage::test_multiple_items_per_collector_byid", "testing/acceptance_test.py::TestGeneralUsage::test_skip_on_generated_funcarg_id", "testing/acceptance_test.py::TestGeneralUsage::test_direct_addressing_selects", "testing/acceptance_test.py::TestGeneralUsage::test_direct_addressing_notfound", "testing/acceptance_test.py::TestGeneralUsage::test_initialization_error_issue49", "testing/acceptance_test.py::TestGeneralUsage::test_issue134_report_error_when_collecting_member[test_fun.py::test_a]", "testing/acceptance_test.py::TestGeneralUsage::test_report_all_failed_collections_initargs", "testing/acceptance_test.py::TestGeneralUsage::test_namespace_import_doesnt_confuse_import_hook", "testing/acceptance_test.py::TestGeneralUsage::test_unknown_option", "testing/acceptance_test.py::TestGeneralUsage::test_getsourcelines_error_issue553", "testing/acceptance_test.py::TestGeneralUsage::test_plugins_given_as_strings", "testing/acceptance_test.py::TestGeneralUsage::test_parametrized_with_bytes_regex", "testing/acceptance_test.py::TestGeneralUsage::test_parametrized_with_null_bytes", "testing/acceptance_test.py::TestInvocationVariants::test_earlyinit", "testing/acceptance_test.py::TestInvocationVariants::test_pydoc", "testing/acceptance_test.py::TestInvocationVariants::test_import_star_pytest", "testing/acceptance_test.py::TestInvocationVariants::test_double_pytestcmdline", "testing/acceptance_test.py::TestInvocationVariants::test_python_minus_m_invocation_ok", "testing/acceptance_test.py::TestInvocationVariants::test_python_minus_m_invocation_fail", "testing/acceptance_test.py::TestInvocationVariants::test_python_pytest_package", "testing/acceptance_test.py::TestInvocationVariants::test_invoke_with_path", "testing/acceptance_test.py::TestInvocationVariants::test_pyargs_importerror", "testing/acceptance_test.py::TestInvocationVariants::test_pyargs_only_imported_once", "testing/acceptance_test.py::TestInvocationVariants::test_pyargs_filename_looks_like_module", "testing/acceptance_test.py::TestInvocationVariants::test_cmdline_python_package", "testing/acceptance_test.py::TestInvocationVariants::test_cmdline_python_namespace_package", "testing/acceptance_test.py::TestInvocationVariants::test_invoke_test_and_doctestmodules", "testing/acceptance_test.py::TestInvocationVariants::test_cmdline_python_package_symlink", "testing/acceptance_test.py::TestInvocationVariants::test_cmdline_python_package_not_exists", "testing/acceptance_test.py::TestInvocationVariants::test_doctest_id", "testing/acceptance_test.py::TestDurations::test_calls", "testing/acceptance_test.py::TestDurations::test_calls_show_2", "testing/acceptance_test.py::TestDurations::test_calls_showall", "testing/acceptance_test.py::TestDurations::test_calls_showall_verbose", "testing/acceptance_test.py::TestDurations::test_with_deselected", "testing/acceptance_test.py::TestDurations::test_with_failing_collection", "testing/acceptance_test.py::TestDurations::test_with_not", "testing/acceptance_test.py::TestDurationsWithFixture::test_setup_function", "testing/acceptance_test.py::test_zipimport_hook", "testing/acceptance_test.py::test_import_plugin_unicode_name", "testing/acceptance_test.py::test_pytest_plugins_as_module", "testing/acceptance_test.py::test_deferred_hook_checking", "testing/acceptance_test.py::test_fixture_order_respects_scope", "testing/acceptance_test.py::test_fixture_mock_integration", "testing/acceptance_test.py::test_usage_error_code", "testing/acceptance_test.py::test_warn_on_async_function", "testing/acceptance_test.py::test_warn_on_async_gen_function", "testing/acceptance_test.py::test_no_brokenpipeerror_message", "testing/acceptance_test.py::test_function_return_non_none_warning", "testing/acceptance_test.py::test_fixture_values_leak", "testing/acceptance_test.py::test_frame_leak_on_failing_test", "testing/acceptance_test.py::test_pdb_can_be_rewritten", "testing/acceptance_test.py::test_tee_stdio_captures_and_live_prints"]}
{"instance_id": "pytest-dev__pytest-5103", "tests_passing_in_original_repo": ["testing/test_assertrewrite.py::TestAssertionRewrite::test_place_initial_imports", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite", "testing/test_assertrewrite.py::TestAssertionRewrite::test_name", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_if_hasattr_fails", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_already_has_message", "testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop", "testing/test_assertrewrite.py::TestAssertionRewrite::test_short_circuit_evaluation", "testing/test_assertrewrite.py::TestAssertionRewrite::test_unary_op", "testing/test_assertrewrite.py::TestAssertionRewrite::test_binary_op", "testing/test_assertrewrite.py::TestAssertionRewrite::test_boolop_percent", "testing/test_assertrewrite.py::TestAssertionRewrite::test_call", "testing/test_assertrewrite.py::TestAssertionRewrite::test_attribute", "testing/test_assertrewrite.py::TestAssertionRewrite::test_comparisons", "testing/test_assertrewrite.py::TestAssertionRewrite::test_len", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_reprcompare", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assert_raising_nonzero_in_comparison", "testing/test_assertrewrite.py::TestAssertionRewrite::test_formatchar", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr", "testing/test_assertrewrite.py::TestAssertionRewrite::test_custom_repr_non_ascii", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_read_pyc", "testing/test_assertrewrite.py::TestAssertionRewrite::test_dont_rewrite_plugin", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_multiline", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_tuple", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_expr", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_message_escape", "testing/test_assertrewrite.py::TestAssertionRewrite::test_assertion_messages_bytes", "testing/test_assertrewrite.py::TestAssertionRewrite::test_at_operator_issue1290", "testing/test_assertrewrite.py::TestAssertionRewrite::test_starred_with_side_effect", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_a_file", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pycache_is_readonly", "testing/test_assertrewrite.py::TestRewriteOnImport::test_zipfile", "testing/test_assertrewrite.py::TestRewriteOnImport::test_readonly", "testing/test_assertrewrite.py::TestRewriteOnImport::test_dont_write_bytecode", "testing/test_assertrewrite.py::TestRewriteOnImport::test_orphaned_pyc_file", "testing/test_assertrewrite.py::TestRewriteOnImport::test_pyc_vs_pyo", "testing/test_assertrewrite.py::TestRewriteOnImport::test_package", "testing/test_assertrewrite.py::TestRewriteOnImport::test_translate_newlines", "testing/test_assertrewrite.py::TestRewriteOnImport::test_package_without__init__py", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_module_imported_from_conftest", "testing/test_assertrewrite.py::TestRewriteOnImport::test_remember_rewritten_modules", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins", "testing/test_assertrewrite.py::TestRewriteOnImport::test_rewrite_warning_using_pytest_plugins_env_var", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_false_for_module", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_loader_is_package_true_for_package", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_sys_meta_path_munged", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_write_pyc", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_resources_provider_for_loader", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_is_same", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_reload_reloads", "testing/test_assertrewrite.py::TestAssertionRewriteHookDetails::test_get_data_support", "testing/test_assertrewrite.py::test_issue731", "testing/test_assertrewrite.py::TestIssue925::test_simple_case", "testing/test_assertrewrite.py::TestIssue925::test_long_case", "testing/test_assertrewrite.py::TestIssue925::test_many_brackets", "testing/test_assertrewrite.py::TestIssue2121::test_rewrite_python_files_contain_subdirs", "testing/test_assertrewrite.py::test_source_mtime_long_long[-1]", "testing/test_assertrewrite.py::test_source_mtime_long_long[1]", "testing/test_assertrewrite.py::test_rewrite_infinite_recursion", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_basic", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_pattern_contains_subdirectories", "testing/test_assertrewrite.py::TestEarlyRewriteBailout::test_cwd_changed"]}
{"instance_id": "pytest-dev__pytest-5221", "tests_passing_in_original_repo": ["testing/python/fixtures.py::test_getfuncargnames", "testing/python/fixtures.py::TestFillFixtures::test_fillfuncargs_exposed", "testing/python/fixtures.py::TestShowFixtures::test_fixture_disallow_twice", "testing/python/fixtures.py::test_call_fixture_function_error", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookupfails", "testing/python/fixtures.py::TestFillFixtures::test_detect_recursive_dependency_error", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_basic", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_modulelevel", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_classlevel", "testing/python/fixtures.py::TestFillFixtures::test_conftest_funcargs_only_available_in_subdir", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_module_class", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_module", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_conftest", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_plugin", "testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_plugin_plugin", "testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_module", "testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_conftest", "testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_module", "testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_conftest", "testing/python/fixtures.py::TestFillFixtures::test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest", "testing/python/fixtures.py::TestFillFixtures::test_autouse_fixture_plugin", "testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_error", "testing/python/fixtures.py::TestFillFixtures::test_fixture_excinfo_leak", "testing/python/fixtures.py::TestRequestBasic::test_request_attributes", "testing/python/fixtures.py::TestRequestBasic::test_request_attributes_method", "testing/python/fixtures.py::TestRequestBasic::test_request_contains_funcarg_arg2fixturedefs", "testing/python/fixtures.py::TestRequestBasic::test_request_garbage", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_recursive", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_teardown", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfixturevalue]", "testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfuncargvalue]", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup_module", "testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_partial_setup_failure", "testing/python/fixtures.py::TestRequestBasic::test_request_subrequest_addfinalizer_exceptions", "testing/python/fixtures.py::TestRequestBasic::test_request_getmodulepath", "testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames", "testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames_dynamic_fixture", "testing/python/fixtures.py::TestRequestBasic::test_funcargnames_compatattr", "testing/python/fixtures.py::TestRequestBasic::test_setupdecorator_and_xunit", "testing/python/fixtures.py::TestRequestBasic::test_fixtures_sub_subdir_normalize_sep", "testing/python/fixtures.py::TestRequestBasic::test_show_fixtures_color_yes", "testing/python/fixtures.py::TestRequestBasic::test_newstyle_with_request", "testing/python/fixtures.py::TestRequestBasic::test_setupcontext_no_param", "testing/python/fixtures.py::TestRequestMarking::test_applymarker", "testing/python/fixtures.py::TestRequestMarking::test_accesskeywords", "testing/python/fixtures.py::TestRequestMarking::test_accessmarker_dynamic", "testing/python/fixtures.py::TestFixtureUsages::test_noargfixturedec", "testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs", "testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch", "testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch_issue660", "testing/python/fixtures.py::TestFixtureUsages::test_invalid_scope", "testing/python/fixtures.py::TestFixtureUsages::test_funcarg_parametrized_and_used_twice", "testing/python/fixtures.py::TestFixtureUsages::test_factory_uses_unknown_funcarg_as_dependency_error", "testing/python/fixtures.py::TestFixtureUsages::test_factory_setup_as_classes_fails", "testing/python/fixtures.py::TestFixtureUsages::test_request_can_be_overridden", "testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_marker", "testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_ini", "testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_seen_in_showmarkers", "testing/python/fixtures.py::TestFixtureUsages::test_request_instance_issue203", "testing/python/fixtures.py::TestFixtureUsages::test_fixture_parametrized_with_iterator", "testing/python/fixtures.py::TestFixtureUsages::test_setup_functions_as_fixtures", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_evil_objects_issue214", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest_and_module_and_class", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_relative_node_ids", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_xunit_fixture", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_fixture_complex", "testing/python/fixtures.py::TestFixtureManagerParseFactories::test_collect_custom_items", "testing/python/fixtures.py::TestAutouseDiscovery::test_parsefactories_conftest", "testing/python/fixtures.py::TestAutouseDiscovery::test_two_classes_separated_autouse", "testing/python/fixtures.py::TestAutouseDiscovery::test_setup_at_classlevel", "testing/python/fixtures.py::TestAutouseDiscovery::test_callables_nocode", "testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_conftests", "testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_module_and_two_classes", "testing/python/fixtures.py::TestAutouseManagement::test_autouse_conftest_mid_directory", "testing/python/fixtures.py::TestAutouseManagement::test_funcarg_and_setup", "testing/python/fixtures.py::TestAutouseManagement::test_uses_parametrized_resource", "testing/python/fixtures.py::TestAutouseManagement::test_session_parametrized_function", "testing/python/fixtures.py::TestAutouseManagement::test_class_function_parametrization_finalization", "testing/python/fixtures.py::TestAutouseManagement::test_scope_ordering", "testing/python/fixtures.py::TestAutouseManagement::test_parametrization_setup_teardown_ordering", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_autouse_before_explicit", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p00]", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p01]", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p00]", "testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p01]", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize", "testing/python/fixtures.py::TestFixtureMarker::test_multiple_parametrization_issue_736", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,val']", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[['fixt',", "testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[('fixt',", "testing/python/fixtures.py::TestFixtureMarker::test_scope_session", "testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc", "testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc_two_fix", "testing/python/fixtures.py::TestFixtureMarker::test_scope_exc", "testing/python/fixtures.py::TestFixtureMarker::test_scope_module_uses_session", "testing/python/fixtures.py::TestFixtureMarker::test_scope_module_and_finalizer", "testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch_various", "testing/python/fixtures.py::TestFixtureMarker::test_register_only_with_mark", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_and_scope", "testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order", "testing/python/fixtures.py::TestFixtureMarker::test_module_parametrized_ordering", "testing/python/fixtures.py::TestFixtureMarker::test_dynamic_parametrized_ordering", "testing/python/fixtures.py::TestFixtureMarker::test_class_ordering", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order_higher_scope_first", "testing/python/fixtures.py::TestFixtureMarker::test_parametrized_fixture_teardown_order", "testing/python/fixtures.py::TestFixtureMarker::test_fixture_finalizer", "testing/python/fixtures.py::TestFixtureMarker::test_class_scope_with_normal_tests", "testing/python/fixtures.py::TestFixtureMarker::test_request_is_clean", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_lifecycle", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_function_scoped_finalizers_called", "testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[session]", "testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[function]", "testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[module]", "testing/python/fixtures.py::TestFixtureMarker::test_class_scope_parametrization_ordering", "testing/python/fixtures.py::TestFixtureMarker::test_parametrize_setup_function", "testing/python/fixtures.py::TestFixtureMarker::test_fixture_marked_function_not_collected_as_test", "testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids", "testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids_yieldfixture", "testing/python/fixtures.py::TestFixtureMarker::test_deterministic_fixture_collection", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[session--fspath", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[module-module", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[class-module", "testing/python/fixtures.py::TestRequestScopeAccess::test_setup[function-module", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[session--fspath", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[module-module", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[class-module", "testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[function-module", "testing/python/fixtures.py::TestErrors::test_subfactory_missing_funcarg", "testing/python/fixtures.py::TestErrors::test_issue498_fixture_finalizer_failing", "testing/python/fixtures.py::TestErrors::test_setupfunc_missing_funcarg", "testing/python/fixtures.py::TestShowFixtures::test_funcarg_compat", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_verbose", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_testmodule", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[True]", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[False]", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_trimmed_doc", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc_first_line_unindented", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_in_class", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_different_files", "testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_with_same_name", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[yield_fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[yield_fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[yield_fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[yield_fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[yield_fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[fixture]", "testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[yield_fixture]", "testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_fixture", "testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_test", "testing/python/fixtures.py::TestParameterizedSubRequest::test_external_fixture", "testing/python/fixtures.py::TestParameterizedSubRequest::test_non_relative_path", "testing/python/fixtures.py::test_pytest_fixture_setup_and_post_finalizer_hook", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[mark]", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[autouse]", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_with_native_fixtures", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_scopes_reordered", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_same_scope_closer_root_first", "testing/python/fixtures.py::TestScopeOrdering::test_func_closure_all_scopes_complex", "testing/python/fixtures.py::TestScopeOrdering::test_multiple_packages"]}
{"instance_id": "pytest-dev__pytest-5227", "tests_passing_in_original_repo": ["[100%]", "[", "[100%]------------------------------", "testing/logging/test_reporting.py::test_live_logging_suspends_capture[True]", "testing/logging/test_reporting.py::test_live_logging_suspends_capture[False]", "testing/logging/test_reporting.py::test_nothing_logged", "testing/logging/test_reporting.py::test_messages_logged", "testing/logging/test_reporting.py::test_root_logger_affected", "testing/logging/test_reporting.py::test_log_cli_level_log_level_interaction", "testing/logging/test_reporting.py::test_setup_logging", "testing/logging/test_reporting.py::test_teardown_logging", "testing/logging/test_reporting.py::test_disable_log_capturing", "testing/logging/test_reporting.py::test_disable_log_capturing_ini", "testing/logging/test_reporting.py::test_log_cli_enabled_disabled[True]", "testing/logging/test_reporting.py::test_log_cli_enabled_disabled[False]", "testing/logging/test_reporting.py::test_log_cli_default_level", "testing/logging/test_reporting.py::test_log_cli_default_level_multiple_tests", "testing/logging/test_reporting.py::test_log_cli_default_level_sections", "testing/logging/test_reporting.py::test_live_logs_unknown_sections", "testing/logging/test_reporting.py::test_sections_single_new_line_after_test_outcome", "testing/logging/test_reporting.py::test_log_cli_level", "testing/logging/test_reporting.py::test_log_cli_ini_level", "testing/logging/test_reporting.py::test_log_cli_auto_enable[]", "testing/logging/test_reporting.py::test_log_cli_auto_enable[--log-level=WARNING]", "testing/logging/test_reporting.py::test_log_cli_auto_enable[--log-file-level=WARNING]", "testing/logging/test_reporting.py::test_log_cli_auto_enable[--log-cli-level=WARNING]", "testing/logging/test_reporting.py::test_log_file_cli", "testing/logging/test_reporting.py::test_log_file_cli_level", "testing/logging/test_reporting.py::test_log_level_not_changed_by_default", "testing/logging/test_reporting.py::test_log_file_ini", "testing/logging/test_reporting.py::test_log_file_ini_level", "testing/logging/test_reporting.py::test_log_file_unicode", "testing/logging/test_reporting.py::test_collection_live_logging", "testing/logging/test_reporting.py::test_collection_logging_to_file", "testing/logging/test_reporting.py::test_log_in_hooks", "testing/logging/test_reporting.py::test_log_in_runtest_logreport", "testing/logging/test_reporting.py::test_log_set_path"]}
{"instance_id": "pytest-dev__pytest-5413", "tests_passing_in_original_repo": ["testing/code/test_excinfo.py::test_excinfo_simple", "testing/code/test_excinfo.py::test_excinfo_getstatement", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_entries", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_entry_getsource", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_entry_getsource_in_construct", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_cut", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_filter", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_filter_selective[<lambda>-True]", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_filter_selective[<lambda>-False]", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_filter_selective[tracebackhide2-True]", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_filter_selective[tracebackhide3-False]", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_recursion_index", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_only_specific_recursion_errors", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_no_recursion_index", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_getcrashentry", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_getcrashentry_empty", "testing/code/test_excinfo.py::test_excinfo_exconly", "testing/code/test_excinfo.py::test_excinfo_repr", "testing/code/test_excinfo.py::test_excinfo_str", "testing/code/test_excinfo.py::test_excinfo_for_later", "testing/code/test_excinfo.py::test_excinfo_errisinstance", "testing/code/test_excinfo.py::test_excinfo_no_sourcecode", "testing/code/test_excinfo.py::test_entrysource_Queue_example", "testing/code/test_excinfo.py::test_codepath_Queue_example", "testing/code/test_excinfo.py::test_match_succeeds", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source_excinfo", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source_not_existing", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_many_line_source_not_existing", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source_failing_fullsource", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_local", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_local_with_error", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_local_with_exception_in_class_property", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_local_truncated", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_tracebackentry_lines", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_tracebackentry_lines2", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_tracebackentry_lines_var_kw_args", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_tracebackentry_short", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_tracebackentry_no", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_traceback_tbfilter", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_traceback_short_no_source", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_traceback_and_excinfo", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_traceback_with_invalid_cwd", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_excinfo_addouterr", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_excinfo_reprcrash", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_traceback_recursion", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_reprexcinfo_getrepr", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_reprexcinfo_unicode", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_toterminal_long", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_toterminal_long_missing_source", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_toterminal_long_incomplete_source", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_toterminal_long_filenames", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions0]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions1]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions2]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions3]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions4]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions5]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions6]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions7]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions8]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions9]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions10]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions11]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions12]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions13]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions14]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions15]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions16]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions17]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions18]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions19]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions20]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions21]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions22]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_format_excinfo[reproptions23]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_traceback_repr_style", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_exc_chain_repr", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_exc_repr_chain_suppression[from_none]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_exc_repr_chain_suppression[explicit_suppress]", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_exc_chain_repr_without_traceback[cause-The", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_exc_chain_repr_without_traceback[context-During", "testing/code/test_excinfo.py::TestFormattedExcinfo::test_exc_chain_repr_cycle", "testing/code/test_excinfo.py::test_repr_traceback_with_unicode[None-short]", "testing/code/test_excinfo.py::test_repr_traceback_with_unicode[None-long]", "testing/code/test_excinfo.py::test_repr_traceback_with_unicode[utf8-short]", "testing/code/test_excinfo.py::test_repr_traceback_with_unicode[utf8-long]", "testing/code/test_excinfo.py::test_repr_traceback_with_unicode[utf16-short]", "testing/code/test_excinfo.py::test_repr_traceback_with_unicode[utf16-long]", "testing/code/test_excinfo.py::test_exception_repr_extraction_error_on_recursion", "testing/code/test_excinfo.py::test_no_recursion_index_on_recursion_error", "testing/code/test_excinfo.py::TestTraceback_f_g_h::test_traceback_cut_excludepath", "testing/code/test_excinfo.py::test_match_raises_error", "testing/code/test_excinfo.py::test_cwd_deleted"]}
{"instance_id": "pytest-dev__pytest-5495", "tests_passing_in_original_repo": ["testing/test_assertion.py::TestImportHookInstallation::test_register_assert_rewrite_checks_types", "testing/test_assertion.py::TestAssert_reprcompare::test_different_types", "testing/test_assertion.py::TestAssert_reprcompare::test_summary", "testing/test_assertion.py::TestAssert_reprcompare::test_text_diff", "testing/test_assertion.py::TestAssert_reprcompare::test_text_skipping", "testing/test_assertion.py::TestAssert_reprcompare::test_text_skipping_verbose", "testing/test_assertion.py::TestAssert_reprcompare::test_multiline_text_diff", "testing/test_assertion.py::TestAssert_reprcompare::test_list", "testing/test_assertion.py::TestAssert_reprcompare::test_iterable_full_diff[left0-right0-\\n", "testing/test_assertion.py::TestAssert_reprcompare::test_iterable_full_diff[left1-right1-\\n", "testing/test_assertion.py::TestAssert_reprcompare::test_iterable_full_diff[left2-right2-\\n", "testing/test_assertion.py::TestAssert_reprcompare::test_list_different_lengths", "testing/test_assertion.py::TestAssert_reprcompare::test_dict", "testing/test_assertion.py::TestAssert_reprcompare::test_dict_omitting", "testing/test_assertion.py::TestAssert_reprcompare::test_dict_omitting_with_verbosity_1", "testing/test_assertion.py::TestAssert_reprcompare::test_dict_omitting_with_verbosity_2", "testing/test_assertion.py::TestAssert_reprcompare::test_dict_different_items", "testing/test_assertion.py::TestAssert_reprcompare::test_sequence_different_items", "testing/test_assertion.py::TestAssert_reprcompare::test_set", "testing/test_assertion.py::TestAssert_reprcompare::test_frozenzet", "testing/test_assertion.py::TestAssert_reprcompare::test_Sequence", "testing/test_assertion.py::TestAssert_reprcompare::test_list_tuples", "testing/test_assertion.py::TestAssert_reprcompare::test_repr_verbose", "testing/test_assertion.py::TestAssert_reprcompare::test_list_bad_repr", "testing/test_assertion.py::TestAssert_reprcompare::test_one_repr_empty", "testing/test_assertion.py::TestAssert_reprcompare::test_repr_no_exc", "testing/test_assertion.py::TestAssert_reprcompare::test_unicode", "testing/test_assertion.py::TestAssert_reprcompare::test_nonascii_text", "testing/test_assertion.py::TestAssert_reprcompare::test_format_nonascii_explanation", "testing/test_assertion.py::TestAssert_reprcompare::test_mojibake", "testing/test_assertion.py::TestAssert_reprcompare_attrsclass::test_comparing_two_different_attrs_classes", "testing/test_assertion.py::TestFormatExplanation::test_fmt_simple", "testing/test_assertion.py::TestFormatExplanation::test_fmt_where", "testing/test_assertion.py::TestFormatExplanation::test_fmt_and", "testing/test_assertion.py::TestFormatExplanation::test_fmt_where_nested", "testing/test_assertion.py::TestFormatExplanation::test_fmt_newline", "testing/test_assertion.py::TestFormatExplanation::test_fmt_newline_escaped", "testing/test_assertion.py::TestFormatExplanation::test_fmt_newline_before_where", "testing/test_assertion.py::TestFormatExplanation::test_fmt_multi_newline_before_where", "testing/test_assertion.py::TestTruncateExplanation::test_doesnt_truncate_when_input_is_empty_list", "testing/test_assertion.py::TestTruncateExplanation::test_doesnt_truncate_at_when_input_is_5_lines_and_LT_max_chars", "testing/test_assertion.py::TestTruncateExplanation::test_truncates_at_8_lines_when_given_list_of_empty_strings", "testing/test_assertion.py::TestTruncateExplanation::test_truncates_at_8_lines_when_first_8_lines_are_LT_max_chars", "testing/test_assertion.py::TestTruncateExplanation::test_truncates_at_8_lines_when_first_8_lines_are_EQ_max_chars", "testing/test_assertion.py::TestTruncateExplanation::test_truncates_at_4_lines_when_first_4_lines_are_GT_max_chars", "testing/test_assertion.py::TestTruncateExplanation::test_truncates_at_1_line_when_first_line_is_GT_max_chars", "testing/test_assertion.py::test_reprcompare_notin", "testing/test_assertion.py::test_reprcompare_whitespaces", "testing/test_assertion.py::test_exit_from_assertrepr_compare", "testing/test_assertion.py::TestImportHookInstallation::test_conftest_assertion_rewrite[plain-True]", "testing/test_assertion.py::TestImportHookInstallation::test_conftest_assertion_rewrite[plain-False]", "testing/test_assertion.py::TestImportHookInstallation::test_conftest_assertion_rewrite[rewrite-True]", "testing/test_assertion.py::TestImportHookInstallation::test_conftest_assertion_rewrite[rewrite-False]", "testing/test_assertion.py::TestImportHookInstallation::test_rewrite_assertions_pytester_plugin", "testing/test_assertion.py::TestImportHookInstallation::test_pytest_plugins_rewrite[plain]", "testing/test_assertion.py::TestImportHookInstallation::test_pytest_plugins_rewrite[rewrite]", "testing/test_assertion.py::TestImportHookInstallation::test_pytest_plugins_rewrite_module_names[str]", "testing/test_assertion.py::TestImportHookInstallation::test_pytest_plugins_rewrite_module_names[list]", "testing/test_assertion.py::TestImportHookInstallation::test_pytest_plugins_rewrite_module_names_correctly", "testing/test_assertion.py::TestImportHookInstallation::test_rewrite_ast", "testing/test_assertion.py::TestBinReprIntegration::test_pytest_assertrepr_compare_called", "testing/test_assertion.py::TestAssert_reprcompare_dataclass::test_dataclasses", "testing/test_assertion.py::TestAssert_reprcompare_dataclass::test_dataclasses_verbose", "testing/test_assertion.py::TestAssert_reprcompare_dataclass::test_dataclasses_with_attribute_comparison_off", "testing/test_assertion.py::TestAssert_reprcompare_dataclass::test_comparing_two_different_data_classes", "testing/test_assertion.py::TestFormatExplanation::test_special_chars_full", "testing/test_assertion.py::TestTruncateExplanation::test_full_output_truncated", "testing/test_assertion.py::test_python25_compile_issue257", "testing/test_assertion.py::test_rewritten", "testing/test_assertion.py::test_pytest_assertrepr_compare_integration", "testing/test_assertion.py::test_sequence_comparison_uses_repr", "testing/test_assertion.py::test_assertrepr_loaded_per_dir", "testing/test_assertion.py::test_assertion_options", "testing/test_assertion.py::test_triple_quoted_string_issue113", "testing/test_assertion.py::test_traceback_failure", "testing/test_assertion.py::test_exception_handling_no_traceback", "testing/test_assertion.py::test_warn_missing", "testing/test_assertion.py::test_recursion_source_decode", "testing/test_assertion.py::test_AssertionError_message", "testing/test_assertion.py::test_diff_newline_at_end", "testing/test_assertion.py::test_assert_tuple_warning", "testing/test_assertion.py::test_assert_indirect_tuple_no_warning", "testing/test_assertion.py::test_assert_with_unicode", "testing/test_assertion.py::test_raise_unprintable_assertion_error", "testing/test_assertion.py::test_raise_assertion_error_raisin_repr", "testing/test_assertion.py::test_issue_1944"]}
{"instance_id": "pytest-dev__pytest-5692", "tests_passing_in_original_repo": ["testing/test_junitxml.py::test_mangle_test_address", "testing/test_junitxml.py::test_dont_configure_on_slaves", "testing/test_junitxml.py::test_invalid_xml_escape", "testing/test_junitxml.py::test_logxml_path_expansion", "testing/test_junitxml.py::TestPython::test_summing_simple", "testing/test_junitxml.py::TestPython::test_summing_simple_with_errors", "testing/test_junitxml.py::TestPython::test_timing_function", "testing/test_junitxml.py::TestPython::test_junit_duration_report[call]", "testing/test_junitxml.py::TestPython::test_junit_duration_report[total]", "testing/test_junitxml.py::TestPython::test_setup_error", "testing/test_junitxml.py::TestPython::test_teardown_error", "testing/test_junitxml.py::TestPython::test_call_failure_teardown_error", "testing/test_junitxml.py::TestPython::test_skip_contains_name_reason", "testing/test_junitxml.py::TestPython::test_mark_skip_contains_name_reason", "testing/test_junitxml.py::TestPython::test_mark_skipif_contains_name_reason", "testing/test_junitxml.py::TestPython::test_mark_skip_doesnt_capture_output", "testing/test_junitxml.py::TestPython::test_classname_instance", "testing/test_junitxml.py::TestPython::test_classname_nested_dir", "testing/test_junitxml.py::TestPython::test_internal_error", "testing/test_junitxml.py::TestPython::test_failure_function[no]", "testing/test_junitxml.py::TestPython::test_failure_function[system-out]", "testing/test_junitxml.py::TestPython::test_failure_function[system-err]", "testing/test_junitxml.py::TestPython::test_failure_verbose_message", "testing/test_junitxml.py::TestPython::test_failure_escape", "testing/test_junitxml.py::TestPython::test_junit_prefixing", "testing/test_junitxml.py::TestPython::test_xfailure_function", "testing/test_junitxml.py::TestPython::test_xfailure_marker", "testing/test_junitxml.py::TestPython::test_xfail_captures_output_once", "testing/test_junitxml.py::TestPython::test_xfailure_xpass", "testing/test_junitxml.py::TestPython::test_xfailure_xpass_strict", "testing/test_junitxml.py::TestPython::test_collect_error", "testing/test_junitxml.py::TestPython::test_unicode", "testing/test_junitxml.py::TestPython::test_assertion_binchars", "testing/test_junitxml.py::TestPython::test_pass_captures_stdout", "testing/test_junitxml.py::TestPython::test_pass_captures_stderr", "testing/test_junitxml.py::TestPython::test_setup_error_captures_stdout", "testing/test_junitxml.py::TestPython::test_setup_error_captures_stderr", "testing/test_junitxml.py::TestPython::test_avoid_double_stdout", "testing/test_junitxml.py::TestNonPython::test_summing_simple", "testing/test_junitxml.py::test_nullbyte", "testing/test_junitxml.py::test_nullbyte_replace", "testing/test_junitxml.py::test_logxml_changingdir", "testing/test_junitxml.py::test_logxml_makedir", "testing/test_junitxml.py::test_logxml_check_isdir", "testing/test_junitxml.py::test_escaped_parametrized_names_xml", "testing/test_junitxml.py::test_double_colon_split_function_issue469", "testing/test_junitxml.py::test_double_colon_split_method_issue469", "testing/test_junitxml.py::test_unicode_issue368", "testing/test_junitxml.py::test_record_property", "testing/test_junitxml.py::test_record_property_same_name", "testing/test_junitxml.py::test_record_fixtures_without_junitxml[record_property]", "testing/test_junitxml.py::test_record_fixtures_without_junitxml[record_xml_attribute]", "testing/test_junitxml.py::test_record_attribute", "testing/test_junitxml.py::test_record_fixtures_xunit2[record_xml_attribute]", "testing/test_junitxml.py::test_record_fixtures_xunit2[record_property]", "testing/test_junitxml.py::test_root_testsuites_tag", "testing/test_junitxml.py::test_runs_twice", "testing/test_junitxml.py::test_fancy_items_regression", "testing/test_junitxml.py::test_global_properties", "testing/test_junitxml.py::test_url_property", "testing/test_junitxml.py::test_record_testsuite_property", "testing/test_junitxml.py::test_record_testsuite_property_junit_disabled", "testing/test_junitxml.py::test_record_testsuite_property_type_checking[True]", "testing/test_junitxml.py::test_record_testsuite_property_type_checking[False]", "testing/test_junitxml.py::test_set_suite_name[my_suite]", "testing/test_junitxml.py::test_set_suite_name[]", "testing/test_junitxml.py::test_escaped_skipreason_issue3533", "testing/test_junitxml.py::test_logging_passing_tests_disabled_does_not_log_test_output"]}
{"instance_id": "pytest-dev__pytest-6116", "tests_passing_in_original_repo": ["testing/test_collection.py::TestCollector::test_collect_versus_item", "testing/test_collection.py::TestCollector::test_check_equality", "testing/test_collection.py::TestCollector::test_getparent", "testing/test_collection.py::TestCollector::test_getcustomfile_roundtrip", "testing/test_collection.py::TestCollector::test_can_skip_class_with_test_attr", "testing/test_collection.py::TestCollectFS::test_ignored_certain_directories", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs[activate]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs[activate.csh]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs[activate.fish]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs[Activate]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs[Activate.bat]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs[Activate.ps1]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs_norecursedirs_precedence[activate]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs_norecursedirs_precedence[activate.csh]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs_norecursedirs_precedence[activate.fish]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs_norecursedirs_precedence[Activate]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs_norecursedirs_precedence[Activate.bat]", "testing/test_collection.py::TestCollectFS::test_ignored_virtualenvs_norecursedirs_precedence[Activate.ps1]", "testing/test_collection.py::TestCollectFS::test__in_venv[activate]", "testing/test_collection.py::TestCollectFS::test__in_venv[activate.csh]", "testing/test_collection.py::TestCollectFS::test__in_venv[activate.fish]", "testing/test_collection.py::TestCollectFS::test__in_venv[Activate]", "testing/test_collection.py::TestCollectFS::test__in_venv[Activate.bat]", "testing/test_collection.py::TestCollectFS::test__in_venv[Activate.ps1]", "testing/test_collection.py::TestCollectFS::test_custom_norecursedirs", "testing/test_collection.py::TestCollectFS::test_testpaths_ini", "testing/test_collection.py::TestCollectPluginHookRelay::test_pytest_collect_file", "testing/test_collection.py::TestCollectPluginHookRelay::test_pytest_collect_directory", "testing/test_collection.py::TestPrunetraceback::test_custom_repr_failure", "testing/test_collection.py::TestCustomConftests::test_ignore_collect_path", "testing/test_collection.py::TestCustomConftests::test_ignore_collect_not_called_on_argument", "testing/test_collection.py::TestCustomConftests::test_collectignore_exclude_on_option", "testing/test_collection.py::TestCustomConftests::test_collectignoreglob_exclude_on_option", "testing/test_collection.py::TestCustomConftests::test_pytest_fs_collect_hooks_are_seen", "testing/test_collection.py::TestCustomConftests::test_pytest_collect_file_from_sister_dir", "testing/test_collection.py::TestSession::test_parsearg", "testing/test_collection.py::TestSession::test_collect_topdir", "testing/test_collection.py::TestSession::test_collect_protocol_single_function", "testing/test_collection.py::TestSession::test_collect_protocol_method", "testing/test_collection.py::TestSession::test_collect_custom_nodes_multi_id", "testing/test_collection.py::TestSession::test_collect_subdir_event_ordering", "testing/test_collection.py::TestSession::test_collect_two_commandline_args", "testing/test_collection.py::TestSession::test_serialization_byid", "testing/test_collection.py::TestSession::test_find_byid_without_instance_parents", "testing/test_collection.py::Test_getinitialnodes::test_global_file", "testing/test_collection.py::Test_getinitialnodes::test_pkgfile", "testing/test_collection.py::Test_genitems::test_check_collect_hashes", "testing/test_collection.py::Test_genitems::test_example_items1", "testing/test_collection.py::Test_genitems::test_class_and_functions_discovery_using_glob", "testing/test_collection.py::test_matchnodes_two_collections_same_file", "testing/test_collection.py::TestNodekeywords::test_no_under", "testing/test_collection.py::TestNodekeywords::test_issue345", "testing/test_collection.py::test_exit_on_collection_error", "testing/test_collection.py::test_exit_on_collection_with_maxfail_smaller_than_n_errors", "testing/test_collection.py::test_exit_on_collection_with_maxfail_bigger_than_n_errors", "testing/test_collection.py::test_continue_on_collection_errors", "testing/test_collection.py::test_continue_on_collection_errors_maxfail", "testing/test_collection.py::test_fixture_scope_sibling_conftests", "testing/test_collection.py::test_collect_init_tests", "testing/test_collection.py::test_collect_invalid_signature_message", "testing/test_collection.py::test_collect_handles_raising_on_dunder_class", "testing/test_collection.py::test_collect_with_chdir_during_import", "testing/test_collection.py::test_collect_symlink_file_arg", "testing/test_collection.py::test_collect_symlink_out_of_tree", "testing/test_collection.py::test_collectignore_via_conftest", "testing/test_collection.py::test_collect_pkg_init_and_file_in_args", "testing/test_collection.py::test_collect_pkg_init_only", "testing/test_collection.py::test_collect_sub_with_symlinks[True]", "testing/test_collection.py::test_collect_sub_with_symlinks[False]", "testing/test_collection.py::test_collector_respects_tbstyle", "testing/test_collection.py::test_collect_pyargs_with_testpaths"]}
{"instance_id": "pytest-dev__pytest-7168", "tests_passing_in_original_repo": ["testing/io/test_saferepr.py::test_simple_repr", "testing/io/test_saferepr.py::test_maxsize", "testing/io/test_saferepr.py::test_maxsize_error_on_instance", "testing/io/test_saferepr.py::test_exceptions", "testing/io/test_saferepr.py::test_baseexception", "testing/io/test_saferepr.py::test_buggy_builtin_repr", "testing/io/test_saferepr.py::test_big_repr", "testing/io/test_saferepr.py::test_repr_on_newstyle", "testing/io/test_saferepr.py::test_unicode", "testing/io/test_saferepr.py::test_pformat_dispatch"]}
{"instance_id": "pytest-dev__pytest-7220", "tests_passing_in_original_repo": ["testing/test_nodes.py::test_ischildnode[--True]", "testing/test_nodes.py::test_ischildnode[-foo-True]", "testing/test_nodes.py::test_ischildnode[-foo/bar-True]", "testing/test_nodes.py::test_ischildnode[-foo/bar::TestBaz-True]", "testing/test_nodes.py::test_ischildnode[foo-food-False]", "testing/test_nodes.py::test_ischildnode[foo/bar::TestBaz-foo/bar-False]", "testing/test_nodes.py::test_ischildnode[foo/bar::TestBaz-foo/bar::TestBop-False]", "testing/test_nodes.py::test_ischildnode[foo/bar-foo/bar::TestBop-True]", "testing/test_nodes.py::test_node_from_parent_disallowed_arguments", "testing/test_nodes.py::test__check_initialpaths_for_relpath", "testing/test_nodes.py::test_std_warn_not_pytestwarning"]}
{"instance_id": "pytest-dev__pytest-7373", "tests_passing_in_original_repo": ["testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[py.test-mark]", "testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[py.test-param]", "testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[pytest-mark]", "testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[pytest-param]", "testing/test_mark.py::TestMark::test_pytest_mark_notcallable", "testing/test_mark.py::TestMark::test_mark_with_param", "testing/test_mark.py::TestMark::test_pytest_mark_name_starts_with_underscore", "testing/test_mark.py::TestMarkDecorator::test__eq__[lhs0-rhs0-True]", "testing/test_mark.py::TestMarkDecorator::test__eq__[lhs1-rhs1-False]", "testing/test_mark.py::TestMarkDecorator::test__eq__[lhs2-bar-False]", "testing/test_mark.py::TestMarkDecorator::test__eq__[foo-rhs3-False]", "testing/test_mark.py::TestMarkDecorator::test_aliases", "testing/test_mark.py::test_addmarker_order", "testing/test_mark.py::test_pytest_param_id_requires_string", "testing/test_mark.py::test_pytest_param_id_allows_none_or_string[None]", "testing/test_mark.py::test_pytest_param_id_allows_none_or_string[hello", "testing/test_mark.py::test_marked_class_run_twice", "testing/test_mark.py::test_ini_markers", "testing/test_mark.py::test_markers_option", "testing/test_mark.py::test_ini_markers_whitespace", "testing/test_mark.py::test_marker_without_description", "testing/test_mark.py::test_markers_option_with_plugin_in_current_dir", "testing/test_mark.py::test_mark_on_pseudo_function", "testing/test_mark.py::test_strict_prohibits_unregistered_markers[--strict-markers]", "testing/test_mark.py::test_strict_prohibits_unregistered_markers[--strict]", "testing/test_mark.py::test_mark_option[xyz-expected_passed0]", "testing/test_mark.py::test_mark_option[(((", "testing/test_mark.py::test_mark_option[not", "testing/test_mark.py::test_mark_option[xyz", "testing/test_mark.py::test_mark_option[xyz2-expected_passed4]", "testing/test_mark.py::test_mark_option_custom[interface-expected_passed0]", "testing/test_mark.py::test_mark_option_custom[not", "testing/test_mark.py::test_keyword_option_custom[interface-expected_passed0]", "testing/test_mark.py::test_keyword_option_custom[not", "testing/test_mark.py::test_keyword_option_custom[pass-expected_passed2]", "testing/test_mark.py::test_keyword_option_custom[1", "testing/test_mark.py::test_keyword_option_considers_mark", "testing/test_mark.py::test_keyword_option_parametrize[None-expected_passed0]", "testing/test_mark.py::test_keyword_option_parametrize[[1.3]-expected_passed1]", "testing/test_mark.py::test_keyword_option_parametrize[2-3-expected_passed2]", "testing/test_mark.py::test_parametrize_with_module", "testing/test_mark.py::test_keyword_option_wrong_arguments[foo", "testing/test_mark.py::test_keyword_option_wrong_arguments[(foo-at", "testing/test_mark.py::test_keyword_option_wrong_arguments[or", "testing/test_mark.py::test_keyword_option_wrong_arguments[not", "testing/test_mark.py::test_parametrized_collected_from_command_line", "testing/test_mark.py::test_parametrized_collect_with_wrong_args", "testing/test_mark.py::test_parametrized_with_kwargs", "testing/test_mark.py::test_parametrize_iterator", "testing/test_mark.py::TestFunctional::test_merging_markers_deep", "testing/test_mark.py::TestFunctional::test_mark_decorator_subclass_does_not_propagate_to_base", "testing/test_mark.py::TestFunctional::test_mark_should_not_pass_to_siebling_class", "testing/test_mark.py::TestFunctional::test_mark_decorator_baseclasses_merged", "testing/test_mark.py::TestFunctional::test_mark_closest", "testing/test_mark.py::TestFunctional::test_mark_with_wrong_marker", "testing/test_mark.py::TestFunctional::test_mark_dynamically_in_funcarg", "testing/test_mark.py::TestFunctional::test_no_marker_match_on_unmarked_names", "testing/test_mark.py::TestFunctional::test_keywords_at_node_level", "testing/test_mark.py::TestFunctional::test_keyword_added_for_session", "testing/test_mark.py::TestFunctional::test_mark_from_parameters", "testing/test_mark.py::TestKeywordSelection::test_select_simple", "testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[xxx]", "testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[xxx", "testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[TestClass]", "testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[TestClass", "testing/test_mark.py::TestKeywordSelection::test_select_starton", "testing/test_mark.py::TestKeywordSelection::test_keyword_extra", "testing/test_mark.py::TestKeywordSelection::test_no_magic_values[__]", "testing/test_mark.py::TestKeywordSelection::test_no_magic_values[+]", "testing/test_mark.py::TestKeywordSelection::test_no_magic_values[..]", "testing/test_mark.py::TestKeywordSelection::test_no_match_directories_outside_the_suite", "testing/test_mark.py::test_parameterset_for_parametrize_marks[None]", "testing/test_mark.py::test_parameterset_for_parametrize_marks[]", "testing/test_mark.py::test_parameterset_for_parametrize_marks[skip]", "testing/test_mark.py::test_parameterset_for_parametrize_marks[xfail]", "testing/test_mark.py::test_parameterset_for_fail_at_collect", "testing/test_mark.py::test_parameterset_for_parametrize_bad_markname", "testing/test_mark.py::test_mark_expressions_no_smear", "testing/test_mark.py::test_markers_from_parametrize", "testing/test_mark.py::test_marker_expr_eval_failure_handling[NOT", "testing/test_mark.py::test_marker_expr_eval_failure_handling[bogus/]"]}
{"instance_id": "pytest-dev__pytest-7432", "tests_passing_in_original_repo": ["testing/test_skipping.py::test_importorskip", "testing/test_skipping.py::TestEvaluation::test_no_marker", "testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean", "testing/test_skipping.py::TestEvaluation::test_skipif_class", "testing/test_skipping.py::TestXFail::test_xfail_simple[True]", "testing/test_skipping.py::TestXFail::test_xfail_simple[False]", "testing/test_skipping.py::TestXFail::test_xfail_xpassed", "testing/test_skipping.py::TestXFail::test_xfail_using_platform", "testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict", "testing/test_skipping.py::TestXFail::test_xfail_run_anyway", "testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails", "testing/test_skipping.py::TestXFail::test_xfail_not_report_default", "testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting", "testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run", "testing/test_skipping.py::TestXFail::test_xfail_xpass", "testing/test_skipping.py::TestXFail::test_xfail_imperative", "testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup", "testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1", "testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,", "testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1", "testing/test_skipping.py::TestXFail::test_strict_sanity", "testing/test_skipping.py::TestXFail::test_strict_xfail[True]", "testing/test_skipping.py::TestXFail::test_strict_xfail[False]", "testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]", "testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]", "testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]", "testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]", "testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]", "testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]", "testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9", "testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9", "testing/test_skipping.py::TestSkip::test_skip_class", "testing/test_skipping.py::TestSkip::test_skips_on_false_string", "testing/test_skipping.py::TestSkip::test_arg_as_reason", "testing/test_skipping.py::TestSkip::test_skip_no_reason", "testing/test_skipping.py::TestSkip::test_skip_with_reason", "testing/test_skipping.py::TestSkip::test_only_skips_marked_test", "testing/test_skipping.py::TestSkip::test_strict_and_skip", "testing/test_skipping.py::TestSkipif::test_skipif_conditional", "testing/test_skipping.py::TestSkipif::test_skipif_reporting[\"hasattr(sys,", "testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,", "testing/test_skipping.py::TestSkipif::test_skipif_using_platform", "testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]", "testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]", "testing/test_skipping.py::test_skip_not_report_default", "testing/test_skipping.py::test_skipif_class", "testing/test_skipping.py::test_skipped_reasons_functional", "testing/test_skipping.py::test_skipped_folding", "testing/test_skipping.py::test_reportchars", "testing/test_skipping.py::test_reportchars_error", "testing/test_skipping.py::test_reportchars_all", "testing/test_skipping.py::test_reportchars_all_error", "testing/test_skipping.py::test_errors_in_xfail_skip_expressions", "testing/test_skipping.py::test_xfail_skipif_with_globals", "testing/test_skipping.py::test_default_markers", "testing/test_skipping.py::test_xfail_test_setup_exception", "testing/test_skipping.py::test_imperativeskip_on_xfail_test", "testing/test_skipping.py::TestBooleanCondition::test_skipif", "testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason", "testing/test_skipping.py::TestBooleanCondition::test_xfail", "testing/test_skipping.py::test_xfail_item", "testing/test_skipping.py::test_module_level_skip_error", "testing/test_skipping.py::test_module_level_skip_with_allow_module_level", "testing/test_skipping.py::test_invalid_skip_keyword_parameter", "testing/test_skipping.py::test_mark_xfail_item", "testing/test_skipping.py::test_summary_list_after_errors", "testing/test_skipping.py::test_relpath_rootdir"]}
{"instance_id": "pytest-dev__pytest-7490", "tests_passing_in_original_repo": ["testing/test_skipping.py::test_importorskip", "testing/test_skipping.py::TestEvaluation::test_no_marker", "testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean", "testing/test_skipping.py::TestEvaluation::test_skipif_class", "testing/test_skipping.py::TestXFail::test_xfail_simple[True]", "testing/test_skipping.py::TestXFail::test_xfail_simple[False]", "testing/test_skipping.py::TestXFail::test_xfail_xpassed", "testing/test_skipping.py::TestXFail::test_xfail_using_platform", "testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict", "testing/test_skipping.py::TestXFail::test_xfail_run_anyway", "testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input0-expected0]", "testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input1-expected1]", "testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails", "testing/test_skipping.py::TestXFail::test_xfail_not_report_default", "testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting", "testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run", "testing/test_skipping.py::TestXFail::test_xfail_xpass", "testing/test_skipping.py::TestXFail::test_xfail_imperative", "testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup", "testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1", "testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,", "testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1", "testing/test_skipping.py::TestXFail::test_strict_sanity", "testing/test_skipping.py::TestXFail::test_strict_xfail[True]", "testing/test_skipping.py::TestXFail::test_strict_xfail[False]", "testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]", "testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]", "testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]", "testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]", "testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]", "testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]", "testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9", "testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9", "testing/test_skipping.py::TestSkip::test_skip_class", "testing/test_skipping.py::TestSkip::test_skips_on_false_string", "testing/test_skipping.py::TestSkip::test_arg_as_reason", "testing/test_skipping.py::TestSkip::test_skip_no_reason", "testing/test_skipping.py::TestSkip::test_skip_with_reason", "testing/test_skipping.py::TestSkip::test_only_skips_marked_test", "testing/test_skipping.py::TestSkip::test_strict_and_skip", "testing/test_skipping.py::TestSkipif::test_skipif_conditional", "testing/test_skipping.py::TestSkipif::test_skipif_reporting[\"hasattr(sys,", "testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,", "testing/test_skipping.py::TestSkipif::test_skipif_using_platform", "testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]", "testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]", "testing/test_skipping.py::test_skip_not_report_default", "testing/test_skipping.py::test_skipif_class", "testing/test_skipping.py::test_skipped_reasons_functional", "testing/test_skipping.py::test_skipped_folding", "testing/test_skipping.py::test_reportchars", "testing/test_skipping.py::test_reportchars_error", "testing/test_skipping.py::test_reportchars_all", "testing/test_skipping.py::test_reportchars_all_error", "testing/test_skipping.py::test_errors_in_xfail_skip_expressions", "testing/test_skipping.py::test_xfail_skipif_with_globals", "testing/test_skipping.py::test_default_markers", "testing/test_skipping.py::test_xfail_test_setup_exception", "testing/test_skipping.py::test_imperativeskip_on_xfail_test", "testing/test_skipping.py::TestBooleanCondition::test_skipif", "testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason", "testing/test_skipping.py::TestBooleanCondition::test_xfail", "testing/test_skipping.py::test_xfail_item", "testing/test_skipping.py::test_module_level_skip_error", "testing/test_skipping.py::test_module_level_skip_with_allow_module_level", "testing/test_skipping.py::test_invalid_skip_keyword_parameter", "testing/test_skipping.py::test_mark_xfail_item", "testing/test_skipping.py::test_summary_list_after_errors", "testing/test_skipping.py::test_relpath_rootdir"]}
{"instance_id": "pytest-dev__pytest-8365", "tests_passing_in_original_repo": ["testing/test_tmpdir.py::TestTempdirHandler::test_mktemp", "testing/test_tmpdir.py::TestTempdirHandler::test_tmppath_relative_basetemp_absolute", "testing/test_tmpdir.py::test_get_user_uid_not_found", "testing/test_tmpdir.py::TestNumberedDir::test_make", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_lock_create", "testing/test_tmpdir.py::TestNumberedDir::test_lock_register_cleanup_removal", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_keep", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_locked", "testing/test_tmpdir.py::TestNumberedDir::test_cleanup_ignores_symlink", "testing/test_tmpdir.py::TestNumberedDir::test_removal_accepts_lock", "testing/test_tmpdir.py::TestRmRf::test_rm_rf", "testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_file", "testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_directory", "testing/test_tmpdir.py::TestRmRf::test_on_rm_rf_error", "testing/test_tmpdir.py::test_tmpdir_equals_tmp_path", "testing/test_tmpdir.py::test_tmpdir_fixture", "testing/test_tmpdir.py::TestConfigTmpdir::test_getbasetemp_custom_removes_old", "testing/test_tmpdir.py::test_mktemp[mypath-True]", "testing/test_tmpdir.py::test_mktemp[/mypath1-False]", "testing/test_tmpdir.py::test_mktemp[./mypath1-True]", "testing/test_tmpdir.py::test_mktemp[../mypath3-False]", "testing/test_tmpdir.py::test_mktemp[../../mypath4-False]", "testing/test_tmpdir.py::test_mktemp[mypath5/..-False]", "testing/test_tmpdir.py::test_mktemp[mypath6/../mypath6-True]", "testing/test_tmpdir.py::test_mktemp[mypath7/../mypath7/..-False]", "testing/test_tmpdir.py::test_tmpdir_always_is_realpath", "testing/test_tmpdir.py::test_tmp_path_always_is_realpath", "testing/test_tmpdir.py::test_tmpdir_too_long_on_parametrization", "testing/test_tmpdir.py::test_tmpdir_factory", "testing/test_tmpdir.py::test_tmpdir_fallback_tox_env", "testing/test_tmpdir.py::test_tmpdir_fallback_uid_not_found", "testing/test_tmpdir.py::test_basetemp_with_read_only_files"]}
{"instance_id": "pytest-dev__pytest-8906", "tests_passing_in_original_repo": ["testing/test_skipping.py::test_importorskip", "testing/test_skipping.py::TestEvaluation::test_no_marker", "testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice", "testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason", "testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean", "testing/test_skipping.py::TestEvaluation::test_skipif_class", "testing/test_skipping.py::TestEvaluation::test_skipif_markeval_namespace", "testing/test_skipping.py::TestEvaluation::test_skipif_markeval_namespace_multiple", "testing/test_skipping.py::TestEvaluation::test_skipif_markeval_namespace_ValueError", "testing/test_skipping.py::TestXFail::test_xfail_simple[True]", "testing/test_skipping.py::TestXFail::test_xfail_simple[False]", "testing/test_skipping.py::TestXFail::test_xfail_xpassed", "testing/test_skipping.py::TestXFail::test_xfail_using_platform", "testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict", "testing/test_skipping.py::TestXFail::test_xfail_run_anyway", "testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input0-expected0]", "testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input1-expected1]", "testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails", "testing/test_skipping.py::TestXFail::test_xfail_not_report_default", "testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting", "testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run", "testing/test_skipping.py::TestXFail::test_xfail_xpass", "testing/test_skipping.py::TestXFail::test_xfail_imperative", "testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_runtest_failed", "testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_runtest_passed_strict", "testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1", "testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,", "testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1", "testing/test_skipping.py::TestXFail::test_strict_sanity", "testing/test_skipping.py::TestXFail::test_strict_xfail[True]", "testing/test_skipping.py::TestXFail::test_strict_xfail[False]", "testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]", "testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]", "testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]", "testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]", "testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]", "testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]", "testing/test_skipping.py::TestXFail::test_xfail_markeval_namespace", "testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9", "testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9", "testing/test_skipping.py::TestSkip::test_skip_class", "testing/test_skipping.py::TestSkip::test_skips_on_false_string", "testing/test_skipping.py::TestSkip::test_arg_as_reason", "testing/test_skipping.py::TestSkip::test_skip_no_reason", "testing/test_skipping.py::TestSkip::test_skip_with_reason", "testing/test_skipping.py::TestSkip::test_only_skips_marked_test", "testing/test_skipping.py::TestSkip::test_strict_and_skip", "testing/test_skipping.py::TestSkip::test_wrong_skip_usage", "testing/test_skipping.py::TestSkipif::test_skipif_conditional", "testing/test_skipping.py::TestSkipif::test_skipif_reporting[\"hasattr(sys,", "testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,", "testing/test_skipping.py::TestSkipif::test_skipif_using_platform", "testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]", "testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]", "testing/test_skipping.py::test_skip_not_report_default", "testing/test_skipping.py::test_skipif_class", "testing/test_skipping.py::test_skipped_reasons_functional", "testing/test_skipping.py::test_skipped_folding", "testing/test_skipping.py::test_reportchars", "testing/test_skipping.py::test_reportchars_error", "testing/test_skipping.py::test_reportchars_all", "testing/test_skipping.py::test_reportchars_all_error", "testing/test_skipping.py::test_errors_in_xfail_skip_expressions", "testing/test_skipping.py::test_xfail_skipif_with_globals", "testing/test_skipping.py::test_default_markers", "testing/test_skipping.py::test_xfail_test_setup_exception", "testing/test_skipping.py::test_imperativeskip_on_xfail_test", "testing/test_skipping.py::TestBooleanCondition::test_skipif", "testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason", "testing/test_skipping.py::TestBooleanCondition::test_xfail", "testing/test_skipping.py::test_xfail_item", "testing/test_skipping.py::test_module_level_skip_error", "testing/test_skipping.py::test_module_level_skip_with_allow_module_level", "testing/test_skipping.py::test_invalid_skip_keyword_parameter", "testing/test_skipping.py::test_mark_xfail_item", "testing/test_skipping.py::test_summary_list_after_errors", "testing/test_skipping.py::test_relpath_rootdir"]}
{"instance_id": "pytest-dev__pytest-9359", "tests_passing_in_original_repo": ["testing/code/test_source.py::test_source_str_function", "testing/code/test_source.py::test_source_from_function", "testing/code/test_source.py::test_source_from_method", "testing/code/test_source.py::test_source_from_lines", "testing/code/test_source.py::test_source_from_inner_function", "testing/code/test_source.py::test_source_strips", "testing/code/test_source.py::test_source_strip_multiline", "testing/code/test_source.py::TestAccesses::test_getrange", "testing/code/test_source.py::TestAccesses::test_getrange_step_not_supported", "testing/code/test_source.py::TestAccesses::test_getline", "testing/code/test_source.py::TestAccesses::test_len", "testing/code/test_source.py::TestAccesses::test_iter", "testing/code/test_source.py::TestSourceParsing::test_getstatement", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_triple_quoted", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_within_constructs", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_bug", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_bug2", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_ast_issue58", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_out_of_bounds_py3", "testing/code/test_source.py::TestSourceParsing::test_getstatementrange_with_syntaxerror_issue7", "testing/code/test_source.py::test_getstartingblock_singleline", "testing/code/test_source.py::test_getline_finally", "testing/code/test_source.py::test_getfuncsource_dynamic", "testing/code/test_source.py::test_getfuncsource_with_multine_string", "testing/code/test_source.py::test_deindent", "testing/code/test_source.py::test_source_of_class_at_eof_without_newline", "testing/code/test_source.py::test_source_fallback", "testing/code/test_source.py::test_findsource_fallback", "testing/code/test_source.py::test_findsource", "testing/code/test_source.py::test_getfslineno", "testing/code/test_source.py::test_code_of_object_instance_with_call", "testing/code/test_source.py::test_oneline", "testing/code/test_source.py::test_comment_and_no_newline_at_end", "testing/code/test_source.py::test_oneline_and_comment", "testing/code/test_source.py::test_comments", "testing/code/test_source.py::test_comment_in_statement", "testing/code/test_source.py::test_source_with_decorator", "testing/code/test_source.py::test_single_line_else", "testing/code/test_source.py::test_single_line_finally", "testing/code/test_source.py::test_issue55", "testing/code/test_source.py::test_multiline", "testing/code/test_source.py::TestTry::test_body", "testing/code/test_source.py::TestTry::test_except_line", "testing/code/test_source.py::TestTry::test_except_body", "testing/code/test_source.py::TestTry::test_else", "testing/code/test_source.py::TestTryFinally::test_body", "testing/code/test_source.py::TestTryFinally::test_finally", "testing/code/test_source.py::TestIf::test_body", "testing/code/test_source.py::TestIf::test_elif_clause", "testing/code/test_source.py::TestIf::test_elif", "testing/code/test_source.py::TestIf::test_else", "testing/code/test_source.py::test_semicolon", "testing/code/test_source.py::test_def_online", "testing/code/test_source.py::test_getstartingblock_multiline"]}
{"instance_id": "scikit-learn__scikit-learn-10297", "tests_passing_in_original_repo": ["sklearn/linear_model/tests/test_ridge.py::test_ridge", "sklearn/linear_model/tests/test_ridge.py::test_primal_dual_relationship", "sklearn/linear_model/tests/test_ridge.py::test_ridge_singular", "sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_sample_weights", "sklearn/linear_model/tests/test_ridge.py::test_ridge_sample_weights", "sklearn/linear_model/tests/test_ridge.py::test_ridge_shapes", "sklearn/linear_model/tests/test_ridge.py::test_ridge_intercept", "sklearn/linear_model/tests/test_ridge.py::test_toy_ridge_object", "sklearn/linear_model/tests/test_ridge.py::test_ridge_vs_lstsq", "sklearn/linear_model/tests/test_ridge.py::test_ridge_individual_penalties", "sklearn/linear_model/tests/test_ridge.py::test_ridge_cv_sparse_svd", "sklearn/linear_model/tests/test_ridge.py::test_ridge_sparse_svd", "sklearn/linear_model/tests/test_ridge.py::test_class_weights", "sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight", "sklearn/linear_model/tests/test_ridge.py::test_class_weights_cv", "sklearn/linear_model/tests/test_ridge.py::test_ridgecv_store_cv_values", "sklearn/linear_model/tests/test_ridge.py::test_ridgecv_sample_weight", "sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_sample_weights_greater_than_1d", "sklearn/linear_model/tests/test_ridge.py::test_sparse_design_with_sample_weights", "sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_solver_not_supported", "sklearn/linear_model/tests/test_ridge.py::test_sparse_cg_max_iter", "sklearn/linear_model/tests/test_ridge.py::test_n_iter", "sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse", "sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_helper", "sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_svd_helper", "sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_no_support_multilabel", "sklearn/linear_model/tests/test_ridge.py::test_dtype_match", "sklearn/linear_model/tests/test_ridge.py::test_dtype_match_cholesky"]}
{"instance_id": "scikit-learn__scikit-learn-10508", "tests_passing_in_original_repo": ["sklearn/preprocessing/tests/test_label.py::test_label_binarizer", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer_unseen_labels", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer_set_label_encoding", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer_errors", "sklearn/preprocessing/tests/test_label.py::test_label_encoder", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_fit_transform", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_errors", "sklearn/preprocessing/tests/test_label.py::test_sparse_output_multilabel_binarizer", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_empty_sample", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_unknown_class", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_given_classes", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_same_length_sequence", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_non_integer_labels", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_non_unique", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_inverse_validation", "sklearn/preprocessing/tests/test_label.py::test_label_binarize_with_class_order", "sklearn/preprocessing/tests/test_label.py::test_invalid_input_label_binarize", "sklearn/preprocessing/tests/test_label.py::test_inverse_binarize_multiclass"]}
{"instance_id": "scikit-learn__scikit-learn-10949", "tests_passing_in_original_repo": ["sklearn/utils/tests/test_validation.py::test_as_float_array", "sklearn/utils/tests/test_validation.py::test_as_float_array_nan[X0]", "sklearn/utils/tests/test_validation.py::test_as_float_array_nan[X1]", "sklearn/utils/tests/test_validation.py::test_np_matrix", "sklearn/utils/tests/test_validation.py::test_memmap", "sklearn/utils/tests/test_validation.py::test_ordering", "sklearn/utils/tests/test_validation.py::test_check_array_force_all_finite_valid[asarray-inf-False]", "sklearn/utils/tests/test_validation.py::test_check_array_force_all_finite_valid[asarray-nan-allow-nan]", "sklearn/utils/tests/test_validation.py::test_check_array_force_all_finite_valid[asarray-nan-False]", "sklearn/utils/tests/test_validation.py::test_check_array_force_all_finite_valid[csr_matrix-inf-False]", "sklearn/utils/tests/test_validation.py::test_check_array_force_all_finite_valid[csr_matrix-nan-allow-nan]", "sklearn/utils/tests/test_validation.py::test_check_array_force_all_finite_valid[csr_matrix-nan-False]", "sklearn/utils/tests/test_validation.py::test_check_array", "sklearn/utils/tests/test_validation.py::test_check_array_pandas_dtype_object_conversion", "sklearn/utils/tests/test_validation.py::test_check_array_on_mock_dataframe", "sklearn/utils/tests/test_validation.py::test_check_array_dtype_stability", "sklearn/utils/tests/test_validation.py::test_check_array_dtype_warning", "sklearn/utils/tests/test_validation.py::test_check_array_accept_sparse_type_exception", "sklearn/utils/tests/test_validation.py::test_check_array_accept_sparse_no_exception", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_no_exception[csr]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_no_exception[csc]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_no_exception[coo]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_no_exception[bsr]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_raise_exception[csr]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_raise_exception[csc]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_raise_exception[coo]", "sklearn/utils/tests/test_validation.py::test_check_array_accept_large_sparse_raise_exception[bsr]", "sklearn/utils/tests/test_validation.py::test_check_array_large_indices_non_supported_scipy_version[csr]", "sklearn/utils/tests/test_validation.py::test_check_array_large_indices_non_supported_scipy_version[csc]", "sklearn/utils/tests/test_validation.py::test_check_array_large_indices_non_supported_scipy_version[coo]", "sklearn/utils/tests/test_validation.py::test_check_array_large_indices_non_supported_scipy_version[bsr]", "sklearn/utils/tests/test_validation.py::test_check_array_min_samples_and_features_messages", "sklearn/utils/tests/test_validation.py::test_check_array_complex_data_error", "sklearn/utils/tests/test_validation.py::test_has_fit_parameter", "sklearn/utils/tests/test_validation.py::test_check_symmetric", "sklearn/utils/tests/test_validation.py::test_check_is_fitted", "sklearn/utils/tests/test_validation.py::test_check_consistent_length", "sklearn/utils/tests/test_validation.py::test_check_dataframe_fit_attribute", "sklearn/utils/tests/test_validation.py::test_suppress_validation", "sklearn/utils/tests/test_validation.py::test_check_memory", "sklearn/utils/tests/test_validation.py::test_check_array_memmap[True]", "sklearn/utils/tests/test_validation.py::test_check_array_memmap[False]"]}
{"instance_id": "scikit-learn__scikit-learn-11040", "tests_passing_in_original_repo": ["sklearn/neighbors/tests/test_neighbors.py::test_unsupervised_kneighbors", "sklearn/neighbors/tests/test_neighbors.py::test_unsupervised_inputs", "sklearn/neighbors/tests/test_neighbors.py::test_precomputed", "sklearn/neighbors/tests/test_neighbors.py::test_precomputed_cross_validation", "sklearn/neighbors/tests/test_neighbors.py::test_unsupervised_radius_neighbors", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_classifier", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_classifier_float_labels", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_classifier_predict_proba", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_classifier", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_classifier_zero_distance", "sklearn/neighbors/tests/test_neighbors.py::test_neighbors_regressors_zero_distance", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_boundary_handling", "sklearn/neighbors/tests/test_neighbors.py::test_RadiusNeighborsClassifier_multioutput", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_classifier_sparse", "sklearn/neighbors/tests/test_neighbors.py::test_KNeighborsClassifier_multioutput", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_regressor", "sklearn/neighbors/tests/test_neighbors.py::test_KNeighborsRegressor_multioutput_uniform_weight", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_regressor_multioutput", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_regressor", "sklearn/neighbors/tests/test_neighbors.py::test_RadiusNeighborsRegressor_multioutput_with_uniform_weight", "sklearn/neighbors/tests/test_neighbors.py::test_RadiusNeighborsRegressor_multioutput", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_regressor_sparse", "sklearn/neighbors/tests/test_neighbors.py::test_neighbors_iris", "sklearn/neighbors/tests/test_neighbors.py::test_neighbors_digits", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_graph", "sklearn/neighbors/tests/test_neighbors.py::test_kneighbors_graph_sparse", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_graph", "sklearn/neighbors/tests/test_neighbors.py::test_radius_neighbors_graph_sparse", "sklearn/neighbors/tests/test_neighbors.py::test_neighbors_badargs", "sklearn/neighbors/tests/test_neighbors.py::test_neighbors_metrics", "sklearn/neighbors/tests/test_neighbors.py::test_callable_metric", "sklearn/neighbors/tests/test_neighbors.py::test_valid_brute_metric_for_auto_algorithm", "sklearn/neighbors/tests/test_neighbors.py::test_metric_params_interface", "sklearn/neighbors/tests/test_neighbors.py::test_predict_sparse_ball_kd_tree", "sklearn/neighbors/tests/test_neighbors.py::test_non_euclidean_kneighbors", "sklearn/neighbors/tests/test_neighbors.py::test_k_and_radius_neighbors_train_is_not_query", "sklearn/neighbors/tests/test_neighbors.py::test_k_and_radius_neighbors_X_None", "sklearn/neighbors/tests/test_neighbors.py::test_k_and_radius_neighbors_duplicates", "sklearn/neighbors/tests/test_neighbors.py::test_include_self_neighbors_graph", "sklearn/neighbors/tests/test_neighbors.py::test_dtype_convert", "sklearn/neighbors/tests/test_neighbors.py::test_sparse_metric_callable", "sklearn/neighbors/tests/test_neighbors.py::test_pairwise_boolean_distance"]}
{"instance_id": "scikit-learn__scikit-learn-11281", "tests_passing_in_original_repo": ["sklearn/mixture/tests/test_bayesian_mixture.py::test_log_dirichlet_norm", "sklearn/mixture/tests/test_bayesian_mixture.py::test_log_wishart_norm", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_covariance_type", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weight_concentration_prior_type", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weights_prior_initialisation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_means_prior_initialisation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_precisions_prior_initialisation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_check_is_fitted", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weights", "sklearn/mixture/tests/test_bayesian_mixture.py::test_monotonic_likelihood", "sklearn/mixture/tests/test_bayesian_mixture.py::test_compare_covar_type", "sklearn/mixture/tests/test_bayesian_mixture.py::test_check_covariance_precision", "sklearn/mixture/tests/test_bayesian_mixture.py::test_invariant_translation", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_attributes", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_X", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_weights", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_means", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_precisions", "sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_full", "sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_tied", "sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_diag", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_suffstat_sk_spherical", "sklearn/mixture/tests/test_gaussian_mixture.py::test_compute_log_det_cholesky", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_log_probabilities", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_estimate_log_prob_resp", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_predict_predict_proba", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_best_params", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_convergence_warning", "sklearn/mixture/tests/test_gaussian_mixture.py::test_multiple_init", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_n_parameters", "sklearn/mixture/tests/test_gaussian_mixture.py::test_bic_1d_1component", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_aic_bic", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_verbose", "sklearn/mixture/tests/test_gaussian_mixture.py::test_warm_start", "sklearn/mixture/tests/test_gaussian_mixture.py::test_score", "sklearn/mixture/tests/test_gaussian_mixture.py::test_score_samples", "sklearn/mixture/tests/test_gaussian_mixture.py::test_monotonic_likelihood", "sklearn/mixture/tests/test_gaussian_mixture.py::test_regularisation", "sklearn/mixture/tests/test_gaussian_mixture.py::test_property", "sklearn/mixture/tests/test_gaussian_mixture.py::test_sample", "sklearn/mixture/tests/test_gaussian_mixture.py::test_init"]}
{"instance_id": "scikit-learn__scikit-learn-12471", "tests_passing_in_original_repo": ["sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_sparse", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dense", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_deprecationwarnings", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_force_new_behaviour", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categorical_features", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_handle_unknown", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_not_fitted", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_no_categorical_features", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-int32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-float32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-float64]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-int32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-float32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-float64]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-int32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-float32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-float64]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[int32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[float32]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[float64]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_set_params", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[object]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[mixed]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[object]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[string]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-cat]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_unsorted_categories", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories_mixed_columns", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_pandas", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names_unicode", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_raise_missing[error-numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_raise_missing[error-object]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_raise_missing[ignore-numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_raise_missing[ignore-object]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[mixed]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[object]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories[object]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories[numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories[object-string-cat]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_inverse", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_raise_missing[numeric]", "sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_raise_missing[object]", "sklearn/preprocessing/tests/test_encoders.py::test_encoder_dtypes", "sklearn/preprocessing/tests/test_encoders.py::test_encoder_dtypes_pandas", "sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_warning"]}
{"instance_id": "scikit-learn__scikit-learn-13142", "tests_passing_in_original_repo": ["sklearn/mixture/tests/test_bayesian_mixture.py::test_log_dirichlet_norm", "sklearn/mixture/tests/test_bayesian_mixture.py::test_log_wishart_norm", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_covariance_type", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weight_concentration_prior_type", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weights_prior_initialisation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_mean_prior_initialisation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_precisions_prior_initialisation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_check_is_fitted", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weights", "sklearn/mixture/tests/test_bayesian_mixture.py::test_monotonic_likelihood", "sklearn/mixture/tests/test_bayesian_mixture.py::test_compare_covar_type", "sklearn/mixture/tests/test_bayesian_mixture.py::test_check_covariance_precision", "sklearn/mixture/tests/test_bayesian_mixture.py::test_invariant_translation", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_fit_predict[0-2-1e-07]", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_fit_predict[1-2-0.1]", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_fit_predict[3-300-1e-07]", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_fit_predict[4-300-0.1]", "sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_predict_predict_proba", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_attributes", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_X", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_weights", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_means", "sklearn/mixture/tests/test_gaussian_mixture.py::test_check_precisions", "sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_full", "sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_tied", "sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_diag", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_suffstat_sk_spherical", "sklearn/mixture/tests/test_gaussian_mixture.py::test_compute_log_det_cholesky", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_log_probabilities", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_estimate_log_prob_resp", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_predict_predict_proba", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_predict[0-2-1e-07]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_predict[1-2-0.1]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_predict[3-300-1e-07]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_predict[4-300-0.1]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_best_params", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_convergence_warning", "sklearn/mixture/tests/test_gaussian_mixture.py::test_multiple_init", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_n_parameters", "sklearn/mixture/tests/test_gaussian_mixture.py::test_bic_1d_1component", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_aic_bic", "sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_verbose", "sklearn/mixture/tests/test_gaussian_mixture.py::test_warm_start[0]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_warm_start[1]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_warm_start[2]", "sklearn/mixture/tests/test_gaussian_mixture.py::test_convergence_detected_with_warm_start", "sklearn/mixture/tests/test_gaussian_mixture.py::test_score", "sklearn/mixture/tests/test_gaussian_mixture.py::test_score_samples", "sklearn/mixture/tests/test_gaussian_mixture.py::test_monotonic_likelihood", "sklearn/mixture/tests/test_gaussian_mixture.py::test_regularisation", "sklearn/mixture/tests/test_gaussian_mixture.py::test_property", "sklearn/mixture/tests/test_gaussian_mixture.py::test_sample", "sklearn/mixture/tests/test_gaussian_mixture.py::test_init"]}
{"instance_id": "scikit-learn__scikit-learn-13241", "tests_passing_in_original_repo": ["sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_invalid_parameters", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_consistent_transform", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_sparse", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_linear_kernel", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_n_components", "sklearn/decomposition/tests/test_kernel_pca.py::test_remove_zero_eig", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_precomputed", "sklearn/decomposition/tests/test_kernel_pca.py::test_kernel_pca_invalid_kernel", "sklearn/decomposition/tests/test_kernel_pca.py::test_gridsearch_pipeline", "sklearn/decomposition/tests/test_kernel_pca.py::test_gridsearch_pipeline_precomputed", "sklearn/decomposition/tests/test_kernel_pca.py::test_nested_circles", "sklearn/decomposition/tests/test_pca.py::test_pca", "sklearn/decomposition/tests/test_pca.py::test_pca_arpack_solver", "sklearn/decomposition/tests/test_pca.py::test_pca_randomized_solver", "sklearn/decomposition/tests/test_pca.py::test_no_empty_slice_warning", "sklearn/decomposition/tests/test_pca.py::test_whitening", "sklearn/decomposition/tests/test_pca.py::test_explained_variance", "sklearn/decomposition/tests/test_pca.py::test_singular_values", "sklearn/decomposition/tests/test_pca.py::test_pca_check_projection", "sklearn/decomposition/tests/test_pca.py::test_pca_inverse", "sklearn/decomposition/tests/test_pca.py::test_pca_validation[full]", "sklearn/decomposition/tests/test_pca.py::test_pca_validation[arpack]", "sklearn/decomposition/tests/test_pca.py::test_pca_validation[randomized]", "sklearn/decomposition/tests/test_pca.py::test_pca_validation[auto]", "sklearn/decomposition/tests/test_pca.py::test_n_components_none[full]", "sklearn/decomposition/tests/test_pca.py::test_n_components_none[arpack]", "sklearn/decomposition/tests/test_pca.py::test_n_components_none[randomized]", "sklearn/decomposition/tests/test_pca.py::test_n_components_none[auto]", "sklearn/decomposition/tests/test_pca.py::test_randomized_pca_check_projection", "sklearn/decomposition/tests/test_pca.py::test_randomized_pca_check_list", "sklearn/decomposition/tests/test_pca.py::test_randomized_pca_inverse", "sklearn/decomposition/tests/test_pca.py::test_n_components_mle", "sklearn/decomposition/tests/test_pca.py::test_pca_dim", "sklearn/decomposition/tests/test_pca.py::test_infer_dim_1", "sklearn/decomposition/tests/test_pca.py::test_infer_dim_2", "sklearn/decomposition/tests/test_pca.py::test_infer_dim_3", "sklearn/decomposition/tests/test_pca.py::test_infer_dim_by_explained_variance", "sklearn/decomposition/tests/test_pca.py::test_pca_score", "sklearn/decomposition/tests/test_pca.py::test_pca_score2", "sklearn/decomposition/tests/test_pca.py::test_pca_score3", "sklearn/decomposition/tests/test_pca.py::test_pca_score_with_different_solvers", "sklearn/decomposition/tests/test_pca.py::test_pca_zero_noise_variance_edge_cases", "sklearn/decomposition/tests/test_pca.py::test_svd_solver_auto", "sklearn/decomposition/tests/test_pca.py::test_pca_sparse_input[full]", "sklearn/decomposition/tests/test_pca.py::test_pca_sparse_input[arpack]", "sklearn/decomposition/tests/test_pca.py::test_pca_sparse_input[randomized]", "sklearn/decomposition/tests/test_pca.py::test_pca_sparse_input[auto]", "sklearn/decomposition/tests/test_pca.py::test_pca_bad_solver", "sklearn/decomposition/tests/test_pca.py::test_pca_dtype_preservation[full]", "sklearn/decomposition/tests/test_pca.py::test_pca_dtype_preservation[arpack]", "sklearn/decomposition/tests/test_pca.py::test_pca_dtype_preservation[randomized]", "sklearn/decomposition/tests/test_pca.py::test_pca_dtype_preservation[auto]"]}
{"instance_id": "scikit-learn__scikit-learn-13439", "tests_passing_in_original_repo": ["sklearn/tests/test_pipeline.py::test_pipeline_init", "sklearn/tests/test_pipeline.py::test_pipeline_init_tuple", "sklearn/tests/test_pipeline.py::test_pipeline_methods_anova", "sklearn/tests/test_pipeline.py::test_pipeline_fit_params", "sklearn/tests/test_pipeline.py::test_pipeline_sample_weight_supported", "sklearn/tests/test_pipeline.py::test_pipeline_sample_weight_unsupported", "sklearn/tests/test_pipeline.py::test_pipeline_raise_set_params_error", "sklearn/tests/test_pipeline.py::test_pipeline_methods_pca_svm", "sklearn/tests/test_pipeline.py::test_pipeline_methods_preprocessing_svm", "sklearn/tests/test_pipeline.py::test_fit_predict_on_pipeline", "sklearn/tests/test_pipeline.py::test_fit_predict_on_pipeline_without_fit_predict", "sklearn/tests/test_pipeline.py::test_fit_predict_with_intermediate_fit_params", "sklearn/tests/test_pipeline.py::test_predict_with_predict_params", "sklearn/tests/test_pipeline.py::test_feature_union", "sklearn/tests/test_pipeline.py::test_make_union", "sklearn/tests/test_pipeline.py::test_make_union_kwargs", "sklearn/tests/test_pipeline.py::test_pipeline_transform", "sklearn/tests/test_pipeline.py::test_pipeline_fit_transform", "sklearn/tests/test_pipeline.py::test_pipeline_slice", "sklearn/tests/test_pipeline.py::test_pipeline_index", "sklearn/tests/test_pipeline.py::test_set_pipeline_steps", "sklearn/tests/test_pipeline.py::test_pipeline_named_steps", "sklearn/tests/test_pipeline.py::test_pipeline_correctly_adjusts_steps[None]", "sklearn/tests/test_pipeline.py::test_pipeline_correctly_adjusts_steps[passthrough]", "sklearn/tests/test_pipeline.py::test_set_pipeline_step_passthrough[None]", "sklearn/tests/test_pipeline.py::test_set_pipeline_step_passthrough[passthrough]", "sklearn/tests/test_pipeline.py::test_pipeline_ducktyping", "sklearn/tests/test_pipeline.py::test_make_pipeline", "sklearn/tests/test_pipeline.py::test_feature_union_weights", "sklearn/tests/test_pipeline.py::test_feature_union_parallel", "sklearn/tests/test_pipeline.py::test_feature_union_feature_names", "sklearn/tests/test_pipeline.py::test_classes_property", "sklearn/tests/test_pipeline.py::test_set_feature_union_steps", "sklearn/tests/test_pipeline.py::test_set_feature_union_step_drop[drop]", "sklearn/tests/test_pipeline.py::test_set_feature_union_step_drop[None]", "sklearn/tests/test_pipeline.py::test_step_name_validation", "sklearn/tests/test_pipeline.py::test_set_params_nested_pipeline", "sklearn/tests/test_pipeline.py::test_pipeline_wrong_memory", "sklearn/tests/test_pipeline.py::test_pipeline_with_cache_attribute", "sklearn/tests/test_pipeline.py::test_pipeline_memory", "sklearn/tests/test_pipeline.py::test_make_pipeline_memory"]}
{"instance_id": "scikit-learn__scikit-learn-13496", "tests_passing_in_original_repo": ["sklearn/ensemble/tests/test_iforest.py::test_iforest", "sklearn/ensemble/tests/test_iforest.py::test_iforest_sparse", "sklearn/ensemble/tests/test_iforest.py::test_iforest_error", "sklearn/ensemble/tests/test_iforest.py::test_recalculate_max_depth", "sklearn/ensemble/tests/test_iforest.py::test_max_samples_attribute", "sklearn/ensemble/tests/test_iforest.py::test_iforest_parallel_regression", "sklearn/ensemble/tests/test_iforest.py::test_iforest_performance", "sklearn/ensemble/tests/test_iforest.py::test_iforest_works[0.25]", "sklearn/ensemble/tests/test_iforest.py::test_iforest_works[auto]", "sklearn/ensemble/tests/test_iforest.py::test_max_samples_consistency", "sklearn/ensemble/tests/test_iforest.py::test_iforest_subsampled_features", "sklearn/ensemble/tests/test_iforest.py::test_iforest_average_path_length", "sklearn/ensemble/tests/test_iforest.py::test_score_samples", "sklearn/ensemble/tests/test_iforest.py::test_deprecation", "sklearn/ensemble/tests/test_iforest.py::test_behaviour_param", "sklearn/ensemble/tests/test_iforest.py::test_iforest_chunks_works1[0.25-3]", "sklearn/ensemble/tests/test_iforest.py::test_iforest_chunks_works1[auto-2]", "sklearn/ensemble/tests/test_iforest.py::test_iforest_chunks_works2[0.25-3]", "sklearn/ensemble/tests/test_iforest.py::test_iforest_chunks_works2[auto-2]"]}
{"instance_id": "scikit-learn__scikit-learn-13497", "tests_passing_in_original_repo": ["sklearn/feature_selection/tests/test_mutual_info.py::test_compute_mi_dd", "sklearn/feature_selection/tests/test_mutual_info.py::test_compute_mi_cc", "sklearn/feature_selection/tests/test_mutual_info.py::test_compute_mi_cd", "sklearn/feature_selection/tests/test_mutual_info.py::test_compute_mi_cd_unique_label", "sklearn/feature_selection/tests/test_mutual_info.py::test_mutual_info_classif_discrete", "sklearn/feature_selection/tests/test_mutual_info.py::test_mutual_info_regression", "sklearn/feature_selection/tests/test_mutual_info.py::test_mutual_info_classif_mixed", "sklearn/feature_selection/tests/test_mutual_info.py::test_mutual_info_options"]}
{"instance_id": "scikit-learn__scikit-learn-13584", "tests_passing_in_original_repo": ["sklearn/utils/tests/test_pprint.py::test_basic", "sklearn/utils/tests/test_pprint.py::test_changed_only", "sklearn/utils/tests/test_pprint.py::test_pipeline", "sklearn/utils/tests/test_pprint.py::test_deeply_nested", "sklearn/utils/tests/test_pprint.py::test_gridsearch", "sklearn/utils/tests/test_pprint.py::test_gridsearch_pipeline", "sklearn/utils/tests/test_pprint.py::test_n_max_elements_to_show", "sklearn/utils/tests/test_pprint.py::test_length_constraint", "sklearn/utils/tests/test_pprint.py::test_builtin_prettyprinter"]}
{"instance_id": "scikit-learn__scikit-learn-13779", "tests_passing_in_original_repo": ["sklearn/ensemble/tests/test_voting.py::test_estimator_init", "sklearn/ensemble/tests/test_voting.py::test_predictproba_hardvoting", "sklearn/ensemble/tests/test_voting.py::test_notfitted", "sklearn/ensemble/tests/test_voting.py::test_majority_label_iris", "sklearn/ensemble/tests/test_voting.py::test_tie_situation", "sklearn/ensemble/tests/test_voting.py::test_weights_iris", "sklearn/ensemble/tests/test_voting.py::test_weights_regressor", "sklearn/ensemble/tests/test_voting.py::test_predict_on_toy_problem", "sklearn/ensemble/tests/test_voting.py::test_predict_proba_on_toy_problem", "sklearn/ensemble/tests/test_voting.py::test_multilabel", "sklearn/ensemble/tests/test_voting.py::test_gridsearch", "sklearn/ensemble/tests/test_voting.py::test_parallel_fit", "sklearn/ensemble/tests/test_voting.py::test_sample_weight", "sklearn/ensemble/tests/test_voting.py::test_sample_weight_kwargs", "sklearn/ensemble/tests/test_voting.py::test_set_params", "sklearn/ensemble/tests/test_voting.py::test_set_estimator_none", "sklearn/ensemble/tests/test_voting.py::test_estimator_weights_format", "sklearn/ensemble/tests/test_voting.py::test_transform"]}
{"instance_id": "scikit-learn__scikit-learn-14087", "tests_passing_in_original_repo": ["sklearn/linear_model/tests/test_logistic.py::test_predict_2_classes", "sklearn/linear_model/tests/test_logistic.py::test_error", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_mock_scorer", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_score_does_not_warn_by_default", "sklearn/linear_model/tests/test_logistic.py::test_lr_liblinear_warning", "sklearn/linear_model/tests/test_logistic.py::test_predict_3_classes", "sklearn/linear_model/tests/test_logistic.py::test_predict_iris", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[sag]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[saga]", "sklearn/linear_model/tests/test_logistic.py::test_check_solver_option[LogisticRegression]", "sklearn/linear_model/tests/test_logistic.py::test_check_solver_option[LogisticRegressionCV]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[sag]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[saga]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary_probabilities", "sklearn/linear_model/tests/test_logistic.py::test_sparsify", "sklearn/linear_model/tests/test_logistic.py::test_inconsistent_input", "sklearn/linear_model/tests/test_logistic.py::test_write_parameters", "sklearn/linear_model/tests/test_logistic.py::test_nan", "sklearn/linear_model/tests/test_logistic.py::test_consistency_path", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_convergence_fail", "sklearn/linear_model/tests/test_logistic.py::test_liblinear_dual_random_state", "sklearn/linear_model/tests/test_logistic.py::test_logistic_loss_and_grad", "sklearn/linear_model/tests/test_logistic.py::test_logistic_grad_hess", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_logistic_regression_string_inputs", "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_sparse", "sklearn/linear_model/tests/test_logistic.py::test_intercept_logistic_helper", "sklearn/linear_model/tests/test_logistic.py::test_ovr_multinomial_iris", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers_multiclass", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regressioncv_class_weights", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_sample_weights", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_class_weights", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multinomial", "sklearn/linear_model/tests/test_logistic.py::test_multinomial_grad_hess", "sklearn/linear_model/tests/test_logistic.py::test_liblinear_decision_function_zero", "sklearn/linear_model/tests/test_logistic.py::test_liblinear_logregcv_sparse", "sklearn/linear_model/tests/test_logistic.py::test_saga_sparse", "sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling", "sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling_zero", "sklearn/linear_model/tests/test_logistic.py::test_logreg_l1", "sklearn/linear_model/tests/test_logistic.py::test_logreg_l1_sparse_data", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_cv_refit[l1-42]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_cv_refit[l2-42]", "sklearn/linear_model/tests/test_logistic.py::test_logreg_predict_proba_multinomial", "sklearn/linear_model/tests/test_logistic.py::test_max_iter", "sklearn/linear_model/tests/test_logistic.py::test_n_iter[newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_n_iter[liblinear]", "sklearn/linear_model/tests/test_logistic.py::test_n_iter[sag]", "sklearn/linear_model/tests/test_logistic.py::test_n_iter[saga]", "sklearn/linear_model/tests/test_logistic.py::test_n_iter[lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-sag]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-saga]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_saga_vs_liblinear", "sklearn/linear_model/tests/test_logistic.py::test_dtype_match[newton-cg-ovr]", "sklearn/linear_model/tests/test_logistic.py::test_dtype_match[newton-cg-multinomial]", "sklearn/linear_model/tests/test_logistic.py::test_dtype_match[saga-ovr]", "sklearn/linear_model/tests/test_logistic.py::test_dtype_match[saga-multinomial]", "sklearn/linear_model/tests/test_logistic.py::test_warm_start_converge_LR", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_coeffs", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-0.1]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-1]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-10]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-100]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-1000]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-0.1]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-1]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-10]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-100]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-1000]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[0.001]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[1]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[100]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[1000000.0]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-100.0]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-100.0]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-100.0]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[ovr]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[multinomial]", "sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_elasticnet_attribute_shapes", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[-1]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[2]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[None]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[something_wrong]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[l1_ratios0]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[l1_ratios1]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[None]", "sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[something_wrong]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-0.046415888336127795]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-2.1544346900318843]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-100.0]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-0.046415888336127795]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-2.1544346900318843]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-100.0]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-0.001]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-0.046415888336127795]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-2.1544346900318843]", "sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-100.0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_coefs_multinomial", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[liblinear-est0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[liblinear-est1]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[lbfgs-est0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[lbfgs-est1]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[newton-cg-est0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[newton-cg-est1]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[sag-est0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[sag-est1]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[saga-est0]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[saga-est1]", "sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_deprecation", "sklearn/linear_model/tests/test_logistic.py::test_penalty_none[lbfgs]", "sklearn/linear_model/tests/test_logistic.py::test_penalty_none[newton-cg]", "sklearn/linear_model/tests/test_logistic.py::test_penalty_none[sag]", "sklearn/linear_model/tests/test_logistic.py::test_penalty_none[saga]"]}
{"instance_id": "scikit-learn__scikit-learn-14092", "tests_passing_in_original_repo": ["sklearn/neighbors/tests/test_nca.py::test_simple_example", "sklearn/neighbors/tests/test_nca.py::test_toy_example_collapse_points", "sklearn/neighbors/tests/test_nca.py::test_finite_differences", "sklearn/neighbors/tests/test_nca.py::test_params_validation", "sklearn/neighbors/tests/test_nca.py::test_transformation_dimensions", "sklearn/neighbors/tests/test_nca.py::test_n_components", "sklearn/neighbors/tests/test_nca.py::test_init_transformation", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-11]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-3]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-5]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-7]", "sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-11]", "sklearn/neighbors/tests/test_nca.py::test_warm_start_validation", "sklearn/neighbors/tests/test_nca.py::test_warm_start_effectiveness", "sklearn/neighbors/tests/test_nca.py::test_verbose[pca]", "sklearn/neighbors/tests/test_nca.py::test_verbose[lda]", "sklearn/neighbors/tests/test_nca.py::test_verbose[identity]", "sklearn/neighbors/tests/test_nca.py::test_verbose[random]", "sklearn/neighbors/tests/test_nca.py::test_verbose[precomputed]", "sklearn/neighbors/tests/test_nca.py::test_no_verbose", "sklearn/neighbors/tests/test_nca.py::test_singleton_class", "sklearn/neighbors/tests/test_nca.py::test_one_class", "sklearn/neighbors/tests/test_nca.py::test_callback", "sklearn/neighbors/tests/test_nca.py::test_expected_transformation_shape", "sklearn/neighbors/tests/test_nca.py::test_convergence_warning"]}
{"instance_id": "scikit-learn__scikit-learn-14894", "tests_passing_in_original_repo": ["sklearn/svm/tests/test_svm.py::test_libsvm_parameters", "sklearn/svm/tests/test_svm.py::test_libsvm_iris", "sklearn/svm/tests/test_svm.py::test_precomputed", "sklearn/svm/tests/test_svm.py::test_svr", "sklearn/svm/tests/test_svm.py::test_linearsvr", "sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight", "sklearn/svm/tests/test_svm.py::test_svr_errors", "sklearn/svm/tests/test_svm.py::test_oneclass", "sklearn/svm/tests/test_svm.py::test_oneclass_decision_function", "sklearn/svm/tests/test_svm.py::test_oneclass_score_samples", "sklearn/svm/tests/test_svm.py::test_tweak_params", "sklearn/svm/tests/test_svm.py::test_probability", "sklearn/svm/tests/test_svm.py::test_decision_function", "sklearn/svm/tests/test_svm.py::test_decision_function_shape", "sklearn/svm/tests/test_svm.py::test_svr_predict", "sklearn/svm/tests/test_svm.py::test_weight", "sklearn/svm/tests/test_svm.py::test_svm_classifier_sided_sample_weight[estimator0]", "sklearn/svm/tests/test_svm.py::test_svm_classifier_sided_sample_weight[estimator1]", "sklearn/svm/tests/test_svm.py::test_svm_regressor_sided_sample_weight[estimator0]", "sklearn/svm/tests/test_svm.py::test_svm_regressor_sided_sample_weight[estimator1]", "sklearn/svm/tests/test_svm.py::test_svm_equivalence_sample_weight_C", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-zero-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-zero-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-zero-SVR]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-zero-NuSVR]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-zero-OneClassSVM]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-negative-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-negative-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-negative-SVR]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-negative-NuSVR]", "sklearn/svm/tests/test_svm.py::test_negative_sample_weights_mask_all_samples[weights-are-negative-OneClassSVM]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_just_one_label[mask-label-1-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_just_one_label[mask-label-1-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_just_one_label[mask-label-2-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_just_one_label[mask-label-2-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_two_labels[partial-mask-label-1-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_two_labels[partial-mask-label-1-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_two_labels[partial-mask-label-2-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_weights_svc_leave_two_labels[partial-mask-label-2-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_weight_equal_coeffs[partial-mask-label-1-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_weight_equal_coeffs[partial-mask-label-1-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_weight_equal_coeffs[partial-mask-label-1-NuSVR]", "sklearn/svm/tests/test_svm.py::test_negative_weight_equal_coeffs[partial-mask-label-2-SVC]", "sklearn/svm/tests/test_svm.py::test_negative_weight_equal_coeffs[partial-mask-label-2-NuSVC]", "sklearn/svm/tests/test_svm.py::test_negative_weight_equal_coeffs[partial-mask-label-2-NuSVR]", "sklearn/svm/tests/test_svm.py::test_auto_weight", "sklearn/svm/tests/test_svm.py::test_bad_input", "sklearn/svm/tests/test_svm.py::test_svm_gamma_error[SVC-data0]", "sklearn/svm/tests/test_svm.py::test_svm_gamma_error[NuSVC-data1]", "sklearn/svm/tests/test_svm.py::test_svm_gamma_error[SVR-data2]", "sklearn/svm/tests/test_svm.py::test_svm_gamma_error[NuSVR-data3]", "sklearn/svm/tests/test_svm.py::test_svm_gamma_error[OneClassSVM-data4]", "sklearn/svm/tests/test_svm.py::test_unicode_kernel", "sklearn/svm/tests/test_svm.py::test_sparse_precomputed", "sklearn/svm/tests/test_svm.py::test_linearsvc_parameters", "sklearn/svm/tests/test_svm.py::test_linearsvx_loss_penalty_deprecations", "sklearn/svm/tests/test_svm.py::test_linear_svx_uppercase_loss_penality_raises_error", "sklearn/svm/tests/test_svm.py::test_linearsvc", "sklearn/svm/tests/test_svm.py::test_linearsvc_crammer_singer", "sklearn/svm/tests/test_svm.py::test_linearsvc_fit_sampleweight", "sklearn/svm/tests/test_svm.py::test_crammer_singer_binary", "sklearn/svm/tests/test_svm.py::test_linearsvc_iris", "sklearn/svm/tests/test_svm.py::test_dense_liblinear_intercept_handling", "sklearn/svm/tests/test_svm.py::test_liblinear_set_coef", "sklearn/svm/tests/test_svm.py::test_immutable_coef_property", "sklearn/svm/tests/test_svm.py::test_linearsvc_verbose", "sklearn/svm/tests/test_svm.py::test_svc_clone_with_callable_kernel", "sklearn/svm/tests/test_svm.py::test_svc_bad_kernel", "sklearn/svm/tests/test_svm.py::test_timeout", "sklearn/svm/tests/test_svm.py::test_unfitted", "sklearn/svm/tests/test_svm.py::test_consistent_proba", "sklearn/svm/tests/test_svm.py::test_linear_svm_convergence_warnings", "sklearn/svm/tests/test_svm.py::test_svr_coef_sign", "sklearn/svm/tests/test_svm.py::test_linear_svc_intercept_scaling", "sklearn/svm/tests/test_svm.py::test_lsvc_intercept_scaling_zero", "sklearn/svm/tests/test_svm.py::test_hasattr_predict_proba", "sklearn/svm/tests/test_svm.py::test_decision_function_shape_two_class", "sklearn/svm/tests/test_svm.py::test_ovr_decision_function", "sklearn/svm/tests/test_svm.py::test_svc_invalid_break_ties_param[SVC]", "sklearn/svm/tests/test_svm.py::test_svc_invalid_break_ties_param[NuSVC]", "sklearn/svm/tests/test_svm.py::test_svc_ovr_tie_breaking[SVC]", "sklearn/svm/tests/test_svm.py::test_svc_ovr_tie_breaking[NuSVC]", "sklearn/svm/tests/test_svm.py::test_gamma_auto", "sklearn/svm/tests/test_svm.py::test_gamma_scale", "sklearn/svm/tests/test_svm.py::test_n_support_oneclass_svr"]}
{"instance_id": "scikit-learn__scikit-learn-14983", "tests_passing_in_original_repo": ["sklearn/model_selection/tests/test_split.py::test_cross_validator_with_default_params", "sklearn/model_selection/tests/test_split.py::test_2d_y", "sklearn/model_selection/tests/test_split.py::test_kfold_valueerrors", "sklearn/model_selection/tests/test_split.py::test_kfold_indices", "sklearn/model_selection/tests/test_split.py::test_kfold_no_shuffle", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_no_shuffle", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[4-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[4-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[5-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[5-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[6-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[6-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[7-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[7-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[8-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[8-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[9-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[9-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[10-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[10-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[4-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[4-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[6-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[6-True]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[7-False]", "sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[7-True]", "sklearn/model_selection/tests/test_split.py::test_kfold_balance", "sklearn/model_selection/tests/test_split.py::test_stratifiedkfold_balance", "sklearn/model_selection/tests/test_split.py::test_shuffle_kfold", "sklearn/model_selection/tests/test_split.py::test_shuffle_kfold_stratifiedkfold_reproducibility", "sklearn/model_selection/tests/test_split.py::test_shuffle_stratifiedkfold", "sklearn/model_selection/tests/test_split.py::test_kfold_can_detect_dependent_samples_on_digits", "sklearn/model_selection/tests/test_split.py::test_shuffle_split", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[None-9-1-ShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[None-9-1-StratifiedShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[8-8-2-ShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[8-8-2-StratifiedShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[0.8-8-2-ShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[0.8-8-2-StratifiedShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_group_shuffle_split_default_test_size[None-8-2]", "sklearn/model_selection/tests/test_split.py::test_group_shuffle_split_default_test_size[7-7-3]", "sklearn/model_selection/tests/test_split.py::test_group_shuffle_split_default_test_size[0.7-7-3]", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_init", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_respects_test_size", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_iter", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_even", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_overlap_train_test_bug", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_multilabel", "sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_multilabel_many_labels", "sklearn/model_selection/tests/test_split.py::test_predefinedsplit_with_kfold_split", "sklearn/model_selection/tests/test_split.py::test_group_shuffle_split", "sklearn/model_selection/tests/test_split.py::test_leave_one_p_group_out", "sklearn/model_selection/tests/test_split.py::test_leave_group_out_changing_groups", "sklearn/model_selection/tests/test_split.py::test_leave_one_p_group_out_error_on_fewer_number_of_groups", "sklearn/model_selection/tests/test_split.py::test_repeated_cv_value_errors", "sklearn/model_selection/tests/test_split.py::test_repeated_kfold_determinstic_split", "sklearn/model_selection/tests/test_split.py::test_get_n_splits_for_repeated_kfold", "sklearn/model_selection/tests/test_split.py::test_get_n_splits_for_repeated_stratified_kfold", "sklearn/model_selection/tests/test_split.py::test_repeated_stratified_kfold_determinstic_split", "sklearn/model_selection/tests/test_split.py::test_train_test_split_errors", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[1.2-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[1.0-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.0-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[-0.2-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-1.2]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-1.0]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-0.0]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8--0.2]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[-10-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[11-0.8]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8--10]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8-0]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8-11]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_default_test_size[None-7-3]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_default_test_size[8-8-2]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_default_test_size[0.8-8-2]", "sklearn/model_selection/tests/test_split.py::test_train_test_split", "sklearn/model_selection/tests/test_split.py::test_train_test_split_pandas", "sklearn/model_selection/tests/test_split.py::test_train_test_split_sparse", "sklearn/model_selection/tests/test_split.py::test_train_test_split_mock_pandas", "sklearn/model_selection/tests/test_split.py::test_train_test_split_list_input", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[2.0-None]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[1.0-None]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[0.1-0.95]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[None-train_size3]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[11-None]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[10-None]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[8-3]", "sklearn/model_selection/tests/test_split.py::test_shufflesplit_reproducible", "sklearn/model_selection/tests/test_split.py::test_stratifiedshufflesplit_list_input", "sklearn/model_selection/tests/test_split.py::test_train_test_split_allow_nans", "sklearn/model_selection/tests/test_split.py::test_check_cv", "sklearn/model_selection/tests/test_split.py::test_cv_iterable_wrapper", "sklearn/model_selection/tests/test_split.py::test_group_kfold", "sklearn/model_selection/tests/test_split.py::test_time_series_cv", "sklearn/model_selection/tests/test_split.py::test_time_series_max_train_size", "sklearn/model_selection/tests/test_split.py::test_nested_cv", "sklearn/model_selection/tests/test_split.py::test_build_repr", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_empty_trainset[ShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_empty_trainset[GroupShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_shuffle_split_empty_trainset[StratifiedShuffleSplit]", "sklearn/model_selection/tests/test_split.py::test_train_test_split_empty_trainset", "sklearn/model_selection/tests/test_split.py::test_leave_one_out_empty_trainset", "sklearn/model_selection/tests/test_split.py::test_leave_p_out_empty_trainset"]}
{"instance_id": "scikit-learn__scikit-learn-15512", "tests_passing_in_original_repo": ["sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_error", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_fit_non_convergence", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_equal_mutual_similarities", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_non_convergence", "sklearn/cluster/tests/test_affinity_propagation.py::test_equal_similarities_and_preferences", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_convergence_warning_dense_sparse[centers0]", "sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_convergence_warning_dense_sparse[centers1]"]}
{"instance_id": "scikit-learn__scikit-learn-15535", "tests_passing_in_original_repo": ["sklearn/metrics/cluster/tests/test_common.py::test_symmetric_non_symmetric_union", "sklearn/metrics/cluster/tests/test_common.py::test_symmetry[adjusted_rand_score-y10-y20]", "sklearn/metrics/cluster/tests/test_common.py::test_symmetry[v_measure_score-y11-y21]", "sklearn/metrics/cluster/tests/test_common.py::test_symmetry[mutual_info_score-y12-y22]", "sklearn/metrics/cluster/tests/test_common.py::test_symmetry[adjusted_mutual_info_score-y13-y23]", "sklearn/metrics/cluster/tests/test_common.py::test_symmetry[normalized_mutual_info_score-y14-y24]", "sklearn/metrics/cluster/tests/test_common.py::test_symmetry[fowlkes_mallows_score-y15-y25]", "sklearn/metrics/cluster/tests/test_common.py::test_non_symmetry[homogeneity_score-y10-y20]", "sklearn/metrics/cluster/tests/test_common.py::test_non_symmetry[completeness_score-y11-y21]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[adjusted_rand_score]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[homogeneity_score]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[completeness_score]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[v_measure_score]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[adjusted_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[fowlkes_mallows_score]", "sklearn/metrics/cluster/tests/test_common.py::test_normalized_output[normalized_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[adjusted_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[adjusted_rand_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[completeness_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[homogeneity_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[normalized_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[v_measure_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[fowlkes_mallows_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[silhouette_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[silhouette_manhattan]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[calinski_harabasz_score]", "sklearn/metrics/cluster/tests/test_common.py::test_permute_labels[davies_bouldin_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[adjusted_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[adjusted_rand_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[completeness_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[homogeneity_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[normalized_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[v_measure_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[fowlkes_mallows_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[silhouette_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[silhouette_manhattan]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[calinski_harabasz_score]", "sklearn/metrics/cluster/tests/test_common.py::test_format_invariance[davies_bouldin_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[adjusted_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[adjusted_rand_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[completeness_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[homogeneity_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[normalized_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[v_measure_score]", "sklearn/metrics/cluster/tests/test_common.py::test_single_sample[fowlkes_mallows_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[adjusted_mutual_info_score-adjusted_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[adjusted_rand_score-adjusted_rand_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[completeness_score-completeness_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[homogeneity_score-homogeneity_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[mutual_info_score-mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[normalized_mutual_info_score-normalized_mutual_info_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[v_measure_score-v_measure_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[fowlkes_mallows_score-fowlkes_mallows_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[silhouette_score-silhouette_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[silhouette_manhattan-metric_func9]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[calinski_harabasz_score-calinski_harabasz_score]", "sklearn/metrics/cluster/tests/test_common.py::test_inf_nan_input[davies_bouldin_score-davies_bouldin_score]"]}
{"instance_id": "scikit-learn__scikit-learn-25500", "tests_passing_in_original_repo": ["sklearn/tests/test_isotonic.py::test_permutation_invariance", "sklearn/tests/test_isotonic.py::test_check_increasing_small_number_of_samples", "sklearn/tests/test_isotonic.py::test_check_increasing_up", "sklearn/tests/test_isotonic.py::test_check_increasing_up_extreme", "sklearn/tests/test_isotonic.py::test_check_increasing_down", "sklearn/tests/test_isotonic.py::test_check_increasing_down_extreme", "sklearn/tests/test_isotonic.py::test_check_ci_warn", "sklearn/tests/test_isotonic.py::test_isotonic_regression", "sklearn/tests/test_isotonic.py::test_isotonic_regression_ties_min", "sklearn/tests/test_isotonic.py::test_isotonic_regression_ties_max", "sklearn/tests/test_isotonic.py::test_isotonic_regression_ties_secondary_", "sklearn/tests/test_isotonic.py::test_isotonic_regression_with_ties_in_differently_sized_groups", "sklearn/tests/test_isotonic.py::test_isotonic_regression_reversed", "sklearn/tests/test_isotonic.py::test_isotonic_regression_auto_decreasing", "sklearn/tests/test_isotonic.py::test_isotonic_regression_auto_increasing", "sklearn/tests/test_isotonic.py::test_assert_raises_exceptions", "sklearn/tests/test_isotonic.py::test_isotonic_sample_weight_parameter_default_value", "sklearn/tests/test_isotonic.py::test_isotonic_min_max_boundaries", "sklearn/tests/test_isotonic.py::test_isotonic_sample_weight", "sklearn/tests/test_isotonic.py::test_isotonic_regression_oob_raise", "sklearn/tests/test_isotonic.py::test_isotonic_regression_oob_clip", "sklearn/tests/test_isotonic.py::test_isotonic_regression_oob_nan", "sklearn/tests/test_isotonic.py::test_isotonic_regression_pickle", "sklearn/tests/test_isotonic.py::test_isotonic_duplicate_min_entry", "sklearn/tests/test_isotonic.py::test_isotonic_ymin_ymax", "sklearn/tests/test_isotonic.py::test_isotonic_zero_weight_loop", "sklearn/tests/test_isotonic.py::test_fast_predict", "sklearn/tests/test_isotonic.py::test_isotonic_copy_before_fit", "sklearn/tests/test_isotonic.py::test_isotonic_dtype", "sklearn/tests/test_isotonic.py::test_isotonic_mismatched_dtype[int32]", "sklearn/tests/test_isotonic.py::test_isotonic_mismatched_dtype[int64]", "sklearn/tests/test_isotonic.py::test_isotonic_mismatched_dtype[float32]", "sklearn/tests/test_isotonic.py::test_isotonic_mismatched_dtype[float64]", "sklearn/tests/test_isotonic.py::test_make_unique_dtype", "sklearn/tests/test_isotonic.py::test_make_unique_tolerance[float64]", "sklearn/tests/test_isotonic.py::test_make_unique_tolerance[float32]", "sklearn/tests/test_isotonic.py::test_isotonic_make_unique_tolerance", "sklearn/tests/test_isotonic.py::test_isotonic_non_regression_inf_slope", "sklearn/tests/test_isotonic.py::test_isotonic_thresholds[True]", "sklearn/tests/test_isotonic.py::test_isotonic_thresholds[False]", "sklearn/tests/test_isotonic.py::test_input_shape_validation", "sklearn/tests/test_isotonic.py::test_isotonic_2darray_more_than_1_feature", "sklearn/tests/test_isotonic.py::test_isotonic_regression_sample_weight_not_overwritten", "sklearn/tests/test_isotonic.py::test_get_feature_names_out[1d]", "sklearn/tests/test_isotonic.py::test_get_feature_names_out[2d]"]}
{"instance_id": "scikit-learn__scikit-learn-25570", "tests_passing_in_original_repo": ["sklearn/compose/tests/test_column_transformer.py::test_column_transformer", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_tuple_transformers_parameter", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_dataframe", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-list-pandas]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-list-numpy]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool-pandas]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool-numpy]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool_int-pandas]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool_int-numpy]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-list-pandas]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-list-numpy]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool-pandas]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool-numpy]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool_int-pandas]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool_int-numpy]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_output_indices", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_output_indices_df", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_array", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_list", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_stacking", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_mixed_cols_sparse", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_threshold", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_error_msg_1D", "sklearn/compose/tests/test_column_transformer.py::test_2D_transformer_output", "sklearn/compose/tests/test_column_transformer.py::test_2D_transformer_output_pandas", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_invalid_columns[drop]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_invalid_columns[passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_invalid_transformer", "sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer", "sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer_pandas", "sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer_kwargs", "sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer_remainder_transformer", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_get_set_params", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_named_estimators", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_cloning", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_get_feature_names", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_special_strings", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key0]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key1]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key2]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key3]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key0]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key1]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key2]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key3]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[pd-index]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key5]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key6]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key7]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key8]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key0]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key1]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key2]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key3]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_no_remaining_remainder_transformer", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_drops_all_remainder_transformer", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_remainder_transformer", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_drop_all_sparse_remainder_transformer", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_get_set_params_with_remainder", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_no_estimators", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est0-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est1-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est2-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est3-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est4-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est5-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est6-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est0-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est1-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est2-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est3-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est4-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est5-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est6-\\\\[ColumnTransformer\\\\].*\\\\(1", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_no_estimators_set_params", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_callable_specifier", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_callable_specifier_dataframe", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_negative_column_indexes", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_mask_indexing[asarray]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_mask_indexing[csr_matrix]", "sklearn/compose/tests/test_column_transformer.py::test_n_features_in", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols0-None-number-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols1-None-None-object]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols2-None-include2-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols3-None-include3-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols4-None-object-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols5-None-float-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols7-None-include7-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols11-str$-float-None]", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols12-None-include12-None]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_with_make_column_selector", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_error", "sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_pickle", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_empty_columns[list]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_empty_columns[array]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_empty_columns[callable]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[selector0]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[<lambda>0]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[selector2]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[<lambda>1]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[selector4]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[<lambda>2]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[selector0]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[<lambda>0]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[selector2]", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[<lambda>1]", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder[passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder[remainder1]", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_drop", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_pandas[passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_pandas[remainder1]", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_numpy[passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_numpy[remainder1]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-first]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-second]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-0]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-1]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-first]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-second]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-0]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-1]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-first]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-second]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-0]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-1]", "sklearn/compose/tests/test_column_transformer.py::test_feature_name_validation_missing_columns_drop_passthough", "sklearn/compose/tests/test_column_transformer.py::test_feature_names_in_", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers0-passthrough-expected_names0]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers1-drop-expected_names1]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers2-passthrough-expected_names2]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers3-passthrough-expected_names3]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers4-drop-expected_names4]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers5-passthrough-expected_names5]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers6-drop-expected_names6]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers7-drop-expected_names7]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers8-passthrough-expected_names8]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers9-passthrough-expected_names9]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers10-drop-expected_names10]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers11-passthrough-expected_names11]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers12-passthrough-expected_names12]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers0-passthrough-expected_names0]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers1-drop-expected_names1]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers2-passthrough-expected_names2]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers3-passthrough-expected_names3]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers4-drop-expected_names4]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers5-passthrough-expected_names5]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers6-drop-expected_names6]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers7-passthrough-expected_names7]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers8-passthrough-expected_names8]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers9-drop-expected_names9]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers10-passthrough-expected_names10]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers11-passthrough-expected_names11]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers12-drop-expected_names12]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers13-drop-expected_names13]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers0-drop-['b']]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers1-drop-['c']]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers2-passthrough-['a']]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers3-passthrough-['a']]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers4-drop-['b',", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers5-passthrough-['a']]", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers6-passthrough-['a',", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers7-passthrough-['pca0',", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers8-passthrough-['a',", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers9-passthrough-['a',", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers10-passthrough-['a',", "sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers11-passthrough-['a',", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[drop-True]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[drop-False]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[passthrough-True]", "sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[passthrough-False]", "sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[True-drop]", "sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[True-passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[False-drop]", "sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[False-passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_after_fitting[drop]", "sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_after_fitting[passthrough]", "sklearn/compose/tests/test_column_transformer.py::test_transformers_with_pandas_out_but_not_feature_names_out[trans_10-expected_verbose_names0-expected_non_verbose_names0]", "sklearn/compose/tests/test_column_transformer.py::test_transformers_with_pandas_out_but_not_feature_names_out[drop-expected_verbose_names1-expected_non_verbose_names1]", "sklearn/compose/tests/test_column_transformer.py::test_transformers_with_pandas_out_but_not_feature_names_out[passthrough-expected_verbose_names2-expected_non_verbose_names2]"]}
{"instance_id": "scikit-learn__scikit-learn-25638", "tests_passing_in_original_repo": ["sklearn/metrics/tests/test_classification.py::test_classification_report_dictionary_output", "sklearn/metrics/tests/test_classification.py::test_classification_report_output_dict_empty_input", "sklearn/metrics/tests/test_classification.py::test_classification_report_zero_division_warning[warn]", "sklearn/metrics/tests/test_classification.py::test_classification_report_zero_division_warning[0]", "sklearn/metrics/tests/test_classification.py::test_classification_report_zero_division_warning[1]", "sklearn/metrics/tests/test_classification.py::test_multilabel_accuracy_score_subset_accuracy", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_binary", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f_binary_single_class", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f_extra_labels", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f_ignored_labels", "sklearn/metrics/tests/test_classification.py::test_average_precision_score_score_non_binary_class", "sklearn/metrics/tests/test_classification.py::test_average_precision_score_duplicate_values", "sklearn/metrics/tests/test_classification.py::test_average_precision_score_tied_values", "sklearn/metrics/tests/test_classification.py::test_precision_recall_fscore_support_errors", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f_unused_pos_label", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_binary", "sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_binary", "sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_multiclass", "sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_multilabel", "sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_errors", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[true-f-0.333333333]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[pred-f-0.333333333]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[all-f-0.1111111111]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[None-i-2]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize_single_class", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params0-samples", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params1-positive_likelihood_ratio", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params2-no", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params3-negative_likelihood_ratio", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params4-no", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_errors[params0-class_likelihood_ratios", "sklearn/metrics/tests/test_classification.py::test_likelihood_ratios", "sklearn/metrics/tests/test_classification.py::test_cohen_kappa", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_nan", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_against_numpy_corrcoef", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_against_jurman", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_multiclass", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_overflow[100]", "sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_overflow[10000]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multiclass", "sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[samples]", "sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[micro]", "sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[macro]", "sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[weighted]", "sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[None]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_binary_averaged", "sklearn/metrics/tests/test_classification.py::test_zero_precision_recall", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_multiclass_subset_labels", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_error[empty", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_error[unknown", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_on_zero_length_input[None]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_on_zero_length_input[binary]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_on_zero_length_input[multiclass]", "sklearn/metrics/tests/test_classification.py::test_confusion_matrix_dtype", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_balanced", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_label_detection", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_digits", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_string_label", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_unicode_label", "sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_long_string_label", "sklearn/metrics/tests/test_classification.py::test_classification_report_labels_target_names_unequal_length", "sklearn/metrics/tests/test_classification.py::test_classification_report_no_labels_target_names_unequal_length", "sklearn/metrics/tests/test_classification.py::test_multilabel_classification_report", "sklearn/metrics/tests/test_classification.py::test_multilabel_zero_one_loss_subset", "sklearn/metrics/tests/test_classification.py::test_multilabel_hamming_loss", "sklearn/metrics/tests/test_classification.py::test_jaccard_score_validation", "sklearn/metrics/tests/test_classification.py::test_multilabel_jaccard_score", "sklearn/metrics/tests/test_classification.py::test_multiclass_jaccard_score", "sklearn/metrics/tests/test_classification.py::test_average_binary_jaccard_score", "sklearn/metrics/tests/test_classification.py::test_jaccard_score_zero_division_warning", "sklearn/metrics/tests/test_classification.py::test_jaccard_score_zero_division_set_value[0-0]", "sklearn/metrics/tests/test_classification.py::test_jaccard_score_zero_division_set_value[1-0.5]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_1", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[warn]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[0]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-macro-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-micro-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-weighted-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-samples-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-macro-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-micro-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-weighted-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-samples-1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[macro]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[micro]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[weighted]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[samples]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_average_none[0]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_average_none[1]", "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_average_none_warn", "sklearn/metrics/tests/test_classification.py::test_prf_warnings", "sklearn/metrics/tests/test_classification.py::test_prf_no_warnings_if_zero_division_set[0]", "sklearn/metrics/tests/test_classification.py::test_prf_no_warnings_if_zero_division_set[1]", "sklearn/metrics/tests/test_classification.py::test_recall_warnings[warn]", "sklearn/metrics/tests/test_classification.py::test_recall_warnings[0]", "sklearn/metrics/tests/test_classification.py::test_recall_warnings[1]", "sklearn/metrics/tests/test_classification.py::test_precision_warnings[warn]", "sklearn/metrics/tests/test_classification.py::test_precision_warnings[0]", "sklearn/metrics/tests/test_classification.py::test_precision_warnings[1]", "sklearn/metrics/tests/test_classification.py::test_fscore_warnings[warn]", "sklearn/metrics/tests/test_classification.py::test_fscore_warnings[0]", "sklearn/metrics/tests/test_classification.py::test_fscore_warnings[1]", "sklearn/metrics/tests/test_classification.py::test_prf_average_binary_data_non_binary", "sklearn/metrics/tests/test_classification.py::test__check_targets", "sklearn/metrics/tests/test_classification.py::test__check_targets_multiclass_with_both_y_true_and_y_pred_binary", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_binary", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_missing_labels_with_labels_none", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_no_consistent_pred_decision_shape", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_with_missing_labels", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_missing_labels_only_two_unq_in_y_true", "sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_invariance_lists", "sklearn/metrics/tests/test_classification.py::test_log_loss", "sklearn/metrics/tests/test_classification.py::test_log_loss_eps_auto[float64]", "sklearn/metrics/tests/test_classification.py::test_log_loss_eps_auto_float16", "sklearn/metrics/tests/test_classification.py::test_log_loss_pandas_input", "sklearn/metrics/tests/test_classification.py::test_brier_score_loss", "sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score_unseen", "sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score[y_true0-y_pred0]", "sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score[y_true1-y_pred1]", "sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score[y_true2-y_pred2]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-jaccard_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-f1_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-metric2]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-precision_recall_fscore_support]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-precision_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-recall_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-brier_score_loss]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-jaccard_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-f1_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-metric2]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-precision_recall_fscore_support]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-precision_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-recall_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-brier_score_loss]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-jaccard_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-f1_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-metric2]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-precision_recall_fscore_support]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-precision_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-recall_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-brier_score_loss]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-jaccard_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-f1_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-metric2]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-precision_recall_fscore_support]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-precision_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-recall_score]", "sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-brier_score_loss]", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer_unseen_labels", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer_set_label_encoding", "sklearn/preprocessing/tests/test_label.py::test_label_binarizer_errors", "sklearn/preprocessing/tests/test_label.py::test_label_encoder[int64]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder[object]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder[str]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_negative_ints", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_str_bad_shape[str]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_str_bad_shape[object]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_errors", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_empty_array[int64]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_empty_array[object]", "sklearn/preprocessing/tests/test_label.py::test_label_encoder_empty_array[str]", "sklearn/preprocessing/tests/test_label.py::test_sparse_output_multilabel_binarizer", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_empty_sample", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_unknown_class", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_given_classes", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_multiple_calls", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_same_length_sequence", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_non_integer_labels", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_non_unique", "sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_inverse_validation", "sklearn/preprocessing/tests/test_label.py::test_label_binarize_with_class_order", "sklearn/preprocessing/tests/test_label.py::test_label_binarize_binary", "sklearn/preprocessing/tests/test_label.py::test_label_binarize_multiclass", "sklearn/preprocessing/tests/test_label.py::test_label_binarize_multilabel", "sklearn/preprocessing/tests/test_label.py::test_invalid_input_label_binarize", "sklearn/preprocessing/tests/test_label.py::test_inverse_binarize_multiclass", "sklearn/preprocessing/tests/test_label.py::test_nan_label_encoder", "sklearn/utils/tests/test_multiclass.py::test_unique_labels", "sklearn/utils/tests/test_multiclass.py::test_unique_labels_non_specific", "sklearn/utils/tests/test_multiclass.py::test_unique_labels_mixed_types", "sklearn/utils/tests/test_multiclass.py::test_is_multilabel", "sklearn/utils/tests/test_multiclass.py::test_check_classification_targets", "sklearn/utils/tests/test_multiclass.py::test_type_of_target", "sklearn/utils/tests/test_multiclass.py::test_type_of_target_pandas_sparse", "sklearn/utils/tests/test_multiclass.py::test_class_distribution", "sklearn/utils/tests/test_multiclass.py::test_safe_split_with_precomputed_kernel", "sklearn/utils/tests/test_multiclass.py::test_ovr_decision_function"]}
{"instance_id": "scikit-learn__scikit-learn-25747", "tests_passing_in_original_repo": ["sklearn/utils/tests/test_set_output.py::test__wrap_in_pandas_container_dense", "sklearn/utils/tests/test_set_output.py::test__wrap_in_pandas_container_dense_update_columns_and_index", "sklearn/utils/tests/test_set_output.py::test__wrap_in_pandas_container_error_validation", "sklearn/utils/tests/test_set_output.py::test__safe_set_output", "sklearn/utils/tests/test_set_output.py::test_set_output_mixin", "sklearn/utils/tests/test_set_output.py::test__safe_set_output_error", "sklearn/utils/tests/test_set_output.py::test_set_output_method", "sklearn/utils/tests/test_set_output.py::test_set_output_method_error", "sklearn/utils/tests/test_set_output.py::test__get_output_config", "sklearn/utils/tests/test_set_output.py::test_get_output_auto_wrap_false", "sklearn/utils/tests/test_set_output.py::test_auto_wrap_output_keys_errors_with_incorrect_input", "sklearn/utils/tests/test_set_output.py::test_set_output_mixin_custom_mixin", "sklearn/utils/tests/test_set_output.py::test__wrap_in_pandas_container_column_errors", "sklearn/utils/tests/test_set_output.py::test_set_output_mro"]}
{"instance_id": "sphinx-doc__sphinx-10325", "tests_passing_in_original_repo": ["tests/test_ext_autodoc_automodule.py::test_empty_all", "tests/test_ext_autodoc_automodule.py::test_automodule", "tests/test_ext_autodoc_automodule.py::test_automodule_undoc_members", "tests/test_ext_autodoc_automodule.py::test_automodule_special_members", "tests/test_ext_autodoc_automodule.py::test_subclass_of_mocked_object"]}
{"instance_id": "sphinx-doc__sphinx-10451", "tests_passing_in_original_repo": []}
{"instance_id": "sphinx-doc__sphinx-11445", "tests_passing_in_original_repo": ["tests/test_util_rst.py::test_escape", "tests/test_util_rst.py::test_append_epilog", "tests/test_util_rst.py::test_prepend_prolog", "tests/test_util_rst.py::test_prepend_prolog_with_CR", "tests/test_util_rst.py::test_prepend_prolog_without_CR", "tests/test_util_rst.py::test_textwidth", "tests/test_util_rst.py::test_heading"]}
{"instance_id": "sphinx-doc__sphinx-7686", "tests_passing_in_original_repo": ["tests/test_ext_autosummary.py::test_mangle_signature", "tests/test_ext_autosummary.py::test_escaping", "tests/test_ext_autosummary.py::test_autosummary_generate", "tests/test_ext_autosummary.py::test_autosummary_generate_overwrite1", "tests/test_ext_autosummary.py::test_autosummary_generate_overwrite2", "tests/test_ext_autosummary.py::test_autosummary_recursive", "tests/test_ext_autosummary.py::test_autosummary_latex_table_colspec", "tests/test_ext_autosummary.py::test_import_by_name", "tests/test_ext_autosummary.py::test_autosummary_imported_members", "tests/test_ext_autosummary.py::test_generate_autosummary_docs_property", "tests/test_ext_autosummary.py::test_autosummary_skip_member", "tests/test_ext_autosummary.py::test_autosummary_template", "tests/test_ext_autosummary.py::test_empty_autosummary_generate", "tests/test_ext_autosummary.py::test_invalid_autosummary_generate", "tests/test_ext_autosummary.py::test_autogen"]}
{"instance_id": "sphinx-doc__sphinx-7738", "tests_passing_in_original_repo": ["tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_no_type", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_ref_in_type", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_keywords_with_types", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type"]}
{"instance_id": "sphinx-doc__sphinx-7975", "tests_passing_in_original_repo": ["tests/test_environment_indexentries.py::test_create_single_index", "tests/test_environment_indexentries.py::test_create_pair_index", "tests/test_environment_indexentries.py::test_create_triple_index", "tests/test_environment_indexentries.py::test_create_see_index", "tests/test_environment_indexentries.py::test_create_seealso_index", "tests/test_environment_indexentries.py::test_create_main_index", "tests/test_environment_indexentries.py::test_create_index_with_name", "tests/test_environment_indexentries.py::test_create_index_by_key"]}
{"instance_id": "sphinx-doc__sphinx-8273", "tests_passing_in_original_repo": ["tests/test_build_manpage.py::test_all", "tests/test_build_manpage.py::test_default_man_pages", "tests/test_build_manpage.py::test_rubric"]}
{"instance_id": "sphinx-doc__sphinx-8282", "tests_passing_in_original_repo": ["tests/test_ext_autodoc_configs.py::test_autoclass_content_class", "tests/test_ext_autodoc_configs.py::test_autoclass_content_init", "tests/test_ext_autodoc_configs.py::test_autoclass_content_both", "tests/test_ext_autodoc_configs.py::test_autodoc_inherit_docstrings", "tests/test_ext_autodoc_configs.py::test_autodoc_docstring_signature", "tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_class", "tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_init", "tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_both", "tests/test_ext_autodoc_configs.py::test_mocked_module_imports", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_signature", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_for_invalid_node", "tests/test_ext_autodoc_configs.py::test_autodoc_type_aliases", "tests/test_ext_autodoc_configs.py::test_autodoc_default_options", "tests/test_ext_autodoc_configs.py::test_autodoc_default_options_with_values"]}
{"instance_id": "sphinx-doc__sphinx-8435", "tests_passing_in_original_repo": ["tests/test_ext_autodoc_configs.py::test_autoclass_content_class", "tests/test_ext_autodoc_configs.py::test_autoclass_content_init", "tests/test_ext_autodoc_configs.py::test_autoclass_content_both", "tests/test_ext_autodoc_configs.py::test_autodoc_inherit_docstrings", "tests/test_ext_autodoc_configs.py::test_autodoc_docstring_signature", "tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_class", "tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_init", "tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_both", "tests/test_ext_autodoc_configs.py::test_mocked_module_imports", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_signature", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none_for_overload", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description", "tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_for_invalid_node", "tests/test_ext_autodoc_configs.py::test_autodoc_type_aliases", "tests/test_ext_autodoc_configs.py::test_autodoc_default_options", "tests/test_ext_autodoc_configs.py::test_autodoc_default_options_with_values"]}
{"instance_id": "sphinx-doc__sphinx-8474", "tests_passing_in_original_repo": ["tests/test_build_html.py::test_html4_output", "tests/test_build_html.py::test_html5_output[images.html-expect0]", "tests/test_build_html.py::test_html5_output[images.html-expect1]", "tests/test_build_html.py::test_html5_output[images.html-expect2]", "tests/test_build_html.py::test_html5_output[images.html-expect3]", "tests/test_build_html.py::test_html5_output[images.html-expect4]", "tests/test_build_html.py::test_html5_output[subdir/images.html-expect5]", "tests/test_build_html.py::test_html5_output[subdir/images.html-expect6]", "tests/test_build_html.py::test_html5_output[subdir/includes.html-expect7]", "tests/test_build_html.py::test_html5_output[subdir/includes.html-expect8]", "tests/test_build_html.py::test_html5_output[subdir/includes.html-expect9]", "tests/test_build_html.py::test_html5_output[subdir/includes.html-expect10]", "tests/test_build_html.py::test_html5_output[subdir/includes.html-expect11]", "tests/test_build_html.py::test_html5_output[includes.html-expect12]", "tests/test_build_html.py::test_html5_output[includes.html-expect13]", "tests/test_build_html.py::test_html5_output[includes.html-expect14]", "tests/test_build_html.py::test_html5_output[includes.html-expect15]", "tests/test_build_html.py::test_html5_output[includes.html-expect16]", "tests/test_build_html.py::test_html5_output[includes.html-expect17]", "tests/test_build_html.py::test_html5_output[includes.html-expect18]", "tests/test_build_html.py::test_html5_output[includes.html-expect19]", "tests/test_build_html.py::test_html5_output[includes.html-expect20]", "tests/test_build_html.py::test_html5_output[includes.html-expect21]", "tests/test_build_html.py::test_html5_output[includes.html-expect22]", "tests/test_build_html.py::test_html5_output[includes.html-expect23]", "tests/test_build_html.py::test_html5_output[includes.html-expect24]", "tests/test_build_html.py::test_html5_output[autodoc.html-expect25]", "tests/test_build_html.py::test_html5_output[autodoc.html-expect26]", "tests/test_build_html.py::test_html5_output[autodoc.html-expect27]", "tests/test_build_html.py::test_html5_output[autodoc.html-expect28]", "tests/test_build_html.py::test_html5_output[extapi.html-expect29]", "tests/test_build_html.py::test_html5_output[markup.html-expect30]", "tests/test_build_html.py::test_html5_output[markup.html-expect31]", "tests/test_build_html.py::test_html5_output[markup.html-expect32]", "tests/test_build_html.py::test_html5_output[markup.html-expect33]", "tests/test_build_html.py::test_html5_output[markup.html-expect34]", "tests/test_build_html.py::test_html5_output[markup.html-expect35]", "tests/test_build_html.py::test_html5_output[markup.html-expect36]", "tests/test_build_html.py::test_html5_output[markup.html-expect37]", "tests/test_build_html.py::test_html5_output[markup.html-expect38]", "tests/test_build_html.py::test_html5_output[markup.html-expect39]", "tests/test_build_html.py::test_html5_output[markup.html-expect40]", "tests/test_build_html.py::test_html5_output[markup.html-expect41]", "tests/test_build_html.py::test_html5_output[markup.html-expect42]", "tests/test_build_html.py::test_html5_output[markup.html-expect43]", "tests/test_build_html.py::test_html5_output[markup.html-expect44]", "tests/test_build_html.py::test_html5_output[markup.html-expect45]", "tests/test_build_html.py::test_html5_output[markup.html-expect46]", "tests/test_build_html.py::test_html5_output[markup.html-expect47]", "tests/test_build_html.py::test_html5_output[markup.html-expect48]", "tests/test_build_html.py::test_html5_output[markup.html-expect49]", "tests/test_build_html.py::test_html5_output[markup.html-expect50]", "tests/test_build_html.py::test_html5_output[markup.html-expect51]", "tests/test_build_html.py::test_html5_output[markup.html-expect52]", "tests/test_build_html.py::test_html5_output[markup.html-expect53]", "tests/test_build_html.py::test_html5_output[markup.html-expect54]", "tests/test_build_html.py::test_html5_output[markup.html-expect55]", "tests/test_build_html.py::test_html5_output[markup.html-expect56]", "tests/test_build_html.py::test_html5_output[markup.html-expect57]", "tests/test_build_html.py::test_html5_output[markup.html-expect58]", "tests/test_build_html.py::test_html5_output[markup.html-expect59]", "tests/test_build_html.py::test_html5_output[markup.html-expect60]", "tests/test_build_html.py::test_html5_output[markup.html-expect61]", "tests/test_build_html.py::test_html5_output[markup.html-expect62]", "tests/test_build_html.py::test_html5_output[markup.html-expect63]", "tests/test_build_html.py::test_html5_output[markup.html-expect64]", "tests/test_build_html.py::test_html5_output[markup.html-expect66]", "tests/test_build_html.py::test_html5_output[markup.html-expect67]", "tests/test_build_html.py::test_html5_output[markup.html-expect68]", "tests/test_build_html.py::test_html5_output[markup.html-expect69]", "tests/test_build_html.py::test_html5_output[markup.html-expect70]", "tests/test_build_html.py::test_html5_output[markup.html-expect71]", "tests/test_build_html.py::test_html5_output[markup.html-expect72]", "tests/test_build_html.py::test_html5_output[markup.html-expect73]", "tests/test_build_html.py::test_html5_output[markup.html-expect74]", "tests/test_build_html.py::test_html5_output[markup.html-expect75]", "tests/test_build_html.py::test_html5_output[markup.html-expect76]", "tests/test_build_html.py::test_html5_output[markup.html-expect77]", "tests/test_build_html.py::test_html5_output[markup.html-expect78]", "tests/test_build_html.py::test_html5_output[markup.html-expect80]", "tests/test_build_html.py::test_html5_output[markup.html-expect81]", "tests/test_build_html.py::test_html5_output[markup.html-expect82]", "tests/test_build_html.py::test_html5_output[markup.html-expect83]", "tests/test_build_html.py::test_html5_output[markup.html-expect84]", "tests/test_build_html.py::test_html5_output[markup.html-expect85]", "tests/test_build_html.py::test_html5_output[objects.html-expect86]", "tests/test_build_html.py::test_html5_output[objects.html-expect87]", "tests/test_build_html.py::test_html5_output[objects.html-expect88]", "tests/test_build_html.py::test_html5_output[objects.html-expect89]", "tests/test_build_html.py::test_html5_output[objects.html-expect90]", "tests/test_build_html.py::test_html5_output[objects.html-expect91]", "tests/test_build_html.py::test_html5_output[objects.html-expect92]", "tests/test_build_html.py::test_html5_output[objects.html-expect93]", "tests/test_build_html.py::test_html5_output[objects.html-expect94]", "tests/test_build_html.py::test_html5_output[objects.html-expect95]", "tests/test_build_html.py::test_html5_output[objects.html-expect96]", "tests/test_build_html.py::test_html5_output[objects.html-expect97]", "tests/test_build_html.py::test_html5_output[objects.html-expect98]", "tests/test_build_html.py::test_html5_output[objects.html-expect99]", "tests/test_build_html.py::test_html5_output[objects.html-expect100]", "tests/test_build_html.py::test_html5_output[objects.html-expect101]", "tests/test_build_html.py::test_html5_output[objects.html-expect102]", "tests/test_build_html.py::test_html5_output[objects.html-expect103]", "tests/test_build_html.py::test_html5_output[objects.html-expect104]", "tests/test_build_html.py::test_html5_output[objects.html-expect105]", "tests/test_build_html.py::test_html5_output[objects.html-expect106]", "tests/test_build_html.py::test_html5_output[objects.html-expect107]", "tests/test_build_html.py::test_html5_output[objects.html-expect108]", "tests/test_build_html.py::test_html5_output[objects.html-expect109]", "tests/test_build_html.py::test_html5_output[objects.html-expect110]", "tests/test_build_html.py::test_html5_output[objects.html-expect111]", "tests/test_build_html.py::test_html5_output[objects.html-expect112]", "tests/test_build_html.py::test_html5_output[objects.html-expect113]", "tests/test_build_html.py::test_html5_output[objects.html-expect114]", "tests/test_build_html.py::test_html5_output[objects.html-expect115]", "tests/test_build_html.py::test_html5_output[objects.html-expect116]", "tests/test_build_html.py::test_html5_output[objects.html-expect117]", "tests/test_build_html.py::test_html5_output[objects.html-expect118]", "tests/test_build_html.py::test_html5_output[objects.html-expect119]", "tests/test_build_html.py::test_html5_output[objects.html-expect120]", "tests/test_build_html.py::test_html5_output[objects.html-expect121]", "tests/test_build_html.py::test_html5_output[objects.html-expect122]", "tests/test_build_html.py::test_html5_output[objects.html-expect123]", "tests/test_build_html.py::test_html5_output[objects.html-expect124]", "tests/test_build_html.py::test_html5_output[objects.html-expect125]", "tests/test_build_html.py::test_html5_output[objects.html-expect126]", "tests/test_build_html.py::test_html5_output[objects.html-expect127]", "tests/test_build_html.py::test_html5_output[objects.html-expect128]", "tests/test_build_html.py::test_html5_output[objects.html-expect129]", "tests/test_build_html.py::test_html5_output[objects.html-expect130]", "tests/test_build_html.py::test_html5_output[objects.html-expect131]", "tests/test_build_html.py::test_html5_output[objects.html-expect132]", "tests/test_build_html.py::test_html5_output[index.html-expect133]", "tests/test_build_html.py::test_html5_output[index.html-expect134]", "tests/test_build_html.py::test_html5_output[index.html-expect137]", "tests/test_build_html.py::test_html5_output[index.html-expect138]", "tests/test_build_html.py::test_html5_output[index.html-expect139]", "tests/test_build_html.py::test_html5_output[index.html-expect140]", "tests/test_build_html.py::test_html5_output[index.html-expect141]", "tests/test_build_html.py::test_html5_output[index.html-expect142]", "tests/test_build_html.py::test_html5_output[index.html-expect143]", "tests/test_build_html.py::test_html5_output[index.html-expect144]", "tests/test_build_html.py::test_html5_output[index.html-expect145]", "tests/test_build_html.py::test_html5_output[index.html-expect146]", "tests/test_build_html.py::test_html5_output[index.html-expect147]", "tests/test_build_html.py::test_html5_output[index.html-expect148]", "tests/test_build_html.py::test_html5_output[bom.html-expect149]", "tests/test_build_html.py::test_html5_output[extensions.html-expect150]", "tests/test_build_html.py::test_html5_output[extensions.html-expect151]", "tests/test_build_html.py::test_html5_output[extensions.html-expect152]", "tests/test_build_html.py::test_html5_output[genindex.html-expect153]", "tests/test_build_html.py::test_html5_output[genindex.html-expect154]", "tests/test_build_html.py::test_html5_output[genindex.html-expect155]", "tests/test_build_html.py::test_html5_output[genindex.html-expect156]", "tests/test_build_html.py::test_html5_output[genindex.html-expect157]", "tests/test_build_html.py::test_html5_output[otherext.html-expect173]", "tests/test_build_html.py::test_html5_output[otherext.html-expect174]", "tests/test_build_html.py::test_html_parallel", "tests/test_build_html.py::test_html_download", "tests/test_build_html.py::test_html_download_role", "tests/test_build_html.py::test_html_translator", "tests/test_build_html.py::test_tocdepth[index.html-expect0]", "tests/test_build_html.py::test_tocdepth[index.html-expect1]", "tests/test_build_html.py::test_tocdepth[index.html-expect2]", "tests/test_build_html.py::test_tocdepth[index.html-expect3]", "tests/test_build_html.py::test_tocdepth[foo.html-expect4]", "tests/test_build_html.py::test_tocdepth[foo.html-expect5]", "tests/test_build_html.py::test_tocdepth[foo.html-expect6]", "tests/test_build_html.py::test_tocdepth[foo.html-expect7]", "tests/test_build_html.py::test_tocdepth[foo.html-expect8]", "tests/test_build_html.py::test_tocdepth[foo.html-expect9]", "tests/test_build_html.py::test_tocdepth[foo.html-expect10]", "tests/test_build_html.py::test_tocdepth[foo.html-expect11]", "tests/test_build_html.py::test_tocdepth[foo.html-expect12]", "tests/test_build_html.py::test_tocdepth[foo.html-expect13]", "tests/test_build_html.py::test_tocdepth[foo.html-expect14]", "tests/test_build_html.py::test_tocdepth[foo.html-expect15]", "tests/test_build_html.py::test_tocdepth[foo.html-expect16]", "tests/test_build_html.py::test_tocdepth[foo.html-expect17]", "tests/test_build_html.py::test_tocdepth[bar.html-expect18]", "tests/test_build_html.py::test_tocdepth[bar.html-expect19]", "tests/test_build_html.py::test_tocdepth[bar.html-expect20]", "tests/test_build_html.py::test_tocdepth[bar.html-expect21]", "tests/test_build_html.py::test_tocdepth[bar.html-expect22]", "tests/test_build_html.py::test_tocdepth[bar.html-expect23]", "tests/test_build_html.py::test_tocdepth[bar.html-expect24]", "tests/test_build_html.py::test_tocdepth[bar.html-expect25]", "tests/test_build_html.py::test_tocdepth[bar.html-expect26]", "tests/test_build_html.py::test_tocdepth[bar.html-expect27]", "tests/test_build_html.py::test_tocdepth[bar.html-expect28]", "tests/test_build_html.py::test_tocdepth[bar.html-expect29]", "tests/test_build_html.py::test_tocdepth[baz.html-expect30]", "tests/test_build_html.py::test_tocdepth[baz.html-expect31]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect0]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect1]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect2]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect3]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect4]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect5]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect6]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect7]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect8]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect9]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect10]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect11]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect12]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect13]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect14]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect15]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect16]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect17]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect18]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect19]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect20]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect21]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect22]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect23]", "tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect24]", "tests/test_build_html.py::test_numfig_disabled_warn", "tests/test_build_html.py::test_numfig_disabled[index.html-expect0]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect1]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect2]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect3]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect4]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect5]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect6]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect7]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect8]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect9]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect10]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect11]", "tests/test_build_html.py::test_numfig_disabled[index.html-expect12]", "tests/test_build_html.py::test_numfig_disabled[foo.html-expect13]", "tests/test_build_html.py::test_numfig_disabled[foo.html-expect14]", "tests/test_build_html.py::test_numfig_disabled[foo.html-expect15]", "tests/test_build_html.py::test_numfig_disabled[bar.html-expect16]", "tests/test_build_html.py::test_numfig_disabled[bar.html-expect17]", "tests/test_build_html.py::test_numfig_disabled[bar.html-expect18]", "tests/test_build_html.py::test_numfig_disabled[baz.html-expect19]", "tests/test_build_html.py::test_numfig_disabled[baz.html-expect20]", "tests/test_build_html.py::test_numfig_disabled[baz.html-expect21]", "tests/test_build_html.py::test_numfig_without_numbered_toctree_warn", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect2]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect3]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect4]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect5]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect6]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect7]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect8]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect9]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect10]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect11]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect12]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect13]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect14]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect15]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect20]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect21]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect22]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect23]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect24]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect25]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect26]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect27]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect31]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect32]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect33]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect34]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect35]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect36]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[baz.html-expect38]", "tests/test_build_html.py::test_numfig_without_numbered_toctree[baz.html-expect39]", "tests/test_build_html.py::test_numfig_with_numbered_toctree_warn", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect2]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect3]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect4]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect5]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect6]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect7]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect8]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect9]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect10]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect11]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect12]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect13]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect14]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect15]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect20]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect21]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect22]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect23]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect24]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect25]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect26]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect27]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect31]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect32]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect33]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect34]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect35]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect36]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[baz.html-expect38]", "tests/test_build_html.py::test_numfig_with_numbered_toctree[baz.html-expect39]", "tests/test_build_html.py::test_numfig_with_prefix_warn", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect2]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect3]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect4]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect5]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect6]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect7]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect8]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect9]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect10]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect11]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect12]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect13]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect14]", "tests/test_build_html.py::test_numfig_with_prefix[index.html-expect15]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect20]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect21]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect22]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect23]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect24]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect25]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect26]", "tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect27]", "tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect31]", "tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect32]", "tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect33]", "tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect34]", "tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect35]", "tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect36]", "tests/test_build_html.py::test_numfig_with_prefix[baz.html-expect38]", "tests/test_build_html.py::test_numfig_with_prefix[baz.html-expect39]", "tests/test_build_html.py::test_numfig_with_secnum_depth_warn", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect2]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect3]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect4]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect5]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect6]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect7]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect8]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect9]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect10]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect11]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect12]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect13]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect14]", "tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect15]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect20]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect21]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect22]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect23]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect24]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect25]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect26]", "tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect27]", "tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect31]", "tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect32]", "tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect33]", "tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect34]", "tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect35]", "tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect36]", "tests/test_build_html.py::test_numfig_with_secnum_depth[baz.html-expect38]", "tests/test_build_html.py::test_numfig_with_secnum_depth[baz.html-expect39]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect2]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect3]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect4]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect5]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect6]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect7]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect8]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect9]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect10]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect11]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect12]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect13]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect14]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect15]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect20]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect21]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect22]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect23]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect24]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect25]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect26]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect27]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect31]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect32]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect33]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect34]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect35]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect36]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect38]", "tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect39]", "tests/test_build_html.py::test_enumerable_node[index.html-expect3]", "tests/test_build_html.py::test_enumerable_node[index.html-expect4]", "tests/test_build_html.py::test_enumerable_node[index.html-expect5]", "tests/test_build_html.py::test_enumerable_node[index.html-expect6]", "tests/test_build_html.py::test_enumerable_node[index.html-expect7]", "tests/test_build_html.py::test_enumerable_node[index.html-expect8]", "tests/test_build_html.py::test_enumerable_node[index.html-expect9]", "tests/test_build_html.py::test_html_assets", "tests/test_build_html.py::test_html_copy_source", "tests/test_build_html.py::test_html_sourcelink_suffix", "tests/test_build_html.py::test_html_sourcelink_suffix_same", "tests/test_build_html.py::test_html_sourcelink_suffix_empty", "tests/test_build_html.py::test_html_entity", "tests/test_build_html.py::test_html_inventory", "tests/test_build_html.py::test_html_raw_directive", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect0]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect1]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect2]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect3]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect4]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect5]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect6]", "tests/test_build_html.py::test_alternate_stylesheets[index.html-expect7]", "tests/test_build_html.py::test_html_style", "tests/test_build_html.py::test_html_remote_images", "tests/test_build_html.py::test_html_sidebar", "tests/test_build_html.py::test_html_manpage[index.html-expect0]", "tests/test_build_html.py::test_html_manpage[index.html-expect1]", "tests/test_build_html.py::test_html_manpage[index.html-expect2]", "tests/test_build_html.py::test_html_baseurl", "tests/test_build_html.py::test_html_baseurl_and_html_file_suffix", "tests/test_build_html.py::test_default_html_math_renderer", "tests/test_build_html.py::test_html_math_renderer_is_mathjax", "tests/test_build_html.py::test_html_math_renderer_is_imgmath", "tests/test_build_html.py::test_html_math_renderer_is_duplicated", "tests/test_build_html.py::test_html_math_renderer_is_duplicated2", "tests/test_build_html.py::test_html_math_renderer_is_chosen", "tests/test_build_html.py::test_html_math_renderer_is_mismatched", "tests/test_build_html.py::test_html_pygments_style_default", "tests/test_build_html.py::test_html_pygments_style_manually", "tests/test_build_html.py::test_html_pygments_for_classic_theme", "tests/test_build_html.py::test_html_dark_pygments_style_default", "tests/test_build_html.py::test_validate_html_extra_path", "tests/test_build_html.py::test_validate_html_static_path", "tests/test_build_html.py::test_html_codeblock_linenos_style_inline"]}
{"instance_id": "sphinx-doc__sphinx-8506", "tests_passing_in_original_repo": ["tests/test_domain_std.py::test_process_doc_handle_figure_caption", "tests/test_domain_std.py::test_process_doc_handle_table_title", "tests/test_domain_std.py::test_get_full_qualified_name", "tests/test_domain_std.py::test_glossary", "tests/test_domain_std.py::test_glossary_warning", "tests/test_domain_std.py::test_glossary_comment", "tests/test_domain_std.py::test_glossary_comment2", "tests/test_domain_std.py::test_glossary_sorted", "tests/test_domain_std.py::test_glossary_alphanumeric", "tests/test_domain_std.py::test_glossary_conflicted_labels", "tests/test_domain_std.py::test_cmdoption", "tests/test_domain_std.py::test_multiple_cmdoptions", "tests/test_domain_std.py::test_disabled_docref"]}
{"instance_id": "sphinx-doc__sphinx-8595", "tests_passing_in_original_repo": []}
{"instance_id": "sphinx-doc__sphinx-8627", "tests_passing_in_original_repo": ["tests/test_util_typing.py::test_restify", "tests/test_util_typing.py::test_restify_type_hints_containers", "tests/test_util_typing.py::test_restify_type_hints_Callable", "tests/test_util_typing.py::test_restify_type_hints_Union", "tests/test_util_typing.py::test_restify_type_hints_typevars", "tests/test_util_typing.py::test_restify_type_hints_custom_class", "tests/test_util_typing.py::test_restify_type_hints_alias", "tests/test_util_typing.py::test_restify_type_ForwardRef", "tests/test_util_typing.py::test_restify_broken_type_hints", "tests/test_util_typing.py::test_stringify", "tests/test_util_typing.py::test_stringify_type_hints_containers", "tests/test_util_typing.py::test_stringify_Annotated", "tests/test_util_typing.py::test_stringify_type_hints_string", "tests/test_util_typing.py::test_stringify_type_hints_Callable", "tests/test_util_typing.py::test_stringify_type_hints_Union", "tests/test_util_typing.py::test_stringify_type_hints_typevars", "tests/test_util_typing.py::test_stringify_type_hints_custom_class", "tests/test_util_typing.py::test_stringify_type_hints_alias", "tests/test_util_typing.py::test_stringify_broken_type_hints"]}
{"instance_id": "sphinx-doc__sphinx-8713", "tests_passing_in_original_repo": ["tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_no_type", "tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_ref_in_type", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_keywords_with_types", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_pep526_annotations", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions", "tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_convert_numpy_type_spec", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_multiple_parameters", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameter_types", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens_invalid", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_return_types", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_token_type", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_tokenize_type_spec", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_type_preprocessor", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute_strip_signature_backslash", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type", "tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_yield_types", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[x,", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*args,", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*x,", "tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_pep526_annotations"]}
{"instance_id": "sphinx-doc__sphinx-8721", "tests_passing_in_original_repo": ["tests/test_ext_viewcode.py::test_linkcode", "tests/test_ext_viewcode.py::test_local_source_files"]}
{"instance_id": "sphinx-doc__sphinx-8801", "tests_passing_in_original_repo": []}
{"instance_id": "sympy__sympy-11400", "tests_passing_in_original_repo": ["test_printmethod", "test_ccode_sqrt", "test_ccode_Pow", "test_ccode_constants_mathh", "test_ccode_constants_other", "test_ccode_Rational", "test_ccode_Integer", "test_ccode_functions", "test_ccode_inline_function", "test_ccode_exceptions", "test_ccode_user_functions", "test_ccode_boolean", "test_ccode_Piecewise", "test_ccode_Piecewise_deep", "test_ccode_ITE", "test_ccode_settings", "test_ccode_Indexed", "test_ccode_Indexed_without_looking_for_contraction", "test_ccode_loops_matrix_vector", "test_dummy_loops", "test_ccode_loops_add", "test_ccode_loops_multiple_contractions", "test_ccode_loops_addfactor", "test_ccode_loops_multiple_terms", "test_dereference_printing", "test_Matrix_printing", "test_ccode_reserved_words", "test_ccode_sign", "test_ccode_Assignment"]}
{"instance_id": "sympy__sympy-11870", "tests_passing_in_original_repo": ["test_sin", "test_sin_cos", "test_sin_series", "test_sin_rewrite", "test_sin_expansion", "test_sin_AccumBounds", "test_trig_symmetry", "test_cos", "test_issue_6190", "test_cos_series", "test_cos_rewrite", "test_cos_expansion", "test_cos_AccumBounds", "test_tan", "test_tan_series", "test_tan_rewrite", "test_tan_subs", "test_tan_expansion", "test_tan_AccumBounds", "test_cot", "test_cot_series", "test_cot_rewrite", "test_cot_subs", "test_cot_expansion", "test_cot_AccumBounds", "test_sinc", "test_asin", "test_asin_series", "test_asin_rewrite", "test_acos", "test_acos_series", "test_acos_rewrite", "test_atan", "test_atan_rewrite", "test_atan2", "test_acot", "test_acot_rewrite", "test_attributes", "test_sincos_rewrite", "test_evenodd_rewrite", "test_issue_4547", "test_as_leading_term_issue_5272", "test_leading_terms", "test_atan2_expansion", "test_aseries", "test_issue_4420", "test_inverses", "test_real_imag", "test_sec", "test_sec_rewrite", "test_csc", "test_asec", "test_asec_is_real", "test_acsc", "test_csc_rewrite", "test_issue_8653", "test_issue_9157", "test_trig_period"]}
{"instance_id": "sympy__sympy-11897", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_symbols", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_Range", "test_latex_sequences", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_commutator", "test_latex_union", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_Complexes", "test_latex_productset", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Hadamard", "test_ZeroMatrix", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_7117", "test_issue_2934", "test_issue_10489"]}
{"instance_id": "sympy__sympy-12171", "tests_passing_in_original_repo": ["test_Integer", "test_Rational", "test_Function", "test_Pow", "test_Mul", "test_constants", "test_containers", "test_Integral"]}
{"instance_id": "sympy__sympy-12236", "tests_passing_in_original_repo": ["test_apart_matrix", "test_apart_symbolic", "test_apart_full", "test_apart_undetermined_coeffs", "test_apart_list", "test_assemble_partfrac_list", "test_noncommutative", "test_Poly_from_dict", "test_Poly_from_list", "test_Poly_from_poly", "test_Poly_from_expr", "test_Poly__new__", "test_Poly__args", "test_Poly__gens", "test_Poly_zero", "test_Poly_one", "test_Poly__unify", "test_Poly_free_symbols", "test_PurePoly_free_symbols", "test_Poly__eq__", "test_PurePoly__eq__", "test_PurePoly_Poly", "test_Poly_get_domain", "test_Poly_set_domain", "test_Poly_get_modulus", "test_Poly_set_modulus", "test_Poly_add_ground", "test_Poly_sub_ground", "test_Poly_mul_ground", "test_Poly_quo_ground", "test_Poly_exquo_ground", "test_Poly_abs", "test_Poly_neg", "test_Poly_add", "test_Poly_sub", "test_Poly_mul", "test_Poly_sqr", "test_Poly_pow", "test_Poly_divmod", "test_Poly_eq_ne", "test_Poly_nonzero", "test_Poly_properties", "test_Poly_is_irreducible", "test_Poly_subs", "test_Poly_replace", "test_Poly_reorder", "test_Poly_ltrim", "test_Poly_has_only_gens", "test_Poly_to_ring", "test_Poly_to_field", "test_Poly_to_exact", "test_Poly_retract", "test_Poly_slice", "test_Poly_coeffs", "test_Poly_monoms", "test_Poly_terms", "test_Poly_all_coeffs", "test_Poly_all_monoms", "test_Poly_all_terms", "test_Poly_termwise", "test_Poly_length", "test_Poly_as_dict", "test_Poly_as_expr", "test_Poly_lift", "test_Poly_deflate", "test_Poly_inject", "test_Poly_eject", "test_Poly_exclude", "test_Poly__gen_to_level", "test_Poly_degree", "test_Poly_degree_list", "test_Poly_total_degree", "test_Poly_homogenize", "test_Poly_homogeneous_order", "test_Poly_LC", "test_Poly_TC", "test_Poly_EC", "test_Poly_coeff", "test_Poly_nth", "test_Poly_LM", "test_Poly_LM_custom_order", "test_Poly_EM", "test_Poly_LT", "test_Poly_ET", "test_Poly_max_norm", "test_Poly_l1_norm", "test_Poly_clear_denoms", "test_Poly_rat_clear_denoms", "test_Poly_integrate", "test_Poly_diff", "test_issue_9585", "test_Poly_eval", "test_Poly___call__", "test_parallel_poly_from_expr", "test_pdiv", "test_div", "test_gcdex", "test_revert", "test_subresultants", "test_resultant", "test_discriminant", "test_dispersion", "test_gcd_list", "test_lcm_list", "test_gcd", "test_gcd_numbers_vs_polys", "test_terms_gcd", "test_trunc", "test_monic", "test_content", "test_primitive", "test_compose", "test_shift", "test_transform", "test_gff", "test_sqf_norm", "test_sqf", "test_factor_large", "test_refine_root", "test_count_roots", "test_Poly_root", "test_real_roots", "test_all_roots", "test_ground_roots", "test_nth_power_roots_poly", "test_reduced", "test_groebner", "test_fglm", "test_is_zero_dimensional", "test_GroebnerBasis", "test_poly", "test_keep_coeff", "test_to_rational_coeffs", "test_factor_terms"]}
{"instance_id": "sympy__sympy-12419", "tests_passing_in_original_repo": ["test_shape", "test_matexpr", "test_subs", "test_ZeroMatrix", "test_ZeroMatrix_doit", "test_Identity", "test_Identity_doit", "test_addition", "test_multiplication", "test_MatPow", "test_MatrixSymbol", "test_dense_conversion", "test_free_symbols", "test_zero_matmul", "test_matadd_simplify", "test_matmul_simplify", "test_invariants", "test_indexing", "test_single_indexing", "test_MatrixElement_commutative", "test_MatrixSymbol_determinant", "test_MatrixElement_diff", "test_MatrixElement_doit", "test_identity_powers", "test_Zero_power", "test_matrixelement_diff"]}
{"instance_id": "sympy__sympy-12454", "tests_passing_in_original_repo": ["test_args", "test_division", "test_sum", "test_addition", "test_fancy_index_matrix", "test_multiplication", "test_power", "test_creation", "test_tolist", "test_as_mutable", "test_determinant", "test_det_LU_decomposition", "test_berkowitz_minors", "test_slicing", "test_submatrix_assignment", "test_extract", "test_reshape", "test_applyfunc", "test_expand", "test_random", "test_LUdecomp", "test_LUsolve", "test_QRsolve", "test_inverse", "test_matrix_inverse_mod", "test_util", "test_jacobian_hessian", "test_QR", "test_QR_non_square", "test_nullspace", "test_columnspace", "test_wronskian", "test_subs", "test_xreplace", "test_transpose", "test_conjugate", "test_conj_dirac", "test_trace", "test_shape", "test_col_row_op", "test_zip_row_op", "test_issue_3950", "test_issue_3981", "test_evalf", "test_is_symbolic", "test_is_upper", "test_is_lower", "test_is_nilpotent", "test_zeros_ones_fill", "test_empty_zeros", "test_inv_iszerofunc", "test_jacobian_metrics", "test_jacobian2", "test_issue_4564", "test_nonvectorJacobian", "test_vec", "test_vech", "test_vech_errors", "test_diag", "test_get_diag_blocks1", "test_get_diag_blocks2", "test_inv_block", "test_creation_args", "test_diagonal_symmetrical", "test_diagonalization", "test_jordan_form", "test_jordan_form_complex_issue_9274", "test_issue_10220", "test_Matrix_berkowitz_charpoly", "test_exp", "test_has", "test_errors", "test_len", "test_integrate", "test_diff", "test_getattr", "test_hessenberg", "test_cholesky", "test_LDLdecomposition", "test_cholesky_solve", "test_LDLsolve", "test_lower_triangular_solve", "test_upper_triangular_solve", "test_diagonal_solve", "test_singular_values", "test_condition_number", "test_equality", "test_col_join", "test_row_insert", "test_col_insert", "test_normalized", "test_print_nonzero", "test_zeros_eye", "test_is_zero", "test_rotation_matrices", "test_DeferredVector", "test_DeferredVector_not_iterable", "test_DeferredVector_Matrix", "test_GramSchmidt", "test_casoratian", "test_zero_dimension_multiply", "test_slice_issue_2884", "test_slice_issue_3401", "test_copyin", "test_invertible_check", "test_issue_5964", "test_issue_7604", "test_is_Identity", "test_dot", "test_dual", "test_anti_symmetric", "test_normalize_sort_diogonalization", "test_issue_5321", "test_issue_5320", "test_issue_11944", "test_cross", "test_hash", "test_adjoint", "test_simplify_immutable", "test_rank", "test_issue_11434", "test_rank_regression_from_so", "test_replace", "test_replace_map", "test_atoms", "test_pinv_solve", "test_gauss_jordan_solve", "test_issue_7201", "test_free_symbols", "test_hermitian", "test_doit", "test_issue_9457_9467_9876", "test_issue_9422", "test_issue_10770", "test_issue_10658", "test_partial_pivoting", "test_iszero_substitution"]}
{"instance_id": "sympy__sympy-12481", "tests_passing_in_original_repo": ["test_Permutation", "test_josephus", "test_ranking", "test_mul", "test_args", "test_Cycle", "test_from_sequence", "test_printing_cyclic"]}
{"instance_id": "sympy__sympy-13031", "tests_passing_in_original_repo": ["test_sparse_matrix", "test_transpose", "test_trace", "test_CL_RL", "test_add", "test_errors", "test_len", "test_sparse_zeros_sparse_eye", "test_copyin", "test_sparse_solve"]}
{"instance_id": "sympy__sympy-13043", "tests_passing_in_original_repo": ["test_decompose", "test_best_origin"]}
{"instance_id": "sympy__sympy-13146", "tests_passing_in_original_repo": ["test_evalf_helpers", "test_evalf_basic", "test_cancellation", "test_evalf_powers", "test_evalf_rump", "test_evalf_complex", "test_evalf_complex_powers", "test_evalf_exponentiation", "test_evalf_complex_cancellation", "test_evalf_bugs", "test_evalf_trig_zero_detection", "test_evalf_sum", "test_evalf_divergent_series", "test_evalf_product", "test_evalf_py_methods", "test_evalf_power_subs_bugs", "test_evalf_arguments", "test_implemented_function_evalf", "test_evaluate_false", "test_evalf_relational", "test_issue_5486", "test_issue_5486_bug", "test_bugs", "test_subs", "test_old_docstring", "test_scaled_zero", "test_chop_value", "test_infinities", "test_to_mpmath", "test_issue_4945", "test_evalf_integral", "test_issue_8821_highprec_from_str", "test_issue_8853", "test_issue_9326", "test_issue_10323"]}
{"instance_id": "sympy__sympy-13177", "tests_passing_in_original_repo": ["test_integers_cache", "test_seterr", "test_mod", "test_divmod", "test_igcd", "test_igcd_lehmer", "test_igcd2", "test_ilcm", "test_igcdex", "test_Integer_new", "test_Rational_new", "test_Number_new", "test_Rational_cmp", "test_Float", "test_float_mpf", "test_Float_RealElement", "test_Float_default_to_highprec_from_str", "test_Float_eval", "test_Float_issue_2107", "test_Infinity", "test_Infinity_2", "test_Mul_Infinity_Zero", "test_Div_By_Zero", "test_Infinity_inequations", "test_NaN", "test_special_numbers", "test_powers", "test_integer_nthroot_overflow", "test_isqrt", "test_powers_Rational", "test_powers_Float", "test_abs1", "test_accept_int", "test_dont_accept_str", "test_int", "test_long", "test_real_bug", "test_bug_sqrt", "test_pi_Pi", "test_no_len", "test_issue_3321", "test_issue_3692", "test_issue_3423", "test_issue_3449", "test_Integer_factors", "test_Rational_factors", "test_issue_4107", "test_IntegerInteger", "test_Rational_gcd_lcm_cofactors", "test_Float_gcd_lcm_cofactors", "test_issue_4611", "test_conversion_to_mpmath", "test_relational", "test_Integer_as_index", "test_Rational_int", "test_zoo", "test_issue_4122", "test_GoldenRatio_expand", "test_as_content_primitive", "test_hashing_sympy_integers", "test_issue_4172", "test_Catalan_EulerGamma_prec", "test_Float_eq", "test_int_NumberSymbols", "test_issue_6640", "test_issue_6349", "test_mpf_norm", "test_latex", "test_issue_7742", "test_Float_idempotence", "test_comp", "test_issue_9491", "test_issue_10063", "test_issue_10020", "test_invert_numbers", "test_mod_inverse", "test_golden_ratio_rewrite_as_sqrt", "test_comparisons_with_unknown_type"]}
{"instance_id": "sympy__sympy-13437", "tests_passing_in_original_repo": ["test_bernoulli", "test_fibonacci", "test_bell", "test_harmonic", "test_harmonic_rational", "test_harmonic_evalf", "test_harmonic_rewrite_polygamma", "test_harmonic_rewrite_sum", "test_euler", "test_euler_odd", "test_euler_polynomials", "test_euler_polynomial_rewrite", "test_catalan", "test_genocchi", "test_nC_nP_nT", "test_issue_8496"]}
{"instance_id": "sympy__sympy-13471", "tests_passing_in_original_repo": ["test_integers_cache", "test_seterr", "test_mod", "test_divmod", "test_igcd", "test_igcd_lehmer", "test_igcd2", "test_ilcm", "test_igcdex", "test_Integer_new", "test_Rational_new", "test_Number_new", "test_Rational_cmp", "test_Float", "test_float_mpf", "test_Float_RealElement", "test_Float_default_to_highprec_from_str", "test_Float_eval", "test_Float_issue_2107", "test_Infinity", "test_Infinity_2", "test_Mul_Infinity_Zero", "test_Div_By_Zero", "test_Infinity_inequations", "test_NaN", "test_special_numbers", "test_powers", "test_integer_nthroot_overflow", "test_isqrt", "test_powers_Integer", "test_powers_Rational", "test_powers_Float", "test_abs1", "test_accept_int", "test_dont_accept_str", "test_int", "test_long", "test_real_bug", "test_bug_sqrt", "test_pi_Pi", "test_no_len", "test_issue_3321", "test_issue_3692", "test_issue_3423", "test_issue_3449", "test_Integer_factors", "test_Rational_factors", "test_issue_4107", "test_IntegerInteger", "test_Rational_gcd_lcm_cofactors", "test_Float_gcd_lcm_cofactors", "test_issue_4611", "test_conversion_to_mpmath", "test_relational", "test_Integer_as_index", "test_Rational_int", "test_zoo", "test_issue_4122", "test_GoldenRatio_expand", "test_as_content_primitive", "test_hashing_sympy_integers", "test_issue_4172", "test_Catalan_EulerGamma_prec", "test_Float_eq", "test_int_NumberSymbols", "test_issue_6640", "test_issue_6349", "test_mpf_norm", "test_latex", "test_issue_7742", "test_simplify_AlgebraicNumber", "test_Float_idempotence", "test_comp", "test_issue_9491", "test_issue_10063", "test_issue_10020", "test_invert_numbers", "test_mod_inverse", "test_golden_ratio_rewrite_as_sqrt", "test_comparisons_with_unknown_type", "test_NumberSymbol_comparison", "test_Integer_precision"]}
{"instance_id": "sympy__sympy-13480", "tests_passing_in_original_repo": ["test_sinh", "test_sinh_series", "test_cosh", "test_cosh_series", "test_tanh", "test_tanh_series", "test_coth", "test_coth_series", "test_csch", "test_csch_series", "test_sech", "test_sech_series", "test_asinh", "test_asinh_rewrite", "test_asinh_series", "test_acosh", "test_acosh_rewrite", "test_acosh_series", "test_asech", "test_asech_series", "test_asech_rewrite", "test_acsch", "test_acsch_infinities", "test_acsch_rewrite", "test_atanh", "test_atanh_rewrite", "test_atanh_series", "test_acoth", "test_acoth_rewrite", "test_acoth_series", "test_inverses", "test_leading_term", "test_complex", "test_complex_2899", "test_simplifications", "test_issue_4136", "test_sinh_rewrite", "test_cosh_rewrite", "test_tanh_rewrite", "test_coth_rewrite", "test_csch_rewrite", "test_sech_rewrite", "test_derivs", "test_sinh_expansion"]}
{"instance_id": "sympy__sympy-13647", "tests_passing_in_original_repo": ["test__MinimalMatrix", "test_vec", "test_tolist", "test_row_col_del", "test_get_diag_blocks1", "test_get_diag_blocks2", "test_shape", "test_reshape", "test_row_col", "test_row_join", "test_col_join", "test_row_insert", "test_col_insert", "test_extract", "test_hstack", "test_vstack", "test_atoms", "test_free_symbols", "test_has", "test_is_anti_symmetric", "test_diagonal_symmetrical", "test_is_hermitian", "test_is_Identity", "test_is_symbolic", "test_is_upper", "test_is_lower", "test_is_square", "test_is_symmetric", "test_is_hessenberg", "test_is_zero", "test_values", "test_applyfunc", "test_adjoint", "test_as_real_imag", "test_conjugate", "test_doit", "test_evalf", "test_expand", "test_replace", "test_replace_map", "test_simplify", "test_subs", "test_trace", "test_xreplace", "test_permute", "test_abs", "test_add", "test_multiplication", "test_power", "test_neg", "test_sub", "test_div", "test_det", "test_adjugate", "test_cofactor_and_minors", "test_charpoly", "test_row_op", "test_col_op", "test_is_echelon", "test_echelon_form", "test_rref", "test_eye", "test_ones", "test_zeros", "test_diag", "test_jordan_block", "test_columnspace", "test_rowspace", "test_nullspace", "test_eigenvals", "test_eigenvects", "test_left_eigenvects", "test_diagonalize", "test_is_diagonalizable", "test_jordan_form", "test_singular_values", "test_integrate"]}
{"instance_id": "sympy__sympy-13773", "tests_passing_in_original_repo": ["test__MinimalMatrix", "test_vec", "test_tolist", "test_row_col_del", "test_get_diag_blocks1", "test_get_diag_blocks2", "test_shape", "test_reshape", "test_row_col", "test_row_join", "test_col_join", "test_row_insert", "test_col_insert", "test_extract", "test_hstack", "test_vstack", "test_atoms", "test_free_symbols", "test_has", "test_is_anti_symmetric", "test_diagonal_symmetrical", "test_is_hermitian", "test_is_Identity", "test_is_symbolic", "test_is_upper", "test_is_lower", "test_is_square", "test_is_symmetric", "test_is_hessenberg", "test_is_zero", "test_values", "test_adjoint", "test_as_real_imag", "test_conjugate", "test_doit", "test_evalf", "test_expand", "test_replace", "test_replace_map", "test_simplify", "test_subs", "test_trace", "test_xreplace", "test_permute", "test_abs", "test_add", "test_power", "test_neg", "test_sub", "test_det", "test_adjugate", "test_cofactor_and_minors", "test_charpoly", "test_row_op", "test_col_op", "test_is_echelon", "test_echelon_form", "test_rref", "test_eye", "test_ones", "test_zeros", "test_diag", "test_jordan_block", "test_columnspace", "test_rowspace", "test_nullspace", "test_eigenvals", "test_singular_values", "test_integrate"]}
{"instance_id": "sympy__sympy-13895", "tests_passing_in_original_repo": ["test_integers_cache", "test_seterr", "test_mod", "test_divmod", "test_igcd", "test_igcd_lehmer", "test_igcd2", "test_ilcm", "test_igcdex", "test_Integer_new", "test_Rational_new", "test_Number_new", "test_Rational_cmp", "test_Float", "test_float_mpf", "test_Float_RealElement", "test_Float_default_to_highprec_from_str", "test_Float_eval", "test_Float_issue_2107", "test_Float_from_tuple", "test_Infinity", "test_Infinity_2", "test_Mul_Infinity_Zero", "test_Div_By_Zero", "test_Infinity_inequations", "test_NaN", "test_special_numbers", "test_powers", "test_integer_nthroot_overflow", "test_isqrt", "test_powers_Integer", "test_powers_Rational", "test_powers_Float", "test_abs1", "test_accept_int", "test_dont_accept_str", "test_int", "test_long", "test_real_bug", "test_bug_sqrt", "test_pi_Pi", "test_no_len", "test_issue_3321", "test_issue_3692", "test_issue_3423", "test_issue_3449", "test_Integer_factors", "test_Rational_factors", "test_issue_4107", "test_IntegerInteger", "test_Rational_gcd_lcm_cofactors", "test_Float_gcd_lcm_cofactors", "test_issue_4611", "test_conversion_to_mpmath", "test_relational", "test_Integer_as_index", "test_Rational_int", "test_zoo", "test_issue_4122", "test_GoldenRatio_expand", "test_as_content_primitive", "test_hashing_sympy_integers", "test_issue_4172", "test_Catalan_EulerGamma_prec", "test_Float_eq", "test_int_NumberSymbols", "test_issue_6640", "test_issue_6349", "test_mpf_norm", "test_latex", "test_issue_7742", "test_simplify_AlgebraicNumber", "test_Float_idempotence", "test_comp", "test_issue_9491", "test_issue_10063", "test_issue_10020", "test_invert_numbers", "test_mod_inverse", "test_golden_ratio_rewrite_as_sqrt", "test_comparisons_with_unknown_type", "test_NumberSymbol_comparison", "test_Integer_precision"]}
{"instance_id": "sympy__sympy-13915", "tests_passing_in_original_repo": ["test_bug1", "test_Symbol", "test_arit0", "test_pow2", "test_pow3", "test_mod_pow", "test_pow_E", "test_pow_issue_3516", "test_pow_im", "test_real_mul", "test_ncmul", "test_ncpow", "test_powerbug", "test_Mul_doesnt_expand_exp", "test_Add_Mul_is_integer", "test_Add_Mul_is_finite", "test_Mul_is_even_odd", "test_evenness_in_ternary_integer_product_with_even", "test_oddness_in_ternary_integer_product_with_even", "test_Mul_is_rational", "test_Add_is_rational", "test_Add_is_even_odd", "test_Mul_is_negative_positive", "test_Mul_is_negative_positive_2", "test_Mul_is_nonpositive_nonnegative", "test_Pow_is_zero", "test_Mul_hermitian_antihermitian", "test_Add_is_comparable", "test_Mul_is_comparable", "test_Pow_is_comparable", "test_Add_is_positive_2", "test_Add_is_irrational", "test_issue_3531b", "test_bug3", "test_suppressed_evaluation", "test_Add_as_coeff_mul", "test_Pow_as_coeff_mul_doesnt_expand", "test_issue_3514", "test_make_args", "test_issue_5126", "test_Rational_as_content_primitive", "test_Add_as_content_primitive", "test_Mul_as_content_primitive", "test_Pow_as_content_primitive", "test_issue_5460", "test_product_irrational", "test_issue_5919", "test_Mod_is_integer", "test_issue_6001", "test_polar", "test_issue_6040", "test_issue_6082", "test_issue_6077", "test_mul_flatten_oo", "test_add_flatten", "test_issue_5160_6087_6089_6090", "test_float_int", "test_issue_6611a", "test_denest_add_mul", "test_mul_zero_detection", "test_Mul_with_zero_infinite", "test_issue_8247_8354"]}
{"instance_id": "sympy__sympy-13971", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_vector_expressions", "test_latex_symbols", "test_latex_functions", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_Range", "test_latex_sequences", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_commutator", "test_latex_union", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_Complexes", "test_latex_productset", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_latex_euler", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Hadamard", "test_ZeroMatrix", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_7117", "test_issue_2934", "test_issue_10489", "test_issue_12886", "test_issue_13651", "test_latex_UnevaluatedExpr", "test_MatrixElement_printing", "test_Quaternion_latex_printing"]}
{"instance_id": "sympy__sympy-14024", "tests_passing_in_original_repo": ["test_integers_cache", "test_seterr", "test_mod", "test_divmod", "test_igcd", "test_igcd_lehmer", "test_igcd2", "test_ilcm", "test_igcdex", "test_Integer_new", "test_Rational_new", "test_Number_new", "test_Rational_cmp", "test_Float", "test_float_mpf", "test_Float_RealElement", "test_Float_default_to_highprec_from_str", "test_Float_eval", "test_Float_issue_2107", "test_Float_from_tuple", "test_Infinity", "test_Infinity_2", "test_Mul_Infinity_Zero", "test_Div_By_Zero", "test_Infinity_inequations", "test_NaN", "test_special_numbers", "test_powers", "test_integer_nthroot_overflow", "test_integer_log", "test_isqrt", "test_powers_Integer", "test_powers_Rational", "test_powers_Float", "test_abs1", "test_accept_int", "test_dont_accept_str", "test_int", "test_long", "test_real_bug", "test_bug_sqrt", "test_pi_Pi", "test_no_len", "test_issue_3321", "test_issue_3692", "test_issue_3423", "test_issue_3449", "test_issue_13890", "test_Integer_factors", "test_Rational_factors", "test_issue_4107", "test_IntegerInteger", "test_Rational_gcd_lcm_cofactors", "test_Float_gcd_lcm_cofactors", "test_issue_4611", "test_conversion_to_mpmath", "test_relational", "test_Integer_as_index", "test_Rational_int", "test_zoo", "test_issue_4122", "test_GoldenRatio_expand", "test_as_content_primitive", "test_hashing_sympy_integers", "test_issue_4172", "test_Catalan_EulerGamma_prec", "test_Float_eq", "test_int_NumberSymbols", "test_issue_6640", "test_issue_6349", "test_mpf_norm", "test_latex", "test_issue_7742", "test_simplify_AlgebraicNumber", "test_Float_idempotence", "test_comp", "test_issue_9491", "test_issue_10063", "test_issue_10020", "test_invert_numbers", "test_mod_inverse", "test_golden_ratio_rewrite_as_sqrt", "test_comparisons_with_unknown_type", "test_NumberSymbol_comparison", "test_Integer_precision"]}
{"instance_id": "sympy__sympy-14308", "tests_passing_in_original_repo": ["test_pretty_ascii_str", "test_pretty_unicode_str", "test_upretty_greek", "test_upretty_multiindex", "test_upretty_sub_super", "test_upretty_subs_missing_in_24", "test_upretty_modifiers", "test_pretty_Cycle", "test_pretty_basic", "test_negative_fractions", "test_issue_5524", "test_pretty_ordering", "test_EulerGamma", "test_GoldenRatio", "test_pretty_relational", "test_Assignment", "test_AugmentedAssignment", "test_issue_7117", "test_pretty_rational", "test_pretty_functions", "test_pretty_sqrt", "test_pretty_sqrt_char_knob", "test_pretty_sqrt_longsymbol_no_sqrt_char", "test_pretty_KroneckerDelta", "test_pretty_product", "test_pretty_lambda", "test_pretty_order", "test_pretty_derivatives", "test_pretty_integrals", "test_pretty_matrix", "test_pretty_ndim_arrays", "test_tensor_TensorProduct", "test_diffgeom_print_WedgeProduct", "test_Adjoint", "test_pretty_Trace_issue_9044", "test_MatrixExpressions", "test_pretty_dotproduct", "test_pretty_piecewise", "test_pretty_ITE", "test_pretty_seq", "test_any_object_in_sequence", "test_print_builtin_set", "test_pretty_sets", "test_pretty_SetExpr", "test_pretty_ImageSet", "test_pretty_ConditionSet", "test_pretty_ComplexRegion", "test_pretty_Union_issue_10414", "test_pretty_Intersection_issue_10414", "test_ProductSet_paranthesis", "test_ProductSet_prod_char_issue_10413", "test_pretty_sequences", "test_pretty_FourierSeries", "test_pretty_FormalPowerSeries", "test_pretty_limits", "test_pretty_ComplexRootOf", "test_pretty_RootSum", "test_GroebnerBasis", "test_pretty_Boolean", "test_pretty_Domain", "test_pretty_prec", "test_pprint", "test_pretty_class", "test_pretty_no_wrap_line", "test_settings", "test_pretty_sum", "test_units", "test_pretty_Subs", "test_gammas", "test_beta", "test_function_subclass_different_name", "test_SingularityFunction", "test_deltas", "test_hyper", "test_meijerg", "test_noncommutative", "test_pretty_special_functions", "test_expint", "test_elliptic_functions", "test_RandomDomain", "test_PrettyPoly", "test_issue_6285", "test_issue_6359", "test_issue_6739", "test_complicated_symbol_unchanged", "test_categories", "test_PrettyModules", "test_QuotientRing", "test_Homomorphism", "test_Tr", "test_pretty_Add", "test_issue_7179", "test_issue_7180", "test_pretty_Complement", "test_pretty_SymmetricDifference", "test_pretty_Contains", "test_issue_4335", "test_issue_6324", "test_issue_7927", "test_issue_6134", "test_issue_9877", "test_issue_13651", "test_pretty_primenu", "test_pretty_primeomega", "test_pretty_Mod", "test_issue_11801", "test_pretty_UnevaluatedExpr", "test_issue_10472", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_degree_printing", "test_str_printing", "test_pretty_print_unicode", "test_latex_printing"]}
{"instance_id": "sympy__sympy-14317", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_vector_expressions", "test_latex_symbols", "test_latex_functions", "test_function_subclass_different_name", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_indexed", "test_latex_derivatives", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_SetExpr", "test_latex_Range", "test_latex_sequences", "test_latex_FourierSeries", "test_latex_FormalPowerSeries", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_commutator", "test_latex_union", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_Complexes", "test_latex_productset", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_latex_log", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_matrix_with_functions", "test_latex_NDimArray", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_latex_euler", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Hadamard", "test_ZeroMatrix", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_7117", "test_issue_2934", "test_issue_10489", "test_issue_12886", "test_issue_13651", "test_latex_UnevaluatedExpr", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_Quaternion_latex_printing", "test_TensorProduct_printing", "test_WedgeProduct_printing", "test_units"]}
{"instance_id": "sympy__sympy-14396", "tests_passing_in_original_repo": ["test_Options_clone", "test_Expand_preprocess", "test_Expand_postprocess", "test_Gens_preprocess", "test_Gens_postprocess", "test_Wrt_preprocess", "test_Wrt_postprocess", "test_Sort_preprocess", "test_Sort_postprocess", "test_Order_preprocess", "test_Order_postprocess", "test_Field_preprocess", "test_Field_postprocess", "test_Greedy_preprocess", "test_Greedy_postprocess", "test_Domain_preprocess", "test_Domain_postprocess", "test_Split_preprocess", "test_Split_postprocess", "test_Gaussian_preprocess", "test_Gaussian_postprocess", "test_Extension_preprocess", "test_Extension_postprocess", "test_Modulus_preprocess", "test_Modulus_postprocess", "test_Symmetric_preprocess", "test_Symmetric_postprocess", "test_Strict_preprocess", "test_Strict_postprocess", "test_Auto_preprocess", "test_Auto_postprocess", "test_Frac_preprocess", "test_Frac_postprocess", "test_Formal_preprocess", "test_Formal_postprocess", "test_Polys_preprocess", "test_Polys_postprocess", "test_Include_preprocess", "test_Include_postprocess", "test_All_preprocess", "test_All_postprocess", "test_Gen_postprocess", "test_Symbols_preprocess", "test_Symbols_postprocess", "test_Method_preprocess"]}
{"instance_id": "sympy__sympy-14774", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_vector_expressions", "test_latex_symbols", "test_latex_functions", "test_function_subclass_different_name", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_indexed", "test_latex_derivatives", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_SetExpr", "test_latex_Range", "test_latex_sequences", "test_latex_FourierSeries", "test_latex_FormalPowerSeries", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_commutator", "test_latex_union", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_Complexes", "test_latex_productset", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_latex_log", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_matrix_with_functions", "test_latex_NDimArray", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_Poly_order", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_latex_euler", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Hadamard", "test_ZeroMatrix", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_7117", "test_issue_2934", "test_issue_10489", "test_issue_12886", "test_issue_13651", "test_latex_UnevaluatedExpr", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_Quaternion_latex_printing", "test_TensorProduct_printing"]}
{"instance_id": "sympy__sympy-14817", "tests_passing_in_original_repo": ["test_pretty_ascii_str", "test_pretty_unicode_str", "test_upretty_greek", "test_upretty_multiindex", "test_upretty_sub_super", "test_upretty_subs_missing_in_24", "test_upretty_modifiers", "test_pretty_Cycle", "test_pretty_basic", "test_negative_fractions", "test_issue_5524", "test_pretty_ordering", "test_EulerGamma", "test_GoldenRatio", "test_pretty_relational", "test_Assignment", "test_AugmentedAssignment", "test_issue_7117", "test_pretty_rational", "test_pretty_functions", "test_pretty_sqrt", "test_pretty_sqrt_char_knob", "test_pretty_sqrt_longsymbol_no_sqrt_char", "test_pretty_KroneckerDelta", "test_pretty_product", "test_pretty_lambda", "test_pretty_order", "test_pretty_derivatives", "test_pretty_integrals", "test_pretty_matrix", "test_pretty_ndim_arrays", "test_tensor_TensorProduct", "test_diffgeom_print_WedgeProduct", "test_Adjoint", "test_pretty_Trace_issue_9044", "test_MatrixExpressions", "test_pretty_dotproduct", "test_pretty_piecewise", "test_pretty_ITE", "test_pretty_seq", "test_any_object_in_sequence", "test_print_builtin_set", "test_pretty_sets", "test_pretty_SetExpr", "test_pretty_ImageSet", "test_pretty_ConditionSet", "test_pretty_ComplexRegion", "test_pretty_Union_issue_10414", "test_pretty_Intersection_issue_10414", "test_ProductSet_paranthesis", "test_ProductSet_prod_char_issue_10413", "test_pretty_sequences", "test_pretty_FourierSeries", "test_pretty_FormalPowerSeries", "test_pretty_limits", "test_pretty_ComplexRootOf", "test_pretty_RootSum", "test_GroebnerBasis", "test_pretty_Boolean", "test_pretty_Domain", "test_pretty_prec", "test_pprint", "test_pretty_class", "test_pretty_no_wrap_line", "test_settings", "test_pretty_sum", "test_units", "test_pretty_Subs", "test_gammas", "test_beta", "test_function_subclass_different_name", "test_SingularityFunction", "test_deltas", "test_hyper", "test_meijerg", "test_noncommutative", "test_pretty_special_functions", "test_expint", "test_elliptic_functions", "test_RandomDomain", "test_PrettyPoly", "test_issue_6285", "test_issue_6359", "test_issue_6739", "test_complicated_symbol_unchanged", "test_categories", "test_PrettyModules", "test_QuotientRing", "test_Homomorphism", "test_Tr", "test_pretty_Add", "test_issue_7179", "test_issue_7180", "test_pretty_Complement", "test_pretty_SymmetricDifference", "test_pretty_Contains", "test_issue_4335", "test_issue_6324", "test_issue_7927", "test_issue_6134", "test_issue_9877", "test_issue_13651", "test_pretty_primenu", "test_pretty_primeomega", "test_pretty_Mod", "test_issue_11801", "test_pretty_UnevaluatedExpr", "test_issue_10472", "test_MatrixElement_printing", "test_issue_12675", "test_MatrixSymbol_printing", "test_degree_printing"]}
{"instance_id": "sympy__sympy-15011", "tests_passing_in_original_repo": ["test_no_args", "test_single_arg", "test_list_args", "test_nested_args", "test_str_args", "test_own_namespace_1", "test_own_namespace_2", "test_own_module", "test_bad_args", "test_atoms", "test_sympy_lambda", "test_math_lambda", "test_mpmath_lambda", "test_number_precision", "test_mpmath_precision", "test_math_transl", "test_mpmath_transl", "test_exponentiation", "test_sqrt", "test_trig", "test_vector_simple", "test_vector_discontinuous", "test_trig_symbolic", "test_trig_float", "test_docs", "test_math", "test_sin", "test_matrix", "test_issue9474", "test_integral", "test_sym_single_arg", "test_sym_list_args", "test_sym_integral", "test_namespace_order", "test_namespace_type", "test_imps", "test_imps_errors", "test_imps_wrong_args", "test_lambdify_imps", "test_dummification", "test_python_keywords", "test_lambdify_docstring", "test_special_printers", "test_true_false", "test_issue_2790", "test_issue_12092", "test_ITE", "test_Min_Max", "test_issue_12173", "test_sinc_mpmath", "test_lambdify_dummy_arg", "test_lambdify_mixed_symbol_dummy_args", "test_lambdify_inspect"]}
{"instance_id": "sympy__sympy-15308", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_vector_expressions", "test_latex_symbols", "test_latex_functions", "test_function_subclass_different_name", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_indexed", "test_latex_derivatives", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_SetExpr", "test_latex_Range", "test_latex_sequences", "test_latex_FourierSeries", "test_latex_FormalPowerSeries", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_commutator", "test_latex_union", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_Complexes", "test_latex_productset", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_latex_log", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_matrix_with_functions", "test_latex_NDimArray", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_Poly_order", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_latex_euler", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Hadamard", "test_ZeroMatrix", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_7117", "test_issue_2934", "test_issue_10489", "test_issue_12886", "test_issue_13651", "test_latex_UnevaluatedExpr", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_Quaternion_latex_printing", "test_TensorProduct_printing", "test_WedgeProduct_printing", "test_issue_14041", "test_issue_9216"]}
{"instance_id": "sympy__sympy-15345", "tests_passing_in_original_repo": ["test_Integer", "test_Rational", "test_Function", "test_Pow", "test_Mul", "test_constants", "test_containers", "test_Integral", "test_Derivative"]}
{"instance_id": "sympy__sympy-15346", "tests_passing_in_original_repo": ["test_trigsimp1", "test_trigsimp1a", "test_trigsimp2", "test_issue_4373", "test_trigsimp3", "test_issue_4661", "test_issue_4494", "test_issue_5948", "test_issue_4775", "test_issue_4280", "test_issue_3210", "test_trigsimp_issues", "test_trigsimp_issue_2515", "test_trigsimp_issue_3826", "test_trigsimp_issue_4032", "test_trigsimp_issue_7761", "test_trigsimp_noncommutative", "test_hyperbolic_simp", "test_trigsimp_groebner", "test_issue_2827_trigsimp_methods", "test_exptrigsimp", "test_powsimp_on_numbers"]}
{"instance_id": "sympy__sympy-15609", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_vector_expressions", "test_latex_symbols", "test_latex_functions", "test_function_subclass_different_name", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_indexed", "test_latex_derivatives", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_SetExpr", "test_latex_Range", "test_latex_sequences", "test_latex_FourierSeries", "test_latex_FormalPowerSeries", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_commutator", "test_latex_union", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_Complexes", "test_latex_productset", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_latex_log", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_matrix_with_functions", "test_latex_NDimArray", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_Poly_order", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_latex_euler", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Hadamard", "test_ZeroMatrix", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_7117", "test_issue_15439", "test_issue_2934", "test_issue_10489", "test_issue_12886", "test_issue_13651", "test_latex_UnevaluatedExpr", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_Quaternion_latex_printing", "test_TensorProduct_printing", "test_WedgeProduct_printing", "test_issue_14041", "test_issue_9216", "test_latex_printer_tensor", "test_trace"]}
{"instance_id": "sympy__sympy-15678", "tests_passing_in_original_repo": ["test_idiff", "test_intersection", "test_convex_hull", "test_centroid"]}
{"instance_id": "sympy__sympy-16106", "tests_passing_in_original_repo": ["test_mathml_printer", "test_content_printmethod", "test_content_mathml_core", "test_content_mathml_functions", "test_content_mathml_limits", "test_content_mathml_integrals", "test_content_mathml_matrices", "test_content_mathml_sums", "test_content_mathml_tuples", "test_content_mathml_add", "test_content_mathml_Rational", "test_content_mathml_constants", "test_content_mathml_trig", "test_content_mathml_relational", "test_content_symbol", "test_content_mathml_greek", "test_content_mathml_order", "test_content_settings", "test_presentation_printmethod", "test_presentation_mathml_core", "test_presentation_mathml_functions", "test_print_derivative", "test_presentation_mathml_limits", "test_presentation_mathml_integrals", "test_presentation_mathml_matrices", "test_presentation_mathml_sums", "test_presentation_mathml_add", "test_presentation_mathml_Rational", "test_presentation_mathml_constants", "test_presentation_mathml_trig", "test_presentation_mathml_relational", "test_presentation_symbol", "test_presentation_mathml_greek", "test_presentation_mathml_order", "test_print_tuples", "test_print_re_im", "test_presentation_settings", "test_toprettyxml_hooking", "test_print_domains", "test_print_expression_with_minus", "test_print_AssocOp", "test_print_basic", "test_ln_notation_print", "test_mul_symbol_print", "test_print_lerchphi", "test_print_polylog", "test_print_logic", "test_root_notation_print", "test_fold_frac_powers_print", "test_fold_short_frac_print", "test_print_factorials", "test_print_Lambda", "test_print_conjugate", "test_print_matrix_symbol"]}
{"instance_id": "sympy__sympy-16281", "tests_passing_in_original_repo": ["test_pretty_ascii_str", "test_pretty_unicode_str", "test_upretty_greek", "test_upretty_multiindex", "test_upretty_sub_super", "test_upretty_subs_missing_in_24", "test_missing_in_2X_issue_9047", "test_upretty_modifiers", "test_pretty_Cycle", "test_pretty_basic", "test_negative_fractions", "test_issue_5524", "test_pretty_ordering", "test_EulerGamma", "test_GoldenRatio", "test_pretty_relational", "test_Assignment", "test_AugmentedAssignment", "test_issue_7117", "test_pretty_rational", "test_pretty_functions", "test_pretty_sqrt", "test_pretty_sqrt_char_knob", "test_pretty_sqrt_longsymbol_no_sqrt_char", "test_pretty_KroneckerDelta", "test_pretty_product", "test_pretty_lambda", "test_pretty_order", "test_pretty_derivatives", "test_pretty_integrals", "test_pretty_matrix", "test_pretty_ndim_arrays", "test_tensor_TensorProduct", "test_diffgeom_print_WedgeProduct", "test_Adjoint", "test_pretty_Trace_issue_9044", "test_MatrixExpressions", "test_pretty_dotproduct", "test_pretty_piecewise", "test_pretty_ITE", "test_pretty_seq", "test_any_object_in_sequence", "test_print_builtin_set", "test_pretty_sets", "test_pretty_SetExpr", "test_pretty_ImageSet", "test_pretty_ConditionSet", "test_pretty_ComplexRegion", "test_pretty_Union_issue_10414", "test_pretty_Intersection_issue_10414", "test_ProductSet_paranthesis", "test_ProductSet_prod_char_issue_10413", "test_pretty_sequences", "test_pretty_FourierSeries", "test_pretty_FormalPowerSeries", "test_pretty_limits", "test_pretty_ComplexRootOf", "test_pretty_RootSum", "test_GroebnerBasis", "test_pretty_Boolean", "test_pretty_Domain", "test_pretty_prec", "test_pprint", "test_pretty_class", "test_pretty_no_wrap_line", "test_settings", "test_pretty_sum", "test_units", "test_pretty_Subs", "test_gammas", "test_beta", "test_function_subclass_different_name", "test_SingularityFunction", "test_deltas", "test_hyper", "test_meijerg", "test_noncommutative", "test_pretty_special_functions", "test_pretty_geometry", "test_expint", "test_elliptic_functions", "test_RandomDomain", "test_PrettyPoly", "test_issue_6285", "test_issue_6359", "test_issue_6739", "test_complicated_symbol_unchanged", "test_categories", "test_PrettyModules", "test_QuotientRing", "test_Homomorphism", "test_Tr", "test_pretty_Add", "test_issue_7179", "test_issue_7180", "test_pretty_Complement", "test_pretty_SymmetricDifference", "test_pretty_Contains", "test_issue_4335", "test_issue_6324", "test_issue_7927", "test_issue_6134", "test_issue_9877", "test_issue_13651", "test_pretty_primenu", "test_pretty_primeomega", "test_pretty_Mod", "test_issue_11801", "test_pretty_UnevaluatedExpr", "test_issue_10472", "test_MatrixElement_printing", "test_issue_12675", "test_MatrixSymbol_printing", "test_degree_printing", "test_vector_expr_pretty_printing", "test_pretty_print_tensor_expr", "test_pretty_print_tensor_partial_deriv", "test_issue_15560", "test_print_lerchphi", "test_issue_15583", "test_matrixSymbolBold", "test_center_accent"]}
{"instance_id": "sympy__sympy-16503", "tests_passing_in_original_repo": ["test_pretty_ascii_str", "test_pretty_unicode_str", "test_upretty_greek", "test_upretty_multiindex", "test_upretty_sub_super", "test_upretty_subs_missing_in_24", "test_missing_in_2X_issue_9047", "test_upretty_modifiers", "test_pretty_Cycle", "test_pretty_basic", "test_negative_fractions", "test_issue_5524", "test_pretty_ordering", "test_EulerGamma", "test_GoldenRatio", "test_pretty_relational", "test_Assignment", "test_AugmentedAssignment", "test_issue_7117", "test_pretty_rational", "test_pretty_functions", "test_pretty_sqrt", "test_pretty_sqrt_char_knob", "test_pretty_sqrt_longsymbol_no_sqrt_char", "test_pretty_KroneckerDelta", "test_pretty_product", "test_pretty_lambda", "test_pretty_order", "test_pretty_derivatives", "test_pretty_integrals", "test_pretty_matrix", "test_pretty_ndim_arrays", "test_tensor_TensorProduct", "test_diffgeom_print_WedgeProduct", "test_Adjoint", "test_pretty_Trace_issue_9044", "test_MatrixExpressions", "test_pretty_dotproduct", "test_pretty_piecewise", "test_pretty_ITE", "test_pretty_seq", "test_any_object_in_sequence", "test_print_builtin_set", "test_pretty_sets", "test_pretty_SetExpr", "test_pretty_ImageSet", "test_pretty_ConditionSet", "test_pretty_ComplexRegion", "test_pretty_Union_issue_10414", "test_pretty_Intersection_issue_10414", "test_ProductSet_paranthesis", "test_ProductSet_prod_char_issue_10413", "test_pretty_sequences", "test_pretty_FourierSeries", "test_pretty_FormalPowerSeries", "test_pretty_limits", "test_pretty_ComplexRootOf", "test_pretty_RootSum", "test_GroebnerBasis", "test_pretty_Boolean", "test_pretty_Domain", "test_pretty_prec", "test_pprint", "test_pretty_class", "test_pretty_no_wrap_line", "test_settings", "test_pretty_sum", "test_units", "test_pretty_Subs", "test_gammas", "test_beta", "test_function_subclass_different_name", "test_SingularityFunction", "test_deltas", "test_hyper", "test_meijerg", "test_noncommutative", "test_pretty_special_functions", "test_pretty_geometry", "test_expint", "test_elliptic_functions", "test_RandomDomain", "test_PrettyPoly", "test_issue_6285", "test_issue_6359", "test_issue_6739", "test_complicated_symbol_unchanged", "test_categories", "test_PrettyModules", "test_QuotientRing", "test_Homomorphism", "test_Tr", "test_pretty_Add", "test_issue_7179", "test_issue_7180", "test_pretty_Complement", "test_pretty_SymmetricDifference", "test_pretty_Contains", "test_issue_4335", "test_issue_6324", "test_issue_7927", "test_issue_6134", "test_issue_9877", "test_issue_13651", "test_pretty_primenu", "test_pretty_primeomega", "test_pretty_Mod", "test_issue_11801", "test_pretty_UnevaluatedExpr", "test_issue_10472", "test_MatrixElement_printing", "test_issue_12675", "test_MatrixSymbol_printing", "test_degree_printing", "test_vector_expr_pretty_printing", "test_pretty_print_tensor_expr", "test_pretty_print_tensor_partial_deriv", "test_issue_15560", "test_print_lerchphi", "test_issue_15583", "test_matrixSymbolBold", "test_center_accent"]}
{"instance_id": "sympy__sympy-16792", "tests_passing_in_original_repo": ["test_Routine_argument_order", "test_empty_c_code", "test_empty_c_code_with_comment", "test_empty_c_header", "test_simple_c_code", "test_c_code_reserved_words", "test_numbersymbol_c_code", "test_c_code_argument_order", "test_simple_c_header", "test_simple_c_codegen", "test_multiple_results_c", "test_no_results_c", "test_ansi_math1_codegen", "test_ansi_math2_codegen", "test_complicated_codegen", "test_loops_c", "test_dummy_loops_c", "test_partial_loops_c", "test_output_arg_c", "test_output_arg_c_reserved_words", "test_ccode_results_named_ordered", "test_ccode_matrixsymbol_slice", "test_ccode_cse", "test_empty_f_code", "test_empty_f_code_with_header", "test_empty_f_header", "test_simple_f_code", "test_numbersymbol_f_code", "test_erf_f_code", "test_f_code_argument_order", "test_simple_f_header", "test_simple_f_codegen", "test_multiple_results_f", "test_no_results_f", "test_intrinsic_math_codegen", "test_intrinsic_math2_codegen", "test_complicated_codegen_f95", "test_loops", "test_dummy_loops_f95", "test_loops_InOut", "test_partial_loops_f", "test_output_arg_f", "test_inline_function", "test_f_code_call_signature_wrap", "test_check_case", "test_check_case_false_positive", "test_c_fortran_omit_routine_name", "test_fcode_matrix_output", "test_fcode_results_named_ordered", "test_fcode_matrixsymbol_slice", "test_fcode_matrixsymbol_slice_autoname", "test_global_vars", "test_custom_codegen", "test_c_with_printer"]}
{"instance_id": "sympy__sympy-16988", "tests_passing_in_original_repo": ["test_imageset", "test_interval_arguments", "test_interval_symbolic_end_points", "test_union", "test_union_iter", "test_difference", "test_Complement", "test_complement", "test_intersect1", "test_intersection", "test_issue_9623", "test_is_disjoint", "test_ProductSet_of_single_arg_is_arg", "test_interval_subs", "test_interval_to_mpi", "test_measure", "test_is_subset", "test_is_proper_subset", "test_is_superset", "test_is_proper_superset", "test_contains", "test_interval_symbolic", "test_union_contains", "test_is_number", "test_Interval_is_left_unbounded", "test_Interval_is_right_unbounded", "test_Interval_as_relational", "test_Finite_as_relational", "test_Union_as_relational", "test_Intersection_as_relational", "test_EmptySet", "test_finite_basic", "test_powerset", "test_product_basic", "test_real", "test_supinf", "test_universalset", "test_Union_of_ProductSets_shares", "test_Interval_free_symbols", "test_image_interval", "test_image_piecewise", "test_image_FiniteSet", "test_image_Union", "test_image_EmptySet", "test_issue_5724_7680", "test_boundary", "test_boundary_Union", "test_boundary_ProductSet", "test_boundary_ProductSet_line", "test_is_open", "test_is_closed", "test_closure", "test_interior", "test_issue_7841", "test_Eq", "test_SymmetricDifference", "test_issue_9536", "test_issue_9637", "test_issue_9956", "test_issue_Symbol_inter", "test_issue_11827", "test_issue_10113", "test_issue_10248", "test_issue_9447", "test_issue_10337", "test_issue_10326", "test_issue_2799", "test_issue_9706", "test_issue_8257", "test_issue_10931", "test_issue_11174", "test_finite_set_intersection", "test_union_intersection_constructor", "test_Union_contains"]}
{"instance_id": "sympy__sympy-17022", "tests_passing_in_original_repo": ["test_numpy_piecewise_regression", "test_PythonCodePrinter", "test_MpmathPrinter", "test_NumPyPrinter", "test_SciPyPrinter", "test_pycode_reserved_words", "test_printmethod", "test_codegen_ast_nodes", "test_issue_14283"]}
{"instance_id": "sympy__sympy-17139", "tests_passing_in_original_repo": ["test_TR1", "test_TR2", "test_TR2i", "test_TR3", "test__TR56", "test_TR5", "test_TR6", "test_TR7", "test_TR8", "test_TR9", "test_TR10", "test_TR10i", "test_TR11", "test_TR12", "test_TR13", "test_L", "test_fu", "test_objective", "test_process_common_addends", "test_trig_split", "test_TRmorrie", "test_TRpower", "test_hyper_as_trig", "test_TR12i", "test_TR14", "test_TR15_16_17", "test_issue_7263", "test_simplify_expr", "test_issue_3557", "test_simplify_other", "test_simplify_complex", "test_simplify_ratio", "test_simplify_measure", "test_simplify_rational", "test_simplify_issue_1308", "test_issue_5652", "test_simplify_fail1", "test_nthroot", "test_nthroot1", "test_separatevars", "test_separatevars_advanced_factor", "test_hypersimp", "test_nsimplify", "test_issue_9448", "test_extract_minus_sign", "test_diff", "test_logcombine_1", "test_logcombine_complex_coeff", "test_issue_5950", "test_posify", "test_issue_4194", "test_as_content_primitive", "test_signsimp", "test_besselsimp", "test_Piecewise", "test_polymorphism", "test_issue_from_PR1599", "test_issue_6811", "test_issue_6920", "test_issue_7001", "test_inequality_no_auto_simplify", "test_issue_9398", "test_issue_9324_simplify", "test_issue_13474", "test_simplify_function_inverse", "test_clear_coefficients", "test_nc_simplify", "test_issue_15965"]}
{"instance_id": "sympy__sympy-17630", "tests_passing_in_original_repo": ["test_bc_matmul", "test_bc_matadd", "test_bc_transpose", "test_bc_dist_diag", "test_block_plus_ident", "test_BlockMatrix", "test_block_collapse_explicit_matrices", "test_BlockMatrix_trace", "test_BlockMatrix_Determinant", "test_squareBlockMatrix", "test_BlockDiagMatrix", "test_blockcut", "test_reblock_2x2", "test_deblock", "test_sort_key", "test_matadd_sympify", "test_matadd_of_matrices", "test_doit_args"]}
{"instance_id": "sympy__sympy-17655", "tests_passing_in_original_repo": ["test_point", "test_point3D", "test_Point2D", "test_issue_9214", "test_issue_11617", "test_transform", "test_concyclic_doctest_bug", "test_arguments", "test_unit", "test_dot", "test__normalize_dimension"]}
{"instance_id": "sympy__sympy-18057", "tests_passing_in_original_repo": ["test_basic", "test_ibasic", "test_relational", "test_relational_assumptions", "test_basic_nostr", "test_series_expansion_for_uniform_order", "test_leadterm", "test_as_leading_term", "test_leadterm2", "test_leadterm3", "test_as_leading_term2", "test_as_leading_term3", "test_as_leading_term4", "test_as_leading_term_stub", "test_as_leading_term_deriv_integral", "test_atoms", "test_is_polynomial", "test_is_rational_function", "test_is_algebraic_expr", "test_SAGE1", "test_SAGE2", "test_SAGE3", "test_len", "test_doit", "test_attribute_error", "test_args", "test_noncommutative_expand_issue_3757", "test_as_numer_denom", "test_trunc", "test_as_independent", "test_replace", "test_find", "test_count", "test_has_basics", "test_has_multiple", "test_has_piecewise", "test_has_iterative", "test_has_integrals", "test_has_tuple", "test_has_units", "test_has_polys", "test_has_physics", "test_as_poly_as_expr", "test_nonzero", "test_is_number", "test_as_coeff_add", "test_as_coeff_mul", "test_as_coeff_exponent", "test_extractions", "test_nan_extractions", "test_coeff", "test_coeff2", "test_coeff2_0", "test_coeff_expand", "test_integrate", "test_as_base_exp", "test_issue_4963", "test_action_verbs", "test_as_powers_dict", "test_as_coefficients_dict", "test_args_cnc", "test_new_rawargs", "test_issue_5226", "test_free_symbols", "test_issue_5300", "test_floordiv", "test_as_coeff_Mul", "test_as_coeff_Add", "test_expr_sorting", "test_as_ordered_factors", "test_as_ordered_terms", "test_sort_key_atomic_expr", "test_eval_interval", "test_eval_interval_zoo", "test_primitive", "test_issue_5843", "test_is_constant", "test_equals", "test_random", "test_round", "test_held_expression_UnevaluatedExpr", "test_round_exception_nostr", "test_extract_branch_factor", "test_identity_removal", "test_float_0", "test_issue_6325", "test_issue_7426", "test_issue_11122", "test_issue_10651", "test_issue_10161", "test_issue_10755", "test_issue_11877", "test_normal", "test_expr", "test_var", "test_var_return", "test_var_accepts_comma", "test_var_keywords"]}
{"instance_id": "sympy__sympy-18087", "tests_passing_in_original_repo": ["test_decompose_power", "test_Factors", "test_Term", "test_gcd_terms", "test_factor_terms", "test_xreplace", "test_factor_nc", "test_issue_6360", "test_issue_7903", "test_issue_8263", "test_monotonic_sign", "test_TR1", "test_TR2", "test_TR2i", "test_TR3", "test__TR56", "test_TR5", "test_TR6", "test_TR7", "test_TR8", "test_TR9", "test_TR10", "test_TR10i", "test_TR11", "test_TR12", "test_TR13", "test_L", "test_fu", "test_objective", "test_process_common_addends", "test_trig_split", "test_TRmorrie", "test_TRpower", "test_hyper_as_trig", "test_TR12i", "test_TR14", "test_TR15_16_17"]}
{"instance_id": "sympy__sympy-18189", "tests_passing_in_original_repo": ["test_input_format", "test_univariate", "test_classify_diop", "test_linear", "test_quadratic_simple_hyperbolic_case", "test_quadratic_elliptical_case", "test_quadratic_parabolic_case", "test_quadratic_perfect_square", "test_quadratic_non_perfect_square", "test_issue_9106", "test_issue_18138", "test_DN", "test_bf_pell", "test_length", "test_transformation_to_pell", "test_find_DN", "test_ldescent", "test_diop_ternary_quadratic_normal", "test_transformation_to_normal", "test_diop_ternary_quadratic", "test_square_factor", "test_parametrize_ternary_quadratic", "test_no_square_ternary_quadratic", "test_descent", "test_diophantine", "test_general_pythagorean", "test_diop_general_sum_of_squares_quick", "test_diop_partition", "test_prime_as_sum_of_two_squares", "test_sum_of_three_squares", "test_sum_of_four_squares", "test_power_representation", "test_assumptions", "test_diopcoverage", "test_holzer", "test_issue_9539", "test_issue_8943", "test_diop_sum_of_even_powers", "test_sum_of_squares_powers", "test__can_do_sum_of_squares", "test_diophantine_permute_sign", "test_issue_9538"]}
{"instance_id": "sympy__sympy-18199", "tests_passing_in_original_repo": ["test_invert_real", "test_invert_complex", "test_domain_check", "test_issue_11536", "test_issue_17479", "test_is_function_class_equation", "test_garbage_input", "test_solve_mul", "test_solve_invert", "test_errorinverses", "test_solve_polynomial", "test_return_root_of", "test__has_rational_power", "test_solveset_sqrt_1", "test_solveset_sqrt_2", "test_solve_polynomial_symbolic_param", "test_solve_rational", "test_solveset_real_gen_is_pow", "test_no_sol", "test_sol_zero_real", "test_no_sol_rational_extragenous", "test_solve_polynomial_cv_1a", "test_solveset_real_rational", "test_solveset_real_log", "test_poly_gens", "test_solve_abs", "test_issue_9565", "test_issue_10069", "test_real_imag_splitting", "test_units", "test_solve_only_exp_1", "test_atan2", "test_piecewise_solveset", "test_solveset_complex_polynomial", "test_sol_zero_complex", "test_solveset_complex_rational", "test_solveset_complex_exp", "test_solveset_real_exp", "test_solve_complex_log", "test_solve_complex_sqrt", "test_solveset_complex_tan", "test_solve_invalid_sol", "test_solveset", "test__solveset_multi", "test_conditionset", "test_solveset_domain", "test_improve_coverage", "test_issue_9522", "test_solvify", "test_abs_invert_solvify", "test_linear_eq_to_matrix", "test_issue_16577", "test_linsolve", "test_linsolve_immutable", "test_solve_decomposition", "test_nonlinsolve_basic", "test_nonlinsolve_abs", "test_raise_exception_nonlinsolve", "test_trig_system", "test_nonlinsolve_positive_dimensional", "test_nonlinsolve_polysys", "test_nonlinsolve_using_substitution", "test_nonlinsolve_complex", "test_issue_5132_1", "test_issue_5132_2", "test_issue_6752", "test_issue_2777", "test_issue_8828", "test_nonlinsolve_conditionset", "test_substitution_basic", "test_issue_5132_substitution", "test_raises_substitution", "test_issue_9556", "test_issue_9611", "test_issue_9557", "test_issue_9778", "test_issue_10214", "test_issue_9849", "test_issue_9953", "test_issue_9913", "test_issue_10397", "test_issue_14987", "test_simplification", "test_issue_10555", "test_issue_8715", "test_issue_11174", "test_issue_11534", "test_issue_10477", "test_issue_10671", "test_issue_11064", "test_issue_12478", "test_issue_12429", "test_solveset_arg", "test__is_finite_with_finite_vars", "test_issue_13550", "test_issue_13849", "test_issue_14223", "test_issue_10158", "test_issue_14300", "test_issue_14454", "test_term_factors", "test_transolve", "test_exponential_real", "test_expo_conditionset", "test_exponential_symbols", "test_is_exponential", "test_solve_exponential", "test_logarithmic", "test_is_logarithmic", "test_solve_logarithm", "test_linear_coeffs", "test_is_modular", "test_invert_modular", "test_solve_modular"]}
{"instance_id": "sympy__sympy-18532", "tests_passing_in_original_repo": ["test_alignof", "test_CommaOperator", "test_goto_Label", "test_PreDecrement", "test_PostDecrement", "test_PreIncrement", "test_PostIncrement", "test_sizeof", "test_struct", "test__aresame", "test_structure", "test_equality", "test_matches_basic", "test_has", "test_subs", "test_subs_with_unicode_symbols", "test_atoms", "test_free_symbols_empty", "test_doit", "test_S", "test_xreplace", "test_preorder_traversal", "test_sorted_args", "test_call", "test_rewrite", "test_literal_evalf_is_number_is_zero_is_comparable", "test_as_Basic", "test_atomic", "test_as_dummy", "test_canonical_variables"]}
{"instance_id": "sympy__sympy-18621", "tests_passing_in_original_repo": ["test_bc_matmul", "test_bc_matadd", "test_bc_transpose", "test_bc_dist_diag", "test_block_plus_ident", "test_BlockMatrix", "test_block_collapse_explicit_matrices", "test_issue_17624", "test_BlockMatrix_trace", "test_BlockMatrix_Determinant", "test_squareBlockMatrix", "test_BlockDiagMatrix", "test_blockcut", "test_reblock_2x2", "test_deblock"]}
{"instance_id": "sympy__sympy-18698", "tests_passing_in_original_repo": ["test_Poly_mixed_operations", "test_Poly_from_dict", "test_Poly_from_list", "test_Poly_from_poly", "test_Poly_from_expr", "test_Poly__new__", "test_Poly__args", "test_Poly__gens", "test_Poly_zero", "test_Poly_one", "test_Poly__unify", "test_Poly_free_symbols", "test_PurePoly_free_symbols", "test_Poly__eq__", "test_PurePoly__eq__", "test_PurePoly_Poly", "test_Poly_get_domain", "test_Poly_set_domain", "test_Poly_get_modulus", "test_Poly_set_modulus", "test_Poly_add_ground", "test_Poly_sub_ground", "test_Poly_mul_ground", "test_Poly_quo_ground", "test_Poly_exquo_ground", "test_Poly_abs", "test_Poly_neg", "test_Poly_add", "test_Poly_sub", "test_Poly_mul", "test_issue_13079", "test_Poly_sqr", "test_Poly_pow", "test_Poly_divmod", "test_Poly_eq_ne", "test_Poly_nonzero", "test_Poly_properties", "test_Poly_is_irreducible", "test_Poly_subs", "test_Poly_replace", "test_Poly_reorder", "test_Poly_ltrim", "test_Poly_has_only_gens", "test_Poly_to_ring", "test_Poly_to_field", "test_Poly_to_exact", "test_Poly_retract", "test_Poly_slice", "test_Poly_coeffs", "test_Poly_monoms", "test_Poly_terms", "test_Poly_all_coeffs", "test_Poly_all_monoms", "test_Poly_all_terms", "test_Poly_termwise", "test_Poly_length", "test_Poly_as_dict", "test_Poly_as_expr", "test_Poly_lift", "test_Poly_deflate", "test_Poly_inject", "test_Poly_eject", "test_Poly_exclude", "test_Poly__gen_to_level", "test_Poly_degree", "test_Poly_degree_list", "test_Poly_total_degree", "test_Poly_homogenize", "test_Poly_homogeneous_order", "test_Poly_LC", "test_Poly_TC", "test_Poly_EC", "test_Poly_coeff", "test_Poly_nth", "test_Poly_LM", "test_Poly_LM_custom_order", "test_Poly_EM", "test_Poly_LT", "test_Poly_ET", "test_Poly_max_norm", "test_Poly_l1_norm", "test_Poly_clear_denoms", "test_Poly_rat_clear_denoms", "test_Poly_integrate", "test_Poly_diff", "test_issue_9585", "test_Poly_eval", "test_Poly___call__", "test_parallel_poly_from_expr", "test_pdiv", "test_div", "test_issue_7864", "test_gcdex", "test_revert", "test_subresultants", "test_resultant", "test_discriminant", "test_dispersion", "test_gcd_list", "test_lcm_list", "test_gcd", "test_gcd_numbers_vs_polys", "test_terms_gcd", "test_trunc", "test_monic", "test_content", "test_primitive", "test_compose", "test_shift", "test_transform", "test_sturm", "test_gff", "test_norm", "test_sqf_norm", "test_sqf", "test_factor", "test_factor_large", "test_factor_noeval", "test_intervals", "test_refine_root", "test_count_roots", "test_Poly_root", "test_real_roots", "test_all_roots", "test_nroots", "test_ground_roots", "test_nth_power_roots_poly", "test_torational_factor_list", "test_cancel", "test_reduced", "test_groebner", "test_fglm", "test_is_zero_dimensional", "test_GroebnerBasis", "test_poly", "test_keep_coeff", "test_poly_matching_consistency", "test_noncommutative", "test_to_rational_coeffs", "test_factor_terms", "test_as_list", "test_issue_11198", "test_Poly_precision", "test_issue_12400", "test_issue_14364", "test_issue_15669", "test_issue_17988"]}
{"instance_id": "sympy__sympy-18835", "tests_passing_in_original_repo": ["test_is_palindromic", "test_postorder_traversal", "test_flatten", "test_iproduct", "test_group", "test_subsets", "test_variations", "test_cartes", "test_filter_symbols", "test_numbered_symbols", "test_sift", "test_take", "test_dict_merge", "test_prefixes", "test_postfixes", "test_topological_sort", "test_strongly_connected_components", "test_connected_components", "test_rotate", "test_multiset_partitions", "test_multiset_combinations", "test_multiset_permutations", "test_partitions", "test_binary_partitions", "test_bell_perm", "test_involutions", "test_derangements", "test_necklaces", "test_bracelets", "test_generate_oriented_forest", "test_unflatten", "test_common_prefix_suffix", "test_minlex", "test_ordered", "test_runs", "test_reshape", "test_uniq", "test_kbins", "test_has_dups", "test__partition", "test_ordered_partitions", "test_rotations"]}
{"instance_id": "sympy__sympy-19007", "tests_passing_in_original_repo": ["test_bc_matmul", "test_bc_matadd", "test_bc_transpose", "test_bc_dist_diag", "test_block_plus_ident", "test_BlockMatrix", "test_block_collapse_explicit_matrices", "test_issue_17624", "test_issue_18618", "test_BlockMatrix_trace", "test_BlockMatrix_Determinant", "test_squareBlockMatrix", "test_BlockDiagMatrix", "test_blockcut", "test_reblock_2x2", "test_deblock", "test_symbolic_indexing", "test_add_index", "test_mul_index", "test_pow_index", "test_transpose_index", "test_Identity_index", "test_block_index", "test_slicing", "test_errors", "test_matrix_expression_to_indices"]}
{"instance_id": "sympy__sympy-19254", "tests_passing_in_original_repo": ["test_dup_trial_division", "test_dmp_trial_division", "test_dup_zz_mignotte_bound", "test_dmp_zz_mignotte_bound", "test_dup_zz_hensel_step", "test_dup_zz_hensel_lift", "test_dup_zz_irreducible_p", "test_dup_cyclotomic_p", "test_dup_zz_cyclotomic_poly", "test_dup_zz_cyclotomic_factor", "test_dup_zz_factor", "test_dmp_zz_wang", "test_issue_6355", "test_dmp_zz_factor", "test_dup_ext_factor", "test_dmp_ext_factor", "test_dup_factor_list", "test_dmp_factor_list", "test_dup_irreducible_p"]}
{"instance_id": "sympy__sympy-19487", "tests_passing_in_original_repo": ["test_subs", "test_subs_Matrix", "test_subs_AccumBounds", "test_trigonometric", "test_powers", "test_logexppow", "test_bug", "test_subbug1", "test_subbug2", "test_dict_set", "test_dict_ambigous", "test_deriv_sub_bug3", "test_equality_subs1", "test_equality_subs2", "test_issue_3742", "test_subs_dict1", "test_mul", "test_subs_simple", "test_subs_constants", "test_subs_commutative", "test_subs_noncommutative", "test_subs_basic_funcs", "test_subs_wild", "test_subs_mixed", "test_division", "test_add", "test_subs_issue_4009", "test_functions_subs", "test_derivative_subs", "test_derivative_subs2", "test_derivative_subs3", "test_issue_5284", "test_subs_iter", "test_subs_dict", "test_no_arith_subs_on_floats", "test_issue_5651", "test_issue_6075", "test_issue_6079", "test_issue_4680", "test_issue_6158", "test_Function_subs", "test_simultaneous_subs", "test_issue_6419_6421", "test_issue_6559", "test_issue_5261", "test_issue_6923", "test_2arg_hack", "test_noncommutative_subs", "test_issue_2877", "test_issue_5910", "test_issue_5217", "test_issue_10829", "test_pow_eval_subs_no_cache", "test_RootOf_issue_10092", "test_issue_8886", "test_issue_12657", "test_recurse_Application_args", "test_Subs_subs", "test_issue_13333", "test_issue_15234", "test_issue_6976", "test_issue_11746", "test_issue_17823", "test_re", "test_im", "test_sign", "test_as_real_imag", "test_Abs", "test_Abs_rewrite", "test_Abs_real", "test_Abs_properties", "test_abs", "test_arg", "test_arg_rewrite", "test_adjoint", "test_conjugate", "test_conjugate_transpose", "test_transpose", "test_polarify", "test_unpolarify", "test_issue_4035", "test_issue_3206", "test_issue_4754_derivative_conjugate", "test_derivatives_issue_4757", "test_issue_11413", "test_periodic_argument", "test_principal_branch", "test_issue_14216", "test_issue_14238", "test_zero_assumptions"]}
{"instance_id": "sympy__sympy-20049", "tests_passing_in_original_repo": ["test_point_v1pt_theorys", "test_point_a1pt_theorys", "test_point_v2pt_theorys", "test_point_a2pt_theorys", "test_point_funcs", "test_point_pos"]}
{"instance_id": "sympy__sympy-20154", "tests_passing_in_original_repo": ["test_is_palindromic", "test_postorder_traversal", "test_flatten", "test_iproduct", "test_group", "test_subsets", "test_variations", "test_cartes", "test_filter_symbols", "test_numbered_symbols", "test_sift", "test_take", "test_dict_merge", "test_prefixes", "test_postfixes", "test_topological_sort", "test_strongly_connected_components", "test_connected_components", "test_rotate", "test_multiset_partitions", "test_multiset_combinations", "test_multiset_permutations", "test_partitions", "test_binary_partitions", "test_bell_perm", "test_involutions", "test_derangements", "test_necklaces", "test_bracelets", "test_generate_oriented_forest", "test_unflatten", "test_common_prefix_suffix", "test_minlex", "test_ordered", "test_runs", "test_reshape", "test_uniq", "test_kbins", "test_has_dups", "test__partition", "test_ordered_partitions", "test_rotations"]}
{"instance_id": "sympy__sympy-20212", "tests_passing_in_original_repo": ["test_rational", "test_large_rational", "test_negative_real", "test_expand", "test_issue_3449", "test_issue_3866", "test_negative_one", "test_issue_4362", "test_Pow_Expr_args", "test_Pow_signs", "test_power_with_noncommutative_mul_as_base", "test_power_rewrite_exp", "test_zero", "test_pow_as_base_exp", "test_nseries", "test_issue_6100_12942_4473", "test_issue_6208", "test_issue_6990", "test_issue_6068", "test_issue_6782", "test_issue_6653", "test_issue_6429", "test_issue_7638", "test_issue_8582", "test_issue_8650", "test_issue_13914", "test_better_sqrt", "test_issue_2993", "test_issue_17450", "test_issue_18190", "test_issue_14815", "test_issue_18509", "test_issue_18762"]}
{"instance_id": "sympy__sympy-20322", "tests_passing_in_original_repo": ["test_bug1", "test_Symbol", "test_arit0", "test_div", "test_pow", "test_pow2", "test_pow3", "test_mod_pow", "test_pow_E", "test_pow_issue_3516", "test_pow_im", "test_real_mul", "test_ncmul", "test_mul_add_identity", "test_ncpow", "test_powerbug", "test_Mul_doesnt_expand_exp", "test_Mul_is_integer", "test_Add_Mul_is_integer", "test_Add_Mul_is_finite", "test_Mul_is_even_odd", "test_evenness_in_ternary_integer_product_with_even", "test_oddness_in_ternary_integer_product_with_even", "test_Mul_is_rational", "test_Add_is_rational", "test_Add_is_even_odd", "test_Mul_is_negative_positive", "test_Mul_is_negative_positive_2", "test_Mul_is_nonpositive_nonnegative", "test_Add_is_negative_positive", "test_Add_is_nonpositive_nonnegative", "test_Pow_is_integer", "test_Pow_is_real", "test_real_Pow", "test_Pow_is_finite", "test_Pow_is_even_odd", "test_Pow_is_negative_positive", "test_Pow_is_zero", "test_Pow_is_nonpositive_nonnegative", "test_Mul_is_imaginary_real", "test_Mul_hermitian_antihermitian", "test_Add_is_comparable", "test_Mul_is_comparable", "test_Pow_is_comparable", "test_Add_is_positive_2", "test_Add_is_irrational", "test_Mul_is_irrational", "test_issue_3531", "test_issue_3531b", "test_bug3", "test_suppressed_evaluation", "test_AssocOp_doit", "test_Add_Mul_Expr_args", "test_Add_as_coeff_mul", "test_Pow_as_coeff_mul_doesnt_expand", "test_issue_3514_18626", "test_make_args", "test_issue_5126", "test_Rational_as_content_primitive", "test_Add_as_content_primitive", "test_Mul_as_content_primitive", "test_Pow_as_content_primitive", "test_issue_5460", "test_product_irrational", "test_issue_5919", "test_Mod", "test_Mod_Pow", "test_Mod_is_integer", "test_Mod_is_nonposneg", "test_issue_6001", "test_polar", "test_issue_6040", "test_issue_6082", "test_issue_6077", "test_mul_flatten_oo", "test_add_flatten", "test_issue_5160_6087_6089_6090", "test_float_int_round", "test_issue_6611a", "test_denest_add_mul", "test_mul_coeff", "test_mul_zero_detection", "test_Mul_with_zero_infinite", "test_Mul_does_not_cancel_infinities", "test_Mul_does_not_distribute_infinity", "test_issue_8247_8354", "test_Add_is_zero", "test_issue_14392", "test_divmod", "test__neg__"]}
{"instance_id": "sympy__sympy-20442", "tests_passing_in_original_repo": ["test_str_repr", "test_eq", "test_convert_to", "test_Quantity_definition", "test_abbrev", "test_print", "test_Quantity_eq", "test_add_sub", "test_quantity_abs", "test_check_unit_consistency", "test_mul_div", "test_units", "test_issue_quart", "test_issue_5565", "test_find_unit", "test_Quantity_derivative", "test_quantity_postprocessing", "test_factor_and_dimension", "test_dimensional_expr_of_derivative", "test_get_dimensional_expr_with_function", "test_binary_information", "test_conversion_with_2_nonstandard_dimensions", "test_eval_subs", "test_issue_14932", "test_issue_14547"]}
{"instance_id": "sympy__sympy-20590", "tests_passing_in_original_repo": ["test__aresame", "test_structure", "test_equality", "test_matches_basic", "test_has", "test_subs", "test_subs_with_unicode_symbols", "test_atoms", "test_free_symbols_empty", "test_doit", "test_S", "test_xreplace", "test_preorder_traversal", "test_sorted_args", "test_call", "test_rewrite", "test_literal_evalf_is_number_is_zero_is_comparable", "test_as_Basic", "test_atomic", "test_as_dummy", "test_canonical_variables"]}
{"instance_id": "sympy__sympy-20639", "tests_passing_in_original_repo": ["test_pretty_ascii_str", "test_pretty_unicode_str", "test_upretty_greek", "test_upretty_multiindex", "test_upretty_sub_super", "test_upretty_subs_missing_in_24", "test_missing_in_2X_issue_9047", "test_upretty_modifiers", "test_pretty_Cycle", "test_pretty_Permutation", "test_pretty_basic", "test_negative_fractions", "test_issue_5524", "test_pretty_ordering", "test_EulerGamma", "test_GoldenRatio", "test_pretty_relational", "test_Assignment", "test_AugmentedAssignment", "test_pretty_rational", "test_pretty_functions", "test_pretty_sqrt", "test_pretty_sqrt_char_knob", "test_pretty_sqrt_longsymbol_no_sqrt_char", "test_pretty_KroneckerDelta", "test_pretty_product", "test_pretty_Lambda", "test_pretty_TransferFunction", "test_pretty_Series", "test_pretty_Parallel", "test_pretty_Feedback", "test_pretty_order", "test_pretty_derivatives", "test_pretty_integrals", "test_pretty_matrix", "test_pretty_ndim_arrays", "test_tensor_TensorProduct", "test_diffgeom_print_WedgeProduct", "test_Adjoint", "test_pretty_Trace_issue_9044", "test_MatrixSlice", "test_MatrixExpressions", "test_pretty_dotproduct", "test_pretty_piecewise", "test_pretty_ITE", "test_pretty_seq", "test_any_object_in_sequence", "test_print_builtin_set", "test_pretty_sets", "test_pretty_SetExpr", "test_pretty_ImageSet", "test_pretty_ConditionSet", "test_pretty_ComplexRegion", "test_pretty_Union_issue_10414", "test_pretty_Intersection_issue_10414", "test_ProductSet_exponent", "test_ProductSet_parenthesis", "test_ProductSet_prod_char_issue_10413", "test_pretty_sequences", "test_pretty_FourierSeries", "test_pretty_FormalPowerSeries", "test_pretty_limits", "test_pretty_ComplexRootOf", "test_pretty_RootSum", "test_GroebnerBasis", "test_pretty_UniversalSet", "test_pretty_Boolean", "test_pretty_Domain", "test_pretty_prec", "test_pprint", "test_pretty_class", "test_pretty_no_wrap_line", "test_settings", "test_pretty_sum", "test_units", "test_pretty_Subs", "test_gammas", "test_beta", "test_function_subclass_different_name", "test_SingularityFunction", "test_deltas", "test_hyper", "test_meijerg", "test_noncommutative", "test_pretty_special_functions", "test_pretty_geometry", "test_expint", "test_elliptic_functions", "test_RandomDomain", "test_PrettyPoly", "test_issue_6285", "test_issue_6359", "test_issue_6739", "test_complicated_symbol_unchanged", "test_categories", "test_PrettyModules", "test_QuotientRing", "test_Homomorphism", "test_Tr", "test_pretty_Add", "test_issue_7179", "test_issue_7180", "test_pretty_Complement", "test_pretty_SymmetricDifference", "test_pretty_Contains", "test_issue_8292", "test_issue_4335", "test_issue_8344", "test_issue_6324", "test_issue_7927", "test_issue_6134", "test_issue_9877", "test_issue_13651", "test_pretty_primenu", "test_pretty_primeomega", "test_pretty_Mod", "test_issue_11801", "test_pretty_UnevaluatedExpr", "test_issue_10472", "test_MatrixElement_printing", "test_issue_12675", "test_MatrixSymbol_printing", "test_degree_printing", "test_vector_expr_pretty_printing", "test_pretty_print_tensor_expr", "test_pretty_print_tensor_partial_deriv", "test_issue_15560", "test_print_lerchphi", "test_issue_15583", "test_matrixSymbolBold", "test_center_accent", "test_imaginary_unit", "test_str_special_matrices", "test_pretty_misc_functions", "test_hadamard_power", "test_issue_17258", "test_is_combining", "test_issue_17857", "test_issue_18272", "test_Str"]}
{"instance_id": "sympy__sympy-21055", "tests_passing_in_original_repo": ["test_Abs", "test_pow1", "test_pow2", "test_exp", "test_Piecewise", "test_atan2", "test_re", "test_im", "test_complex", "test_sign", "test_func_args", "test_eval_refine", "test_refine_issue_12724"]}
{"instance_id": "sympy__sympy-21171", "tests_passing_in_original_repo": ["test_printmethod", "test_latex_basic", "test_latex_builtins", "test_latex_SingularityFunction", "test_latex_cycle", "test_latex_permutation", "test_latex_Float", "test_latex_vector_expressions", "test_latex_symbols", "test_latex_functions", "test_function_subclass_different_name", "test_hyper_printing", "test_latex_bessel", "test_latex_fresnel", "test_latex_brackets", "test_latex_indexed", "test_latex_derivatives", "test_latex_subs", "test_latex_integrals", "test_latex_sets", "test_latex_SetExpr", "test_latex_Range", "test_latex_sequences", "test_latex_FourierSeries", "test_latex_FormalPowerSeries", "test_latex_intervals", "test_latex_AccumuBounds", "test_latex_emptyset", "test_latex_universalset", "test_latex_commutator", "test_latex_union", "test_latex_intersection", "test_latex_symmetric_difference", "test_latex_Complement", "test_latex_productset", "test_set_operators_parenthesis", "test_latex_Complexes", "test_latex_Naturals", "test_latex_Naturals0", "test_latex_Integers", "test_latex_ImageSet", "test_latex_ConditionSet", "test_latex_ComplexRegion", "test_latex_Contains", "test_latex_sum", "test_latex_product", "test_latex_limits", "test_latex_log", "test_issue_3568", "test_latex", "test_latex_dict", "test_latex_list", "test_latex_rational", "test_latex_inverse", "test_latex_DiracDelta", "test_latex_Heaviside", "test_latex_KroneckerDelta", "test_latex_LeviCivita", "test_mode", "test_latex_mathieu", "test_latex_Piecewise", "test_latex_Matrix", "test_latex_matrix_with_functions", "test_latex_NDimArray", "test_latex_mul_symbol", "test_latex_issue_4381", "test_latex_issue_4576", "test_latex_pow_fraction", "test_noncommutative", "test_latex_order", "test_latex_Lambda", "test_latex_PolyElement", "test_latex_FracElement", "test_latex_Poly", "test_latex_Poly_order", "test_latex_ComplexRootOf", "test_latex_RootSum", "test_settings", "test_latex_numbers", "test_latex_euler", "test_lamda", "test_custom_symbol_names", "test_matAdd", "test_matMul", "test_latex_MatrixSlice", "test_latex_RandomDomain", "test_PrettyPoly", "test_integral_transforms", "test_PolynomialRingBase", "test_categories", "test_Modules", "test_QuotientRing", "test_Tr", "test_Adjoint", "test_Transpose", "test_Hadamard", "test_ElementwiseApplyFunction", "test_ZeroMatrix", "test_OneMatrix", "test_Identity", "test_boolean_args_order", "test_imaginary", "test_builtins_without_args", "test_latex_greek_functions", "test_translate", "test_other_symbols", "test_modifiers", "test_greek_symbols", "test_fancyset_symbols", "test_builtin_no_args", "test_issue_6853", "test_Mul", "test_Pow", "test_issue_7180", "test_issue_8409", "test_issue_8470", "test_issue_15439", "test_issue_2934", "test_issue_10489", "test_issue_12886", "test_issue_13559", "test_issue_13651", "test_latex_UnevaluatedExpr", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_KroneckerProduct_printing", "test_Series_printing", "test_TransferFunction_printing", "test_Parallel_printing", "test_Feedback_printing", "test_Quaternion_latex_printing", "test_TensorProduct_printing", "test_WedgeProduct_printing", "test_issue_9216", "test_latex_printer_tensor", "test_multiline_latex", "test_issue_15353", "test_trace", "test_print_basic", "test_MatrixSymbol_bold", "test_AppliedPermutation", "test_PermutationMatrix", "test_imaginary_unit", "test_text_re_im", "test_latex_diffgeom", "test_unit_printing", "test_issue_17092", "test_latex_decimal_separator", "test_Str", "test_latex_escape", "test_emptyPrinter", "test_global_settings", "test_pickleable"]}
{"instance_id": "sympy__sympy-21379", "tests_passing_in_original_repo": ["test_bug1", "test_Symbol", "test_arit0", "test_div", "test_pow", "test_pow2", "test_pow3", "test_mod_pow", "test_pow_E", "test_pow_issue_3516", "test_pow_im", "test_real_mul", "test_ncmul", "test_mul_add_identity", "test_ncpow", "test_powerbug", "test_Mul_doesnt_expand_exp", "test_Mul_is_integer", "test_Add_Mul_is_integer", "test_Add_Mul_is_finite", "test_Mul_is_even_odd", "test_evenness_in_ternary_integer_product_with_even", "test_oddness_in_ternary_integer_product_with_even", "test_Mul_is_rational", "test_Add_is_rational", "test_Add_is_even_odd", "test_Mul_is_negative_positive", "test_Mul_is_negative_positive_2", "test_Mul_is_nonpositive_nonnegative", "test_Add_is_negative_positive", "test_Add_is_nonpositive_nonnegative", "test_Pow_is_integer", "test_Pow_is_real", "test_real_Pow", "test_Pow_is_finite", "test_Pow_is_even_odd", "test_Pow_is_negative_positive", "test_Pow_is_zero", "test_Pow_is_nonpositive_nonnegative", "test_Mul_is_imaginary_real", "test_Mul_hermitian_antihermitian", "test_Add_is_comparable", "test_Mul_is_comparable", "test_Pow_is_comparable", "test_Add_is_positive_2", "test_Add_is_irrational", "test_Mul_is_irrational", "test_issue_3531", "test_issue_3531b", "test_bug3", "test_suppressed_evaluation", "test_AssocOp_doit", "test_Add_Mul_Expr_args", "test_Add_as_coeff_mul", "test_Pow_as_coeff_mul_doesnt_expand", "test_issue_3514_18626", "test_make_args", "test_issue_5126", "test_Rational_as_content_primitive", "test_Add_as_content_primitive", "test_Mul_as_content_primitive", "test_Pow_as_content_primitive", "test_issue_5460", "test_product_irrational", "test_issue_5919", "test_Mod", "test_Mod_Pow", "test_Mod_is_integer", "test_Mod_is_nonposneg", "test_issue_6001", "test_polar", "test_issue_6040", "test_issue_6082", "test_issue_6077", "test_mul_flatten_oo", "test_add_flatten", "test_issue_5160_6087_6089_6090", "test_float_int_round", "test_issue_6611a", "test_denest_add_mul", "test_mul_coeff", "test_mul_zero_detection", "test_Mul_with_zero_infinite", "test_Mul_does_not_cancel_infinities", "test_Mul_does_not_distribute_infinity", "test_issue_8247_8354", "test_Add_is_zero", "test_issue_14392", "test_divmod", "test__neg__", "test_issue_18507", "test_issue_17130"]}
{"instance_id": "sympy__sympy-21612", "tests_passing_in_original_repo": ["test_printmethod", "test_Abs", "test_Add", "test_Catalan", "test_ComplexInfinity", "test_Derivative", "test_dict", "test_Dict", "test_Dummy", "test_EulerGamma", "test_Exp", "test_factorial", "test_Function", "test_Geometry", "test_GoldenRatio", "test_TribonacciConstant", "test_ImaginaryUnit", "test_Infinity", "test_Integer", "test_Integral", "test_Interval", "test_AccumBounds", "test_Lambda", "test_Limit", "test_list", "test_Matrix_str", "test_Mul", "test_NaN", "test_NegativeInfinity", "test_Order", "test_Permutation_Cycle", "test_Pi", "test_Poly", "test_PolyRing", "test_FracField", "test_PolyElement", "test_FracElement", "test_GaussianInteger", "test_GaussianRational", "test_Pow", "test_sqrt", "test_Rational", "test_Float", "test_Relational", "test_AppliedBinaryRelation", "test_CRootOf", "test_RootSum", "test_GroebnerBasis", "test_set", "test_SparseMatrix", "test_Sum", "test_Symbol", "test_tuple", "test_Series_str", "test_TransferFunction_str", "test_Parallel_str", "test_Feedback_str", "test_Quaternion_str_printer", "test_Quantity_str", "test_wild_str", "test_wild_matchpy", "test_zeta", "test_issue_3101", "test_issue_3103", "test_issue_4021", "test_sstrrepr", "test_infinity", "test_full_prec", "test_noncommutative", "test_empty_printer", "test_settings", "test_RandomDomain", "test_FiniteSet", "test_UniversalSet", "test_PrettyPoly", "test_categories", "test_Tr", "test_issue_6387", "test_MatMul_MatAdd", "test_MatrixSlice", "test_true_false", "test_Equivalent", "test_Xor", "test_Complement", "test_SymmetricDifference", "test_UnevaluatedExpr", "test_MatrixElement_printing", "test_MatrixSymbol_printing", "test_MatrixExpressions", "test_Subs_printing", "test_issue_15716", "test_str_special_matrices", "test_issue_14567", "test_issue_21119_21460", "test_Str", "test_diffgeom", "test_NDimArray", "test_Predicate", "test_AppliedPredicate"]}
{"instance_id": "sympy__sympy-21614", "tests_passing_in_original_repo": ["test_NumberKind", "test_Add_kind", "test_mul_kind", "test_Symbol_kind", "test_Integral_kind", "test_Matrix_kind"]}
{"instance_id": "sympy__sympy-21627", "tests_passing_in_original_repo": ["test_re", "test_im", "test_sign", "test_as_real_imag", "test_Abs", "test_Abs_rewrite", "test_Abs_real", "test_Abs_properties", "test_abs", "test_arg", "test_arg_rewrite", "test_adjoint", "test_conjugate", "test_conjugate_transpose", "test_transpose", "test_polarify", "test_unpolarify", "test_issue_4035", "test_issue_3206", "test_issue_4754_derivative_conjugate", "test_derivatives_issue_4757", "test_issue_11413", "test_periodic_argument", "test_principal_branch", "test_issue_14216", "test_issue_14238", "test_zero_assumptions"]}
{"instance_id": "sympy__sympy-21847", "tests_passing_in_original_repo": ["test_monomials", "test_monomial_count", "test_monomial_mul", "test_monomial_div", "test_monomial_gcd", "test_monomial_lcm", "test_monomial_max", "test_monomial_pow", "test_monomial_min", "test_monomial_divides"]}
{"instance_id": "sympy__sympy-22005", "tests_passing_in_original_repo": ["test_solve_poly_system", "test_solve_biquadratic", "test_solve_triangulated"]}
{"instance_id": "sympy__sympy-22714", "tests_passing_in_original_repo": ["test_point", "test_point3D", "test_Point2D", "test_issue_9214", "test_issue_11617", "test_transform", "test_concyclic_doctest_bug", "test_arguments", "test_unit", "test_dot", "test__normalize_dimension"]}
{"instance_id": "sympy__sympy-22840", "tests_passing_in_original_repo": ["test_numbered_symbols", "test_preprocess_for_cse", "test_postprocess_for_cse", "test_cse_single", "test_cse_single2", "test_cse_not_possible", "test_nested_substitution", "test_subtraction_opt", "test_multiple_expressions", "test_bypass_non_commutatives", "test_issue_4498", "test_issue_4020", "test_issue_4203", "test_issue_6263", "test_dont_cse_tuples", "test_pow_invpow", "test_postprocess", "test_issue_4499", "test_issue_6169", "test_cse_Indexed", "test_cse_MatrixSymbol", "test_cse_MatrixExpr", "test_Piecewise", "test_ignore_order_terms", "test_name_conflict", "test_name_conflict_cust_symbols", "test_symbols_exhausted_error", "test_issue_7840", "test_issue_8891", "test_issue_11230", "test_hollow_rejection", "test_cse_ignore", "test_cse_ignore_issue_15002", "test_cse__performance", "test_issue_12070", "test_issue_13000", "test_issue_18203", "test_unevaluated_mul", "test_cse_release_variables", "test_cse_list", "test_issue_18991", "test_Routine_argument_order", "test_empty_c_code", "test_empty_c_code_with_comment", "test_empty_c_header", "test_simple_c_code", "test_c_code_reserved_words", "test_numbersymbol_c_code", "test_c_code_argument_order", "test_simple_c_header", "test_simple_c_codegen", "test_multiple_results_c", "test_no_results_c", "test_ansi_math1_codegen", "test_ansi_math2_codegen", "test_complicated_codegen", "test_loops_c", "test_dummy_loops_c", "test_partial_loops_c", "test_output_arg_c", "test_output_arg_c_reserved_words", "test_multidim_c_argument_cse", "test_ccode_results_named_ordered", "test_ccode_matrixsymbol_slice", "test_ccode_cse", "test_ccode_unused_array_arg", "test_empty_f_code", "test_empty_f_code_with_header", "test_empty_f_header", "test_simple_f_code", "test_numbersymbol_f_code", "test_erf_f_code", "test_f_code_argument_order", "test_simple_f_header", "test_simple_f_codegen", "test_multiple_results_f", "test_no_results_f", "test_intrinsic_math_codegen", "test_intrinsic_math2_codegen", "test_complicated_codegen_f95", "test_loops", "test_dummy_loops_f95", "test_loops_InOut", "test_partial_loops_f", "test_output_arg_f", "test_inline_function", "test_f_code_call_signature_wrap", "test_check_case", "test_check_case_false_positive", "test_c_fortran_omit_routine_name", "test_fcode_matrix_output", "test_fcode_results_named_ordered", "test_fcode_matrixsymbol_slice", "test_fcode_matrixsymbol_slice_autoname", "test_global_vars", "test_custom_codegen", "test_c_with_printer"]}
{"instance_id": "sympy__sympy-23117", "tests_passing_in_original_repo": ["test_array_negative_indices", "test_issue_18361"]}
{"instance_id": "sympy__sympy-23191", "tests_passing_in_original_repo": ["test_str_printing", "test_pretty_print_unicode_v", "test_latex_printing"]}
{"instance_id": "sympy__sympy-23262", "tests_passing_in_original_repo": ["test_no_args", "test_single_arg", "test_list_args", "test_nested_args", "test_str_args", "test_own_namespace_1", "test_own_namespace_2", "test_own_module", "test_bad_args", "test_atoms", "test_sympy_lambda", "test_math_lambda", "test_mpmath_lambda", "test_number_precision", "test_mpmath_precision", "test_math_transl", "test_mpmath_transl", "test_empty_modules", "test_exponentiation", "test_sqrt", "test_trig", "test_integral", "test_double_integral", "test_vector_simple", "test_vector_discontinuous", "test_trig_symbolic", "test_trig_float", "test_docs", "test_math", "test_sin", "test_matrix", "test_issue9474", "test_sym_single_arg", "test_sym_list_args", "test_sym_integral", "test_namespace_order", "test_imps", "test_imps_errors", "test_imps_wrong_args", "test_lambdify_imps", "test_dummification", "test_curly_matrix_symbol", "test_python_keywords", "test_lambdify_docstring", "test_special_printers", "test_true_false", "test_issue_2790", "test_issue_12092", "test_issue_14911", "test_ITE", "test_Min_Max", "test_issue_12173", "test_sinc_mpmath", "test_lambdify_dummy_arg", "test_lambdify_mixed_symbol_dummy_args", "test_lambdify_inspect", "test_issue_14941", "test_lambdify_Derivative_arg_issue_16468", "test_imag_real", "test_single_e", "test_beta_math", "test_lambdify_cse"]}
{"instance_id": "sympy__sympy-24066", "tests_passing_in_original_repo": ["test_str_repr", "test_eq", "test_convert_to", "test_Quantity_definition", "test_abbrev", "test_print", "test_Quantity_eq", "test_add_sub", "test_quantity_abs", "test_check_unit_consistency", "test_mul_div", "test_units", "test_issue_quart", "test_issue_5565", "test_find_unit", "test_Quantity_derivative", "test_quantity_postprocessing", "test_factor_and_dimension", "test_dimensional_expr_of_derivative", "test_get_dimensional_expr_with_function", "test_binary_information", "test_conversion_with_2_nonstandard_dimensions", "test_eval_subs", "test_issue_14932", "test_issue_14547", "test_deprecated_quantity_methods", "test_issue_22164", "test_issue_22819", "test_issue_20288", "test_prefixed_property"]}
{"instance_id": "sympy__sympy-24102", "tests_passing_in_original_repo": ["test_mathematica", "test_parser_mathematica_tokenizer"]}
{"instance_id": "sympy__sympy-24152", "tests_passing_in_original_repo": ["test_sparse_matrices", "test_tensor_product_dagger", "test_tensor_product_abstract", "test_tensor_product_expand", "test_tensor_product_commutator", "test_tensor_product_simp", "test_issue_5923"]}
{"instance_id": "sympy__sympy-24213", "tests_passing_in_original_repo": ["test_str_repr", "test_eq", "test_convert_to", "test_Quantity_definition", "test_abbrev", "test_print", "test_Quantity_eq", "test_add_sub", "test_quantity_abs", "test_check_unit_consistency", "test_mul_div", "test_units", "test_issue_quart", "test_issue_5565", "test_find_unit", "test_Quantity_derivative", "test_quantity_postprocessing", "test_factor_and_dimension", "test_dimensional_expr_of_derivative", "test_get_dimensional_expr_with_function", "test_binary_information", "test_conversion_with_2_nonstandard_dimensions", "test_eval_subs", "test_issue_14932", "test_issue_14547", "test_deprecated_quantity_methods", "test_issue_22164", "test_issue_22819", "test_issue_20288", "test_issue_24062", "test_prefixed_property"]}
{"instance_id": "sympy__sympy-24909", "tests_passing_in_original_repo": ["test_prefix_operations", "test_prefix_unit", "test_bases"]}
